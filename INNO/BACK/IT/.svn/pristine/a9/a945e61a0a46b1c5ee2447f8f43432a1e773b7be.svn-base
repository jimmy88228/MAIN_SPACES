<template>
    <div class="cev-root bg-page spin-box">
        <div class="cev-root" v-bar>
            <div class="bg-shadow padding20 list-box">
                <div class="cev-toolbar">
                    <div class="left">
                        <Input class="inputable" placeholder="请输入搜索内容" v-model="keywords" clearable/>
                        <Button type="primary" @click="e=>loadData()">
                            <i class="iconfont min r5 icon-search"></i>搜索
                        </Button>
                    </div>
                    <div class="right">
                        <Upload 
                            :before-upload="handleBeforeUpload" 
                            :format="format"  action="/"
                            :on-format-error="handleFormatError"
                            >
                            <Button type="primary">
                                <i class="iconfont min r5 icon-add"></i>导入名单            
                            </Button>
                        </Upload>
                    </div>
                </div>
                <Table ref="table" class="table" :columns="columns" :data="list" border>
                    <template slot="userInfo" slot-scope="p">
                        <div class="flex-">
                            <img class="item-table-inline-img-small border-radius-circle" :src="p.row.avatar" />
                            <div>{{p.row.userName}}</div>
                        </div>
                    </template>
                    <template slot="action" slot-scope="p">

                        <div class="padding10">
                            <Poptip confirm title="确定删除该用户" @on-ok="deleteUser(p.row)">
                                <Button class="item-table-action" size="small" type="primary">移除</Button>
                            </Poptip>
                        </div>
                    </template>
                </Table>
                <Page
                    v-if="showPage"
                    :total="count"
                    :current="pageIndex"
                    :page-size="pageSize"
                    :page-size-opts="pageSizeOpts"
                    @on-change="e=>loadData(e)"
                    @on-page-size-change="handlePageSizeChange"
                    show-sizer
                    show-elevator
                    show-total
                    transfer
                ></Page>
            </div>
        </div>
        <Spin v-if="loading" class="spin" size="large" fix></Spin>
    </div>
</template>

<script>
import { MainApi } from "@/helper/manager/http-manager";
import ListPageMixin from "@/helper/mixin/list-page";
import Mixin from "./mixin";

export default {
    name: "EnrollList",
    mixins: [ListPageMixin, Mixin],
    components: { },
    data() {
        return {
            format : ['xls','xlsx']
        };
    },
    mounted() {
        this.initParam();
        this.loadData();
    },
    computed: { },
    methods: {
        initParam() {
            let query = this.$route.query || {};
            this.actId = query.actId || 0;
        },
        onLoadData(index, data) {
            if (!(parseInt(this.actId) > 0)) {
                return;
            }
            this.loading = true;
            data = {
                activityId: this.actId,
                stime: "",
                etime: "",
                keywords: this.keywords,
                orderBy: "",
                ...data
            };
            MainApi.postChannelList({
                data: data
            })
                .then(res => {
                    if (res.code === "1") {
                        this.pageIndex = index;
                        let data = res.data;
                        this.data = data;
                    } else {
                        return Promise.reject(res.msg);
                    }
                })
                .catch(msg => {
                    this.$Message.error(msg || "加载失败");
                })
                .finally(() => {
                    this.loading = false;
                });
        },
        checkDetail(id) {
            console.log(id)
        }, 
        diyNetData(api,url,data){
            if(!api || !url || !data){
                return Promise.reject();
            }
            return api[url]({...data})
                    .then(res => {
                        if (res.code === "1") {
                            return Promise.resolve(res.data);
                        } else {
                            return Promise.reject(res.msg);
                        }
                    })
                    .catch(msg => {
                        this.$Message.error(msg || "加载失败");
                        return Promise.reject();
                    })
                    .finally(() => {
                        this.loading = false;
                    });
        },
        handleBeforeUpload(file){
            console.log(file);
            let param = new FormData();
            param.append("channel_excel", file, file.name);
            let extra = {
                activityId:this.actId
            }
            let incParams = {
                params:{
                    activityId:this.actId
                },
                data : param,
            }
            return this.diyNetData(MainApi,'postChannelExcel',incParams).then(res=>{
                this.$Message.success(`成功导入${res}名用户`);
                this.loadData();
            })
        },
        handleFormatError (file) {
            this.$Notice.warning({
                title: '格式不正确',
                desc: `请上传：${this.format.join('、')} 格式的文件`
            });
        },
        deleteUser(item){
            if (!item.id) return;
            this.loading = true;
            let _data = {data:{activityId:this.actId,id:item.id}}; 
            this.diyNetData(MainApi,"postChannelDelete",_data).then(res=>{
                this.$Message.success("删除成功");
                this.list.splice(item._index ,1);
            });
        },
    }
};
</script>
