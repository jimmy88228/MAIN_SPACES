<template>
    <div class="cev-root bg-page spin-box">
        <div class="cev-root" v-bar>
            <div class="bg-shadow padding20 list-box">
                <div class="cev-toolbar">
                    <div class="left">
                        <!-- <Input class="inputable" placeholder="请输入搜索内容" v-model="keywords" clearable/>
                        <Button type="primary" @click="e=>loadData()">
                            <i class="iconfont min r5 icon-search"></i>搜索
                        </Button> -->
                    </div>
                    <div class="right">
                        <Poptip confirm title="其否推送开奖结果" @on-ok="sendResult">
                            <Button type="primary" >推送结果</Button>
                        </Poptip>
                        <Button type="primary" @click="getPrizeList">开奖名单</Button>
                        <Button type="primary" @click="addRule()">
                            <i class="iconfont min r5 icon-add"></i>增加奖项
                        </Button>
                    </div>
                </div>
                <Table ref="table" class="table" :columns="columns" :data="list" border>
                    <template slot="detail" slot-scope="p">
                        <div class="flex-">
                            <img class="item-table-inline-img" :src="p.row.picture" />
                            <span>{{ p.row.name }}</span>
                        </div>
                    </template>
                    <template slot="ruleType" slot-scope="p">
                        <span v-if="p.row.ruleType == 'GOODS'">购买权</span>
                        <span v-else-if="p.row.ruleType == 'COUPON'">优惠券</span>
                    </template>
                    <template slot="prizeRule" slot-scope="p">
                        <div v-if="p.row.ruleType == 'GOODS'">
                            <span v-for="(item, index) in p.row.specList" :key="item.id">{{ item.specName }}<span v-if="index < (p.row.specList.length - 1)"> ; </span></span>
                        </div>
                        <div v-else-if="p.row.ruleType == 'COUPON'">
                            已导入
                            <div>{{ p.row.couponCodes }}</div>
                        </div>
                    </template>
                    <template slot="action" slot-scope="p">
                        <div class="padding10"><Button class="item-table-action " type="primary" size="small" @click="editRule(p.row.ruleId)">编辑</Button></div>
                        <div><Button class="item-table-action" type="primary" @click="getRandomList(p.row)" size="small" >随机生成</Button></div>
                        <div class="padding10"><Button class="item-table-action " type="primary" size="small" @click="getScreenList(p.row.ruleId)">筛选用户</Button></div>
                    </template>
                </Table>
                <Page
                    v-if="showPage"
                    :total="count"
                    :current="pageIndex"
                    :page-size="pageSize"
                    :page-size-opts="pageSizeOpts"
                    @on-change="e=>loadData(e)"
                    @on-page-size-change="handlePageSizeChange"
                    show-sizer
                    show-elevator
                    show-total
                    transfer
                ></Page>
            </div>
        </div>
        <Spin v-if="loading" class="spin" size="large" fix></Spin>
        <modal v-model="showModel" title="优惠券随机开奖" ok-text="开奖" @on-ok="activePrize">
            <div class="coupon-item">
                <EditItem name="可开奖人数">
                    <div slot="edit" >{{ randomData.totalQuantity }}</div>
                </EditItem>
                <EditItem name="待开奖人数">
                    <div slot="edit">{{ randomData.allowQuantity }}</div>
                </EditItem>
                <EditItem name="输入开奖数">
                    <div slot="edit">
                        <Input size="large" placeholder="输入开奖数" type="number"  v-model="randomData.inputValue" clearable />
                    </div>
                </EditItem>
            </div>
        </modal>
    </div>
</template>

<script>
import { MainApi } from "@/helper/manager/http-manager";
import ListPageMixin from "@/helper/mixin/list-page";
import EditItem from "@/support/components/edit-item";
import Mixin from "./mixin";
import Conf from "@/config";
export default {
    name: "RuleList",
    mixins: [ListPageMixin, Mixin],
    components: { EditItem },
    data() {
        return {
            actId: null,
            level: "",
            ruleType: null,
            keywords: null,
            showModel: false,
            randomData: {}
        };
    },
    mounted() {
        this.initParams();
        this.loadData();
    },

    computed: { },
    methods: {
        initParams() {
            let query = this.$route.query || {};
            this.actId = query.actId;
        },
        onLoadData(index, data) {
            this.loading = true;
            MainApi.getRuleList({
                data: {
                    activityId: parseInt(this.actId),
                    stime: "",
                    etime: "",
                    level: this.level,
                    ruleType: this.ruleType,
                    keywords: this.keywords,
                    orderBy: "",
                    brandCode: Conf.BRAND_CODE,
                    ...data
                }
            })
                .then(res => {
                    if (res.code === "1") {
                        this.pageIndex = index;
                        this.data = res.data;
                    } else {
                        return Promise.reject(res.msg);
                    }
                })
                .catch(msg => {
                    this.$Message.error(msg || "加载失败");
                })
                .finally(() => {
                    this.loading = false;
                });
        },
        sendResult() {},
        getScreenList(ruleId) {
            if (!parseInt(ruleId)) return;
            this.$router.push({
                name: "ScreenList",
                query: {
                    ruleId: ruleId,
                    actId: this.actId
                }
            });
        },
        getRandomList(item) {
            if (item.ruleType === "COUPON") {
                getCouponQuantityInfo.call(this, item.ruleId).then((data) => {
                    this.randomData = data;
                    this.randomData.inputValue = 0
                    this.showModel = true;
                })
            } else {
                this.$router.push({
                    name: "RandomList",
                    query: {
                        ruleId: item.ruleId,
                        actId: this.actId
                    }
                });
            }
        },
        getPrizeList() {
            if (!parseInt(this.actId)) return;
            this.$router.push({
                name: "PrizeList",
                query: {
                    actId: this.actId
                }
            });
        },
        activePrize() {
            let warn = "", randomData = this.randomData;
            if (!parseInt(randomData.inputValue)){
                warn = "请输入开奖人数";
            } else if (parseInt(randomData.inputValue) > randomData.allowQuantity){
                warn = "超出了带开奖人数";
            }
            if (warn) {
                this.$Message.warning(warn);
                return;
            }
            activeCouponPrize.call(this, randomData.ruleId, randomData.inputValue);

        },
        editRule(ruleId) {
            if (!parseInt(ruleId)) {
                this.addRule(ruleId);
            }
        },
        addRule(ruleId) {
            this.$router.push({
                name: "RuleEdit",
                query: {
                    ruleId: ruleId || 0,
                    actId: this.actId
                }
            });
        }
    }
};
function getCouponQuantityInfo(ruleId){
    if (!parseInt(ruleId)) return;
    this.loading = true;
    return MainApi.getCouponQuantityInfo({
        data: {
            activityId: this.actId,
            ruleId: ruleId
        }
    }).then(res => {
        if (res.code === "1") {
            return Promise.resolve(res.data);
        } else {
            return Promise.reject(res.msg);
        }
    })
    .catch(msg => {
        this.$Message.error(msg || "加载失败");
    })
    .finally(() => {
        this.loading = false;
    });
}

function activeCouponPrize(ruleId, value) {
    this.loading = true;
    MainApi.rankAddByCounpon({
        data: {
            activityId: parseInt(this.actId),
            ruleId: ruleId,
            num: value
        }
    })
        .then(res => {
            if (res.code === "1") {
                this.$Message.info("设置成功");
                this.loadData();
            } else {
                return Promise.reject(res.msg);
            }
        })
        .catch(msg => {
            this.$Message.error(msg || "加载失败");
        })
        .finally(() => {
            this.loading = false;
        });
}
</script>

<style lang="less" scoped >
    .coupon-item{
        .edit-item{
            display:flex;
        }
    }
 
</style>