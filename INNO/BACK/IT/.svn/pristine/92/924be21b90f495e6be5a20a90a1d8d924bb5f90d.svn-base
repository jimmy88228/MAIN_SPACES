<template>
    <div class="bg-page cev-root spin-box flex-column">
        <div class="cev-root bg-shadow padding10 flex-auto tabs-box">
            <div class="tabs">
                <div class="tabs-header">
                    <div class="tabs-name" :class="{'selected':nowTabs===0}" @click="selectTab(0)">基础设置</div>
                    <div class="tabs-name" :class="{'selected':nowTabs===1}" @click="selectTab(1)">编辑模块</div>
                </div>
                <div class="tabs-content-box">
                    <div class="tabs-content">
                        <transition
                            :enter-active-class="oldNowTabs>nowTabs?'slideInLeft':'slideInRight'"
                            :leave-active-class="oldNowTabs>nowTabs?'slideOutRight':'slideOutLeft'"
                        >
                            <div class="tabs-page animated" v-if="nowTabs===0" key="base">
                                <div class="edit-body cev-max-width">
                                    <div class="edit-title">活动信息</div>
                                    <EditItem name="活动主图" label="必填">
                                        <Upload
                                            slot="edit"
                                            ref="upload"
                                            :show-upload-list="false"
                                            :default-file-list="defaultList"
                                            :on-success="handleSuccess"
                                            :format="['jpg','jpeg','png']"
                                            :max-size="2048"
                                            :on-format-error="handleFormatError"
                                            :on-exceeded-size="handleMaxSize"
                                            :before-upload="handleBeforeUpload"
                                            class="upload-img"
                                            action="/">
                                            <div class="flex-">
                                                <Icon type="md-add"  size="20" />
                                            </div>
                                        </Upload>
                                    </EditItem>
                                    <EditItem name="活动名称" label="必填">
                                        <Input slot="edit" size="large" v-model="layoutName" clearable/>
                                    </EditItem>
                                    <EditItem name="活动时间" label="必填">
                                        <Input slot="edit" size="large" v-model="layoutName" clearable/>
                                    </EditItem>
                                    <EditItem name="展示状态" label="必填">
                                        <RadioGroup slot="edit" v-model="editData.showStatus" size="large">
                                            <Radio :label="index" v-for="(item, index) in showStatusList" :key="index">{{ item.label }}</Radio>
                                        </RadioGroup>
                                    </EditItem>
                                    <div class="edit-title">登记信息</div>
                                    <EditItem name="填写项" description="勾选后用户在抽签时需填写该项">
                                        <CheckboxGroup v-model="editData.fillType" slot="edit">
                                            <Checkbox size="large" v-for="item in fillInList" :label="item.id" :key="item.id">{{ item.label }}</Checkbox>
                                        </CheckboxGroup>
                                    </EditItem>
                                    <EditItem name="发售店铺" description="数字越大，排序越靠前">
                                        <Button type="default" @click="showStore">添加店铺</Button>
                                    </EditItem>
                                    <EditItem name="商品信息" description="数字越大，排序越靠前">
                                        
                                    </EditItem>
                                </div>
                            </div>
                            <div class="tabs-page animated" v-else-if="nowTabs===1" key="detail">
                                <!-- <ModuleEditPanel :module-node="moduleNode"/> -->
                                <div class="edit-body cev-max-width">
                                    <EditItem name="顶部轮播图">
                                        <Upload
                                            slot="edit"
                                            ref="upload"
                                            :show-upload-list="false"
                                            :default-file-list="defaultList"
                                            :on-success="handleSuccess"
                                            :format="['jpg','jpeg','png']"
                                            :max-size="2048"
                                            :on-format-error="handleFormatError"
                                            :on-exceeded-size="handleMaxSize"
                                            :before-upload="handleBeforeUpload"
                                            class="upload-img"
                                            multiple
                                            action="/">
                                            <div class="flex-">
                                                <Icon type="md-add"  size="20" />
                                            </div>
                                        </Upload>
                                    </EditItem>
                                    <EditItem name="活动详情">
                                        <div slot="edit">
                                            <Editor ref="editor" v-model="editData.content"></Editor>
                                        </div>
                                    </EditItem>
                                </div>
                            </div>
                        </transition>
                    </div>
                </div>
            </div>
        </div>
        <div class="bg-bottom-toolbar flex-fixed padding10">
            <div class="cev-toolbar end cev-max-width">
                <Button size="large" type="primary" @click.native="submit">保存</Button>
            </div>
        </div>
        <Spin v-if="loading" class="spin" size="large" fix></Spin>
    </div>
</template>
<script>
import EditItem from "@/support/components/edit-item";
import { MainApi } from "../../../helper/manager/http-manager";
import Editor from "@/components/editor/index";
import StringHelper from "@/helper/utils/string-util";

export default {
    name: "ActvityEdit",
    data() {
        return {
            loading: false,
            isShow: true,
            data: null,
            url: null,
            layoutName: "",
            layoutStatName: "",
            sort: 0,
            enable: false,
            isTest: false,
            moduleNode: null,
            oldNowTabs: 0,
            nowTabs: 0,
            showStatusList: [
                {id: 0, label: "展示"},
                {id: 1, label: "不展示"},
                {id: 2, label: "测试环境展示"}
            ],
            fillInList: [
                {id: 0, label: "姓名"},
                {id: 1, label: "手机"},
                {id: 2, label: "身份证"}
            ],
            editData: {
                showStatus: "",
                fillType: [],
                content: ""
            }
        };
    },

    components: { EditItem, Editor },
    mounted() { },
    computed: { },
    methods: {
        selectTab(index) {
            this.oldNowTabs = this.nowTabs;
            this.nowTabs = index;
        },
        check() {
            if (!StringHelper.trim(this.layoutName)) {
                this.showError("模块名不能为空");
                return false;
            }
            return true;
        },
        showError(err) {
            this.$Message.error(err);
        },
        submit() {
            // if (!this.check()) {
            //     this.selectTab(0);
            //     return;
            // }
            // if (!LayoutUtils.check(this.moduleNode, this.showError)) {
            //     this.selectTab(1);
            //     return;
            // }
            // this.loading = true;
            // const requestInterface = this.layoutModelId
            //     ? MainApi.updateLayoutModel
            //     : MainApi.addLayoutModel;
            // const data = this.layoutModelId
            //     ? {
            //           layoutModelId: this.layoutModelId,
            //           name: this.layoutName,
            //           layoutJson: LayoutUtils.nodeToJson(this.moduleNode),
            //           statName: this.layoutStatName,
            //           sort: this.sort,
            //           enable: this.enable ? 1 : 0,
            //           isTest: this.isTest ? 1 : 0
            //       }
            //     : {
            //           layoutId: this.layoutId,
            //           name: this.layoutName,
            //           layoutJson: LayoutUtils.nodeToJson(this.moduleNode),
            //           statName: this.layoutStatName,
            //           sort: this.sort,
            //           enable: this.enable ? 1 : 0,
            //           isTest: this.isTest ? 1 : 0
            //       };
            // return requestInterface({
            //     data: data
            // })
            //     .then(res => {
            //         if (res.code === "1") {
            //             this.$Message.success(res.msg || "提交成功");
            //             this.$router.back();
            //         } else {
            //             return Promise.reject(res.msg);
            //         }
            //     })
            //     .catch(msg => {
            //         if (StringHelper.trim(msg)) {
            //             this.$Message.error(msg || "数据加载失败");
            //         }
            //     })
            //     .finally(() => {
            //         this.loading = false;
            //     });
        },

        loadData() {
            // this.loading = true;
            // return MainApi.getLayoutModelDetail({
            //     data: {
            //         layoutModelId: this.layoutModelId
            //     }
            // })
            //     .then(res => {
            //         if (res.code === "1") {
            //             this.layoutName = res.data.name || "";
            //             this.layoutStatName = res.data.statName || "";
            //             this.sort = res.data.sort || 0;
            //             this.enable = !!res.data.enable;
            //             this.isTest = !!res.data.isTest;
            //             this.moduleNode = LayoutUtils.JsonToNode(
            //                 res.data.layoutJson
            //             );
            //         } else {
            //             return Promise.reject(res.msg);
            //         }
            //     })
            //     .catch(msg => {
            //         if (StringHelper.trim(msg)) {
            //             this.$Message.error(msg || "数据加载失败");
            //         }
            //     })
            //     .finally(() => {
            //         this.loading = false;
            //     });
        }
    }
};
</script>

<style lang="less" scoped >
    .tabs-box {
        height: 100%;
        display: flex;
        flex-direction: column;
        > * {
            flex: none;
        }
    }
    .tabs {
        flex: 1;
        height: 100%;
        display: flex;
        flex-direction: column;
        .tabs-header {
            width: 100%;
            display: flex;
            border-bottom: 1px solid #efefef;
            .tabs-name {
                height: 40px;
                line-height: 40px;
                padding: 0 20px;
                cursor: pointer;
            }
            .tabs-name.selected {
                color: #2d8cf0;
                border-bottom: 2px solid #2d8cf0;
            }
        }
        .edit-title{
            font-size:16px;
            color: #000;
            font-weight:bold;
        }
        .upload-img{
            width:200px;
            height:150px;
            border:1px solid #ccc;
            border-radius:5px;
            .flex-{
                width:200px;
                height:150px;
                justify-content: center;
                cursor: pointer;
            }
        }
        .tabs-content-box {
            margin-top: 10px;
            position: relative;
            overflow: hidden;
            width: 100%;
            height: 100%;
            .tabs-content {
                position: absolute;
                display: flex;
                overflow: hidden;
                width: 100%;
                height: 100%;
                .tabs-page {
                    animation-duration: 0.3s;
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    overflow-y: auto;
                    overflow-x: hidden;
                }
            }
        }
    }
</style>
