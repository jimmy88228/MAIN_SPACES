const app = getApp();
Component(app.BTAB({
  options: {
    addGlobalClass: true,
  },
  properties: {

  },
  data: {
    selected: 0,
    UseItem: "",
    UseItemCode: "",
    bonus_type: '',
    toShow: true,
    scrollHeight: '',
    showPanel: true,
    bonus_tab: [{
        _type: 1,
        txt: "可用"
      },
      {
        _type: 4,
        txt: "过期/已用"
      }
    ],
    filter: false,
    bonus_list: [],
    brand_info: {},
    storeBonus: "",
    onlineBonus: "",
    isEmptyCan: false,
    isEmptyNo: false,
    canvasPath: "",
  },
  ready() {
    this.page = 0;
    this.hasMore = true;
  },
  methods: {
    onLoadFnc(type = '', data = '') {
      this.type = type ;
      this.params = data ;
      init.call(this);
      console.log('onLoadFnc');
      // getBonusList.call(this);
      this.loadData();
    },
    onUnloadFnc() {
      clearTimeout(this.offLoadingId);
      clearTimeout(this.resetId);
    },
    onReachBottom: function() {
      if (this.hasMore) {
        // getBonusList.call(this);
        this.loadData();
      } else {
        app.SMH.showToast({
          "title": "已经到底啦！"
        })
      }
    },
    onTabClick: function(e) {
      let dataset = e.currentTarget.dataset;
      let tabId = dataset.tabId;
      let selected = this.data.selected;
      if (tabId == selected) return;
      this.setData({
        selected: tabId,
        bonus_list: []
      });
      this.page = 0;
      this.hasMore = true;
      getBonusList.call(this);
    },
    onUseCounpon: function(e) {
      let id = e.target.dataset.id;
      let currentBonusSn = e.target.dataset.bonusSn;
      let canOff = e.target.dataset.canOff;
      let list = this.data.bonus_list;
      let bonus_sn = list[id].bonus_sn;
      this.setData({
        realWidth: realMarker.call(this, 519, 136).width,
        realHeight: realMarker.call(this, 519, 136).height
      })
      barcode('barCanvas', bonus_sn, 519, 136);
      this.setData({
        UseItem: list[id],
        toShow: false,
        showPanel: false
      })
      console.log('canOff', canOff)
      this.setData({
        showButton: canOff == 1 ? true : false,
        currentBonusSn: currentBonusSn
      })

    },
    handleWriteOff(e) {
      let type = e.currentTarget.dataset.type;
      checkOffCoupon.call(this, type);
    },
    handleWriteOffConfirm(e) {
      this.setData({
        filter: false
      })
      this.onCloseUseCoupon();
      writeOffCoupon.call(this, this.data.currentBonusSn);
    },
    onCloseUseCoupon: function(e) {
      this.setData({
        UseItem: "",
        toShow: true,
        showPanel: true
      })
    },
    onCheckCode: function() {
      // this.setData({
      //     UseItemCode: true
      // })
      canvasToPath.call(this, "barCanvas");
    },
    onCloseCode: function() {
      this.setData({
        UseItemCode: ""
      })
    },
    onGiveAway: function(dataset) { //赠送
      let bonus_id = dataset.bonus_id;
      let send_index = dataset.send_index;
      let bonus_list = this.data.bonus_list;
      let send_bonus = bonus_list[send_index];
      this.send_bonus = send_bonus;
      return this.send_bonus;
    },
    onShowUseLimit: function(e) {
      var id = e.currentTarget.dataset.id;
      var list = this.data.bonus_list;
      for (let i in list) {
        if (i == id) {
          if (list[i].showLimit) {
            list[i].showLimit = false;
          } else {
            list[i].showLimit = true;
          }
        } else {
          list[i].showLimit = false;
        }
      }
      this.setData({
        bonus_list: list
      });
    },
    loadData() {
      this.page = this.page + 1;
      console.log('getBonusListgetBonusList', this.page);
      let bonus_tab = this.data.bonus_tab;
      let selected = this.data.selected;
      let params = {};
      let url = 'activeBonusList'; // activeBonusList active_Order_BonusList
      if (this.type == 'act'){
        params = {
          brandCode: app.Conf.BRAND_CODE,
          activityId: this.params
        }
      } else if (this.type == 'order'){
        params = {
          brandCode: app.Conf.BRAND_CODE,
          orderId: this.params
        };
        url = 'active_Order_BonusList'; 
      }
      console.log('paramsparams', params)
      let extra = {
        diy: true
      }
      app.RunApi.go('ActApi', url, params, extra).then(res => {
        console.log('resres', res);
        if (res.code == 1) {
          let obj = res.data || {};
          let data = obj.couponList || [];
          let imgDomain = obj.imgDomain || '';
          this.setData({
            imgDomain
          })
          if (data.length == 0) {
            this.hasMore = false;
          }
          for (let i in data) {
            data[i].showLimit = false;
            if (data[i].bonus_type == 4) {
              data[i].discountStr = app.NH.getDiscount(data[i].discount);
            } else {
              data[i].discountStr = data[i].discount;
            }

          }
          let bonus_list = this.data.bonus_list;
          if (this.page == 1) {
            bonus_list = data;
          } else {
            bonus_list = bonus_list.concat(data);
          }
          this.setData({
            bonus_list: bonus_list
          });
          if (!this.data.isReady) {
            this.setData({
              isReady: true
            })
          }
        }
      }).catch(e => {
        console.log('e', e); 
        if (!this.data.isReady) {
          this.setData({
            isReady: true
          })
        }
      })
    },
    _noFn: function() {},
  },
  // pageLifetimes: {
  //   hide() {
  //     console.log('hide')
  //   }
  // },
}))

//优惠券列表
function getBonusList() {
  this.page = this.page + 1;
  console.log('getBonusListgetBonusList', this.page);
  let bonus_tab = this.data.bonus_tab;
  let selected = this.data.selected;
  console.log(selected)
  return app.UserApi.getBonusList({
    params: {
      type: bonus_tab[selected]._type, //1可用， 2已用，3过期，4已用/过期
      page_num: this.page, //暂时
      sort: 0,
    },
    extraData: {
      isShowLoad: true
    }
  }).then(e => {
    if (e.code == 1) {
      let data = e.data;
      if (data.length == 0) {
        this.hasMore = false;
      }
      for (let i in data) {
        data[i].showLimit = false;
        if (data[i].bonus_type == 4) {
          data[i].discountStr = app.NH.getDiscount(data[i].discount);
        } else {
          data[i].discountStr = data[i].discount;
        }

      }

      let bonus_list = this.data.bonus_list;
      if (this.page == 1) {
        bonus_list = data;
      } else {
        bonus_list = bonus_list.concat(data);
      }
      this.setData({
        bonus_list: bonus_list
      });
      if (bonus_tab[selected]._type == 1) {
        if (bonus_list.length == 0) {
          this.setData({
            isEmptyCan: true
          })
        }
      } else {
        if (bonus_list.length == 0) {
          this.setData({
            isEmptyNo: true
          })
        }
      }
      return Promise.resolve(e);
    }
    return Promise.reject();
  }).finally(e => {
    if (!this.data.isReady) {
      this.setData({
        isReady: true
      })
    }
  });
}

function realMarker(w, h) {
  let [scale, tranferWidth, tranferHeight] = [0, 0, 0];
  wx.getSystemInfo({
    success(res) {
      scale = (750 / res.windowWidth).toFixed(2);
      tranferWidth = (w / scale).toFixed(2);
      tranferHeight = (h / scale).toFixed(2);
    }
  });
  return {
    width: Math.ceil(tranferWidth),
    height: Math.ceil(tranferHeight)
  };
}


function checkOffCoupon(type) {
  let that = this;
  if (type == 'show') {
    this.setData({
      filter: true
    })
  } else {
    this.setData({
      filter: false
    })
  }
}

function writeOffCoupon(bonusSn) {
  if (!this.offLoading) {
    this.offLoading = true;
    return app.UserApi.writeOffCoupon({
      data: {
        bonusSn: bonusSn,
      },
      extraData: {
        isShowLoad: false
      }
    }).then(res => {
      if (res.code == 1) {
        app.SMH.showToast({
          title: '核销成功',
          duration: 600
        })
        console.log('刷新页面')
        this.resetId = setTimeout(() => {
          clearTimeout(this.resetId);
          reset.call(this);
        }, 800)
      } else {
        app.SMH.showToast({
          title: res.msg || '核销失败',
          duration: 600
        })
      }
    }).finally(() => {
      this.offLoadingId = setTimeout(() => {
        clearTimeout(this.offLoadingId);
        this.offLoading = false;
      }, 600)
    })
  }
}

function canvasToPath(canvasId) {
  let that = this;
  wx.canvasToTempFilePath({
    canvasId: canvasId,
    success(res) {
      console.log(res)
      let tempFilePath = res.tempFilePath || "";
      that.setData({
        canvasPath: tempFilePath,
        UseItemCode: true,
      })
    },
    fail() {
      app.SMH.showToast({
        "title": "生成图片路径失败"
      })
    },
    complete(res) {}
  }, that)
}

//分享状态
function BeginSharingCoupon(bonusId) {
  if (!bonusId) return;
  return app.UserApi.BeginSharingCoupon({
    data: {
      "bonusId": bonusId,
    },
    extraData: {
      isShowLoad: true
    }
  }).then(e => {
    if (e.code == "1") {
      return Promise.resolve(e);
    }
    return Promise.reject(e);
  })
}

function reset() {
  this.setData({
    bonus_list: []
  });
  this.page = 0;
  this.hasMore = true;
  getBonusList.call(this);
}

function init() {
  let storeBonus = this.data.brand_info.icon_url + "micro_mall/coupon/storeBonus.jpg";
  let onlineBonus = this.data.brand_info.icon_url + "micro_mall/coupon/onlineBonus.jpg";
  let arrow = this.data.brand_info.icon_url + "micro_mall/coupon/arrow.png";
  let bonus_none = this.data.brand_info.icon_url + "micro_mall/coupon/bonus_none.png";
  let bonus_use_btn = this.data.brand_info.icon_url + "micro_mall/coupon/bonus_use_btn.png";
  let bonus_guoqi_btn = this.data.brand_info.icon_url + "micro_mall/coupon/bonus_guoqi_btn.png";
  let overdueStoreBonus = this.data.brand_info.icon_url + "micro_mall/coupon/overdueStoreBonus.jpg";
  let overdueOnlineBonus = this.data.brand_info.icon_url + "micro_mall/coupon/overdueOnlineBonus.jpg";
  let close = this.data.brand_info.icon_url + "micro_mall/server_close.png";
  this.setData({
    storeBonus: storeBonus,
    onlineBonus: onlineBonus,
    arrow: arrow,
    bonus_none: bonus_none,
    bonus_use_btn: bonus_use_btn,
    bonus_guoqi_btn: bonus_guoqi_btn,
    overdueStoreBonus: overdueStoreBonus,
    overdueOnlineBonus: overdueOnlineBonus,
    close: close
  });
}