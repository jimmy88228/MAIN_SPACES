import SG from "../../../helper/handle/shopGuideHandle.js"
import PageJump from "../../../helper/page-jump.js";
let app = getApp();
Page(app.BP({
  data: {
    userData:{
      weixin_card_activate: 0
    },
    // sign_result:{
    //   sign_status:0,
    //   message:"",
    //   data:{}
    // },
    invite_share:false,
    adData: {},
    menuData: {},
    sysConf:{},
    isStaff:false,
    sessionFrom:"",
    // CARD_APPID: app.Conf.OPEN_CARD_APPID,
    needLogin: true
  },
  limitUrlTime: 3,
  isLoadUserData: false,
  /**
   * 该页面未对微信会员卡(需发版走流程)，企业微信联系我进行重构
  */
  onLoad: function (options) {
    console.log(options,"user")
      // let cargo_unpaid = this.data.brand_info.icon_url + "micro_mall/user/cargo_unpaid.png";
      // let cargo_deliver = this.data.brand_info.icon_url + "micro_mall/user/cargo_deliver.png";
      // let cargo_receive = this.data.brand_info.icon_url + "micro_mall/user/cargo_receive.png";
      // let cargo_change = this.data.brand_info.icon_url + "micro_mall/user/cargo_change.png";
      // let qrCode = this.data.brand_info.default_icon_url + "qrCode.png?123";
      // let dynamicCode = this.data.brand_info.default_icon_url + "dynamicCode.png";
      // let tip_idCard = this.data.brand_info.default_icon_url + "tip_idCard.png";
      // this.setData({
      //     cargo_unpaid,
      //     cargo_deliver,
      //     cargo_receive,
      //     cargo_change,
      //     qrCode,
      //     dynamicCode,
      //     tip_idCard
      // })
      if(wx.getSystemInfoSync().system.split(' ')[0].toLocaleUpperCase() === 'ANDROID') {
        this.setData({
          isAndroid: true
        })
      }
  },
  _noFn(){},
  onShow: function () {
    listen.call(this);
    app.sysTemConfig().then(data=>{
      this.setData({
        sysConf: data || {}
      })
    })
  },
  onHide(){
    unListen.call(this);
  },
  onUnload(){
    unListen.call(this);
  },
  onReady(){},
  onShareAppMessage: function (res) {
    var user_info = app.globalData.userInfo;
    var brand_info = app.globalData.brand_info;
    var share_info={
      title:'',
      path:'',
      imageUrl:'',
    }
    if (res.from === 'button') {
      // 来自页面内转发按钮
      var share_type = res.target.dataset.share_type;
      if (share_type === 'invited_friends'){
        share_info={
          title:'一起来分享全球精选好货吧！',
          path: '/pages/micro_mall/index/index?invite_usercod=' + user_info['user_code'],
          imageUrl: brand_info.icon_url+'micro_mall/user/invite_share_bg.jpg'
        }
      }
    }
    return {
      ...share_info
    }
  },
  /**
   * 获取个人中心用户信息
  */
  getUserInfo(e){
    //登录回调
    if(this.data.isLogin && this.data.needLogin){
      afterLoginHandle.call(this);
    }
  },
  startmessage(e){
    SG.startmessage(e);
  },
  completemessage(e){
    let bindStaffInfo = this.data.bindStaffInfo || {};
    SG.completemessage(e, bindStaffInfo).then(data => {
      this.contactGuide = this.contactGuide || this.selectComponent("#contactGuide");
      this.contactGuide.initData(data);
    })
  },
  activeCustomerService(){
    this.contactStaff = this.contactStaff || this.selectComponent("#contactStaff");
    this.contactStaff.initData();
  },
  contactCallBack(e){
    let detail = e.detail || {};
    this.contactGuide = this.contactGuide || this.selectComponent("#contactGuide");
    this.contactGuide.initData(detail);
  },
  // fillIdCard(){
  //   let params={
  //     func_type:"FILL_IDCARD",
  //     fromRoute:"USER",
  //   }
  //   PageJump(params);
  // },
  getUserInfoHandle(){
    return getUserInfoEvent.call(this);
  }
}))

//获取用户信息
function getUserInfoEvent(){
  if(this.isLoadUserData){
    return this.isLoadUserData;
  }
  this.isLoadUserData = app.UserApi.getUserInfoNew({
    params: {
      userToken: app.LM.userKey,
      brandCode: app.Conf.brandCode
    },
    extraData: {
      isShowLoad: true
    }
  }).then(e => {
    if(e.code == "1"){
      let data = e.data || {};this.setData({
        userData: {...this.data.userData || {},...data}, //为了额外添加的数据不被覆盖
      });
      // this.phone = data.MobileNo || '';
      return Promise.resolve(data);
    }
    return Promise.reject();
  }).finally(()=>{
    this.isLoadUserData && delete this.isLoadUserData;
  })
  return this.isLoadUserData;
}
//获取功能菜单
function getMenuList(){
  return app.CL_BrandApi.getMenuList({
    params:{
      brandCode: app.Conf.BRAND_CODE
    },
    extraData:{
      isShowLoad:true
    }
  }).then( e=>{
    if(e.code == "1"){
      if(!e.data) return Promise.reject();
      this.setData({
        menuData: e.data || []
      })
      return Promise.resolve(e.data);
      let tempData = e.data && JSON.parse(e.data);
      let ad_list = tempData.ad_list;
      let adData={},n={},m={};
      for (let i in ad_list){
        let arr = i.split("_");
        adData[arr[0]]=[];
      }
      for (let j in ad_list){
        let arr = j.split("_");
        adData[arr[0]].push(ad_list[j]);
      }
      let i = 1,j = 1;
      let tempService = {}, tempexpand = {};
      for (let key in tempData.my_service) {
        if (tempData.my_service[key].is_enable !== 'off'){
          tempService[i++] = tempData.my_service[key];
          if(tempData.my_service[key].keyword == "enterprise_customer_service"){
            tempData.isOpenWXWorkGuide = 1;
          }
        }
          
      }
      for (let key in tempData.my_expand) {
        if (tempData.my_expand[key].is_enable !== 'off'){
          tempexpand[j++] = tempData.my_expand[key];
          if(tempData.my_expand[key].keyword == "enterprise_customer_service"){
            tempData.isOpenWXWorkGuide = 1;
          }
        }  
      } 
      let assetsObj = {
        assetsNorNum : 0,
        assetsMorNum : 0,
        assetsNormal : {},
        assetsMore : {},
      };
      if(tempData.assets_ext && (tempData.assets_ext.is_enable !== 0)){
        for (let key in tempData.assets) {
          if (tempData.assets[key].is_enable !== 0){
            if(assetsObj.assetsNorNum < 4){
              assetsObj.assetsNorNum+=1;
              assetsObj.assetsNormal[key] = tempData.assets[key];
              assetsObj.assetsNormal[key].key = key;
            }else{
              assetsObj.assetsMorNum+=1;
              assetsObj.assetsMore[key] = tempData.assets[key];
              assetsObj.assetsMore[key].key = key;
            }
          }  
        }
      }

      tempData.my_service = tempService;
      tempData.my_expand = tempexpand;
      checkTips.call(this,tempData);
      this.setData({
        menuData: tempData,
        adData: adData,
        assetsObj
      });
      console.log('menuData',this.data.menuData);
      return Promise.resolve(tempData);
    }
    return Promise.reject();
  })
}
// function installMenuData(){
//   getMenuList.call(this).then(menuData=>{
//     getUserInfoEvent.call(this)
//   })
// }
function menuDataCallback(menuData, userData){
    //检测是否开启导购
    if(menuData.isOpenWXWorkGuide == 1){
      console.log("触发获取联系店员信息")
      initCustomerService.call(this, userData);
    }
}

//登录后处理
function afterLoginHandle(){
  getUserInfoEvent.call(this).then(userData=>{
    loginHandle.call(this);
    // if (userData.weixin_card_activate == 0) {
    //   getWxCard.call(this);
    // }
    //种草模块数据
    // this.seedGrass = this.seedGrass || this.selectComponent("#seedGrass");
    // this.seedGrass.initGrassData();
  })
  checkUserConf.call(this);
}
//登录状态处理
function loginHandle(){
  let userData = this.data.userData || {};
  if(this.data.isLogin != app.LM.isLogin) {
    this.setData({
      isLogin: app.LM.isLogin
    })
  }
  return app.sysTemConfig("applet_auth_required").then(data => {
    let needLogin = false;
    if (data.Value == 1 || data.Value == 5){//手机
      needLogin =  userData.IsBindMobile == 1 ? false : true
      this.setData({
        needLogin: needLogin
      })
    } else if (data.Value == 3){
      checkIsPerfected.call(this).then( isPerfected => {
        needLogin = isPerfected ? false : true
        this.setData({
          needLogin: needLogin,
        })
      })
    }else{
      this.setData({
        needLogin: needLogin,
      })
    }
    return Promise.resolve();
  })
}

function listen() {
  getMenuList.call(this).finally(()=>{
    this._checkUserLogin().finally(()=>{
      console.log("个人中心登录回调", app.LM.isLogin);
      if(app.LM.isLogin){
        afterLoginHandle.call(this);
      }
    })
  })
}
function unListen() {
  if(this.isLoadUserData){
    this.isLoadUserData = false;
  }
}

//实时检测分销
function checkUserConf() {
  // let staffInfo = app.LM.staffInfo || {};
  // let storage = app.StorageH.get("SIMPLE_USER_INFO") || {};
  // this.setData({
  //   // isStaff: staffInfo.isStaffDstbData || false,
  //   needVerify: storage.needVerify || 0
  // })
  app.LM.checkIfStaffDstbEvent().then(res=>{
    let staffInfo = res || {};
    this.setData({
      isStaff: staffInfo.isStaffDstbData || false
    })
  })
  app.LM.getUserSimpleInfo().then(data=>{
    this.setData({
      needVerify: data.needVerify || 0
    })
    initSessionFrom.call(this, data);
  })
  // if(!this.data.isStaff){
  //   this.listenStaffInfoChange = app.EB.listen("staffInfoChange", () => {
  //     let staffInfo = app.LM.staffInfo || {};
  //     this.setData({
  //       isStaff: staffInfo.isStaffDstbData || false
  //     })
  //   });
  // }

  // if(this.data.needVerify != 1){
  //   this.simpleInfoChange = app.EB.listen("simpleInfoChange", () => {
  //     let storage = app.StorageH.get("SIMPLE_USER_INFO") || {};
  //     this.setData({
  //       needVerify: storage.needVerify || 0
  //     })
  //   });
  // }
}
//
function initSessionFrom(user_info){
    user_info = user_info || {};
    let source = user_info.mobilePhone ? `${user_info.cardNum}/${user_info.mobilePhone}` : user_info.cardNum || ``
    let sessionFrom = `${source}|${user_info.realName}|${user_info.portrait_path}`;
    this.setData({
      sessionFrom: sessionFrom
    })
}
//检测完善资料
function checkIsPerfected(){
  let user_info = app.StorageH.get("USER_INFOS") || {};
  if (user_info.isPerfected) {
    return Promise.resolve(user_info.isPerfected);
  }
  return app.UserApi.checkUserIsCompleteInfo({
    params: {
      brandCode: app.Conf.BRAND_CODE,
      userToken: app.LM.userKey
    }
  }).then(res => {
    if (res.code == 1) {
      user_info.isPerfected = res.data == 1 ? true : false;
      app.StorageH.set("USER_INFOS", user_info);
    }
    return Promise.resolve(user_info.isPerfected || false);
  })
}
function initCustomerService(userData){
  if (userData.bindStaffId){
    SG.getCustomerService(userData.bindStoreId, userData.bindStaffId, 0, true).then(data => {
      console.log("导购信息", data);
      this.setData({
        bindStaffInfo: data.staffInfo || {}
      }) 
    })
  }
} 