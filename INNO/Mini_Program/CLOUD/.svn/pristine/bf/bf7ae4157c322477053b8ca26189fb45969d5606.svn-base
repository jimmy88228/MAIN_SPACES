// pages/micro_mall/collageGroup/collage_buy_detail.js
import WxApi from '../../../helper/wx-api-helper.js'
import PayH from '../../../helper/handle/payHandle.js'
import Polling from '../../../helper/polling.js'

var app = getApp();
Page(app.BP({

    /**
     * 页面的初始数据
     */
    data: {
        select_addr: {
            address_id: 0, //
        },
        isIphoneX:app.SIH.isIphoneX,
        user_activity_id: 0,
        captain_id: 0,
        goods_info: {},
        order_info: {},
        order_remark: "",
        show_remarks_val: true,
        remarks_focus: false,
        sys_info: {},
    },
    options: {},
    is_pay_retrun: false, //拼团成功支付回调时，返回不触发更新页面
    /**
     * 生命周期函数--监听页面加载
     */
    onLoad: function(options) {
        this.options = options;
        let rightbutton = this.data.brand_info.icon_url + "micro_mall/rightbutton.png";
        this.setData({
            rightbutton: rightbutton
        })
    },

    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function() {
        app.getBrandInfo(this);
    },

    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function() {
        if (!this.is_pay_retrun) {
            let options = this.options;
            this.getBuyDetails(options);
        }
    },

    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function() {

    },

    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function() {
        Polling.stopPolling();
    },

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    onPullDownRefresh: function() {

    },

    /**
     * 页面上拉触底事件的处理函数
     */
    onReachBottom: function() {

    },

    /**
     * 用户点击右上角分享
     */
    // onShareAppMessage: function () {

    // },
    /**
     * 
     */
    getBuyDetails(options) {
        var that = this;

        //获取地址
        let userChoiceData = app.StorageH.get("userChoiceData") || {}
        var select_addr = userChoiceData.selectAddr || this.data.select_addr;
        if (select_addr) {
            that.selectedAddress(select_addr);
        }

        getCollageGroupSettlementList.call(this);
        return;

    },
    /**
     * 
     */
    remarksInput(e) {
        if (e.currentTarget) {
            var key = e.currentTarget.dataset.key;
        }
        this.setData({
            [key]: e.detail.value
        })
    },
    selectedAddress(data) {
        var order_info = this.data.order_info;
        order_info.address = data.address;
        order_info.address_id = data.address_id;
        order_info.consignee = data.consignee;
        order_info.mobile = data.mobile;
        order_info.city = data.city;
        order_info.country = data.country;
        order_info.district = data.district;
        order_info.province = data.province;
        order_info.districtAddress = data.province_str + data.city_str + data.district_str + data.address;
        this.setData({
            order_info: order_info
        })
    },
    toAddressList() {
        wx.navigateTo({
            url: '../address/address_list',
        })
    },
    /**
     * 提交订单
     */
    submitOrder() {
        collageGroupAddOrder.call(this);
    },

    /**
     * 去支付
     */
    getPay: function(order = {}) {
        let order_id = order.user_log_id || 0;
        let order_sn = order.logSn || "";
        if(!order_id) return;
        if(order.order_amount == 0){
          let activityId = this.options.activityId || 0;
          this.is_pay_retrun = true;
          wx.navigateTo({
            url: 'my_collage_detail?activity_id=' + activityId + '&user_activity_id=' + order.user_activity_id + '&captain_id=' + order.user_id,
          })
          return;
        }
        
        // return app.PayApi.getAppletPrepayId({
        //     params: {
        //         order_id: order_id,
        //         pay_type: 'pin'
        //     },
        //     other: {
        //         isShowLoad: true
        //     }
        // })
        return PayH.UnifiedorderByOrderId("pin",order_id)
        .then(e => {
            if (e.code == "1") {
                let pay_info = e.data;
                WxApi.requestPayment({
                    'timeStamp': pay_info.timeStamp + '',
                    'nonceStr': pay_info.nonceStr,
                    'package': pay_info.package,
                    'signType': pay_info.signType,
                    'paySign': pay_info.sign,
                }).then(e => {
                    this.orderSync = this.orderSync || this.selectComponent("#orderSync"); 
                    this.dialog = this.dialog || this.selectComponent("#pageDialog");
                    let extra = {
                        orderSync:this.orderSync,
                        dialog:this.dialog,
                        type:"",
                    }
                    Polling.setPolling(()=>getPayStatus.call(this,order_id),()=>pollingSucc.call(this),()=>pollingFail.call(this),"",extra); 
                    this.is_pay_retrun = true;
                    // getOrderPayStatus.call(this, order_id);
                })
            }
        })
    },
    //切换textarea
    ShowRemarksVal: function() {
        var show_remarks_val = this.data.show_remarks_val;
        var remarks_focus = this.data.remarks_focus;
        show_remarks_val = !show_remarks_val;
        remarks_focus = !remarks_focus;
        this.setData({
            show_remarks_val: show_remarks_val,
            remarks_focus: remarks_focus
        })
    }
}))
//下单
function collageGroupAddOrder() {
    let that = this;
    let order_info = this.data.order_info;
    let goods_info = this.data.goods_info;
    let order_remark = this.data.order_remark;
    let reqUrl = 'collageGroupAddOrder';
    let warn = "";
    if(!order_info.address_id || order_info.address_id == 0){
      warn = "请完善收货人信息后再支付"
    }
    if(warn){
      app.SMH.showToast({
        title: warn
      })
      return;
    }
    return app.CollageApi[reqUrl]({
        data: {
            activityId: order_info.activity_id,
            userActivityId: order_info.user_activity_id,
            addressId: order_info.address_id || 0,
            remark: order_remark,
            goodsId: goods_info.goods_id,
            productId: goods_info.product_id,
            productNum: goods_info.number,
            clientSessionId: app.LgMg.channel &&  app.LgMg.channel.clientSessionId || '',
            brandCode: app.Conf.BRAND_CODE,
            userToken: app.LM.userKey
        },
        other: {
            isShowLoad: true
        }
    }).then(e => {
        if (e.code == 1) {
            var data = e.data;
            var user_log_id = data.user_log_id;
            this.getPay(data);
            this.setData({
                user_activity_id: data.user_activity_id,
                captain_id: data.user_id
            })
            return Promise.resolve(e);
        }
        return Promise.reject();
    })
}

//拼团结算详情
function getCollageGroupSettlementList() {
    var that = this;
    //获取地址
    let userChoiceData = app.StorageH.get("userChoiceData") || {};
    var select_addr = userChoiceData.selectAddr || this.data.select_addr;
    if (select_addr) {
        this.selectedAddress(select_addr);
    }
    return app.CollageApi.getCollageGroupSettlementList({
        params: {
            activityId: this.options.activityId,
            userActivityId: this.options.userActivityId,
            addressId: select_addr.address_id || 0,
            goodsId: this.options.goodsId,
            productId: this.options.productId,
            productNum: this.options.productNum,
            brandCode: app.Conf.BRAND_CODE,
            userToken: app.LM.userKey
        },
        other: {
            isShowLoad: true
        }
    }).then(e => {
        if (e.code == "1") {
            var data = e.data;
            this.setData({
                goods_info: data.goodsEntity,
                order_info: data.infoEntity
            })

            return Promise.resolve(e);
        }
        app.SMH.showToast({
            "title": e.msg || "请求出错"
        })
        let _timer = setTimeout(function(){
          clearTimeout(_timer);
          wx.navigateBack();
        }.bind(this),1000);
        return Promise.reject(e);
    })

}
 
function getPayStatus(order_id){
    return app.CollageApi.getCollageGroupOrderPayStatus({
        params: {
            orderId: order_id,
            brandCode: app.Conf.BRAND_CODE,
            userToken: app.LM.userKey
        },
        other: {
            isShowLoad: true
        }
    }).then(res=>{
        console.log('then',res);
        return Promise.resolve(res);
    }).catch(e=>{
        console.log('catch',e)
        return Promise.resolve(e);
    }) 
}


function pollingSucc(){
    let order_info = this.data.order_info;
    let user_activity_id = this.data.user_activity_id;
    let captain_id = this.data.captain_id;
    wx.redirectTo({
        url: 'my_collage_detail?activity_id=' + order_info.activity_id + '&user_activity_id=' + user_activity_id + '&captain_id=' + captain_id,
    })
}

function pollingFail(){ 
    wx.redirectTo({
      url: '/pages/micro_mall/collageGroup/my_collage',
    })
}
