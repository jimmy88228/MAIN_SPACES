// pages/draw/draw_box/box/box.js
const app = getApp();
import apiPackage from '../../../../common/manager/apiPackage.js';
// import ImgLoader from "./img_loader/img_loader";
// import LIST from "../../lottery-config.js";
import MyDate from '../../../../common/support/utils/date-util.js';

Component({
    behaviors: [Behavior.BaseBehavior],
    properties: { 
    },
    pageLifetimes: {

    },
    data: {
        actInfo: {},
        screenWidth:app.SIH.screenWidth,
        navH:app.SIH.navigationBarHeight
    },
    lifetimes: {
		created() {
            this.actInfo = {};
            Object.defineProperties(this, {
                shareHelp: { get: () => this.findView("#shareHelp","shareHelpBool") }, 
            });
		}, 
	}, 
    methods: {
        _onShow(options) { //（onReady、抽奖成功后、助力发起后）都会触发
            this.options = this.options || options || {};
            console.log('options',this.options)
            this.checkLoginChange();
            return loadData.call(this).then(data => {
                checkHelp.call(this);
                // console.log('box actInfo',this.actInfo);
                this.draw_acts = this.draw_acts || this.selectComponent("#draw_acts");
                this.draw_acts._onShow(this.actInfo);
                let arr = data.winningRecordList||[];
                arr = arr.map(item => {
                    return Object.assign(item, {
                        createTime: MyDate.format(MyDate.parse(item.createTime),'yyyy-MM-dd')
                    });
                }) || [];
                this.setData({
                    winningRecordList:arr
                });
                return data;
            }); 
        }, 
        draw(){ //抽奖
            console.log('box-draw');
            this.draw_acts = this.draw_acts || this.selectComponent("#draw_acts");
            this.draw_acts._draw();
        },
        authed(e){ //注册回调
            console.log('注册回调',e,this.isLogin,app.LM.isLogin);
            let detail = e.detail||{};
            let dataset = this.getDataset(e);
            if(detail.isChange){
                this._onShow().then(()=>{
                    if(dataset.type == 'prize-records'){
                        wx.navigateTo({
                            url: `/pages/matrix/draw_box/draw_records/draw_records?activityId=${this.options.activityId || 0}`,
                        })
                    }else{
                        app.SMH.showToast({
                            title:"授权成功，请重新点击"
                        })
                    }
                });
            }else{
                if(dataset.type == 'prize-records'){
                    wx.navigateTo({
                        url: `/pages/matrix/draw_box/draw_records/draw_records?activityId=${this.options.activityId || 0}`,
                    })
                }
            }
        },
        close(){ //关闭结果弹窗
            this.draw_acts = this.draw_acts || this.selectComponent("#draw_acts");
            this.draw_acts.close();
            Promise.nextTick().then(()=>{
                this.setData({
                    showFilter:false
                })
            })
        },
        drawCallBack(e){ //抽奖成功回调
            console.log('抽奖成功回调',e)
            let actInfo = this.actInfo || {};
            if(actInfo.shareInfo && actInfo.shareInfo.shareType == 1 && actInfo.shareInfo.helpInfo){
                let detail = e && e.detail||{};
                this.createShareHelp({detail});
            }
        },
        result(e){  //弹出结果弹窗
            this.draw_result = this.draw_result || this.selectComponent("#draw_result");
            let detail = e.detail||{};
            console.log('resultresult',e,detail)
            this.setData({
                showFilter:true
            })
            this.draw_result && this.draw_result._show(detail.actInfo,detail.prizeMsg,detail.extra||"");
            setTimeout(() => {
                this._onShow();
            }, 500);
        },
        again(){ //再来一次
            this.draw_acts = this.draw_acts || this.selectComponent("#draw_acts");
            this.draw_acts.close('again');
            let code = this.data.actInfo.activityTypeCode||"";
            if(code != "zajingdan" && code != "yaoyiyao"){
                this.setData({
                    showFilter:false
                })
            }
            Promise.nextTick().then(()=>{
                this.draw();
            })
        },
        onTap(e){
            let dataset = this.getDataset(e);
            let type = dataset.type||"";
            // if(type == 'prize-records'){
            //     wx.navigateTo({
            //       url: `/pages/matrix/draw_box/draw_records/draw_records?activityId=${this.options.activityId || 0}`,
            //     })
            // }else 
            if(type == 'rule'){
                let rule = app.StorageH.set('curRuleData') || ""; 
                let actInfo = this.data.actInfo||{};
                if(rule != actInfo.activityDescription){
                    app.StorageH.set('curRuleData',actInfo.activityDescription || "");
                }
                wx.navigateTo({
                    url: `/pages/matrix/draw_box/draw_rule/draw_rule`,
                })
            }
        },
        getShareInfo(){
            let actInfo = this.data.actInfo||{};
            let shareInfo = actInfo.shareInfo || {};
            let data = {};
            if(app.LM.isLogin && !shareInfo.launchId){
                this.shareLaunch();
            }
            if(app.LM.isLogin){
                data.path = `/pages/matrix/matrix?activityId=${this.options.activityId || 0}&shareRuleId=${actInfo.shareInfo.shareRuleId || 0}`;
            }
            return {
                title:actInfo.shareTitle || "活动分享",
                imageUrl:actInfo.shareImg || "",
                ...data
            }
        },
        shareLaunch(){
            if(!this.shareLaunched){ 
                console.log('发起助力')
                return createLotteryShareLaunch(this.options.activityId || 0).then(()=>{
                    this.shareLaunched = true;
                });
            }
        },
        createShareHelp(e){
            if(this.createShareHelpLoading)return
            this.createShareHelpLoading = true;
            let detail = e && e.detail||{};
            let joinRecordId = detail.joinRecordId || 0;
            console.log('好友助力',joinRecordId)
            return createShareHelpFnc(this.options.activityId || 0,this.options.shareCode,joinRecordId).then(data=>{
                if(!joinRecordId){
                    app.SMH.showToast({
                        title:"助力成功"
                    })
                    setTimeout(() => {
                        this.shareHelp.close();
                        this._onShow();
                    }, 500);
                }
            }).catch(err=>{
                console.log('catch',err)
                if(err&&err.code == '20001'){
                    this.createShareHelp(e);
                }else{
                    if(!joinRecordId){
                        app.SMH.showToast({
                            title:err&&err.msg || "助力失败，请稍后再试",
                            duration:3000
                        })
                        setTimeout(() => {
                            this.shareHelp.close();
                        }, 500);
                    }
                }
            }).finally(()=>{
                setTimeout(() => {
                    this.createShareHelpLoading = false;
                }, 500);
            });
        },
        onChange(e){
            let dt = e.detail||{};
            let label = dt.current - 1 < 0 ? this.data.winningRecordList.length - 1 :  dt.current  - 1;
            this.setData({
                hideAnimIndex:label
            })
        },
        onUnload(){
            this.draw_acts = this.draw_acts || this.selectComponent("#draw_acts");
            this.draw_acts.onUnload();
        },
    }
})



function loadData(showLoading = true) {
    return app.LotteryApi.get_LotteryActivitDetail({
        params: {
            activityId: this.options.activityId || 0,
            shareCode: this.options.shareCode || ""
        },
        extraData: {
            showLoading: showLoading
        }
    }).then(res => {
        console.log('loadData',res)
        if (res.code == 1) {
            let data = res.data || {};
            // data.shareInfo.helpInfo = {
            //     currCondition:3,
            //     currInvite:2,
            //     friendReward:1,
            //     selfReward:2,
            //     nickName:"JIMMY 哈哈",
            //     avatarUrl:"http://devimgtest.innourl.com/SAAS_IMAGE/images/lottery/icon/point.png"
            // }
            this.triggerEvent('getMsg',data);
            this.actInfo = data;
            let customPage = this.actInfo.customPage || {};
            let moduleList = customPage.moduleList || [];
            moduleList.forEach(item=>{
                let temp = item.setting.replace(/\\\\/g,"");
                item.setting = JSON.parse(temp);
            }) 
            let temp = customPage.setting.replace(/\\\\/g,""); 
            customPage.setting = JSON.parse(temp);
            this.setData({
                actInfo:this.actInfo
            })
            console.log('actInfoactInfo',this.data.actInfo)
            // let tips = [];
            // if (data.canJoinTimes > 0) {
            //     tips.push({
            //         type: "joinTimes",
            //         value: "还剩" + data.canJoinTimes + "次机会"
            //     });
            // }
            // if (data.joinIntegral > 0) {
            //     tips.push({
            //         type: "integral",
            //         value: "每次消耗" + data.joinIntegral + "积分"
            //     });
            // }
            // this.setData({
            //     actInfo:data,
            //     activityTypeName: data.activityTypeName,
            //     activityTypeCode: data.activityTypeCode || '',
            //     activityDescription: data.activityDescription,
            //     isShowWinnings: data.isShowWinnings || false,
            //     showWinningsRecords: data.showWinningsRecords || 0,
            //     joinIntegral: data.joinIntegral || 0,
            //     actBgImg: data.actBgImg,
            //     shareTitle: data.shareTitle,
            //     shareImg: data.shareImg,
            //     pushImg: data.pushImg,
            //     canJoinTimes: data.canJoinTimes || 0,
            //     tips,
            //     activityNeedBindMobile: data.activityNeedBindMobile || 0, //活动是否需要绑定手机
            //     isNeedBindMobile: !!data.isNeedBindMobile, //登录之后，且没有手机号，且活动设置了需要绑定手机号才可以参与，返回1
            //     activityStatus: data.activityStatus || 0,
            //     isShowJoinTime: data.isShowJoinTime || false,
            //     joinTime: data.joinTime || 0,
            //     prizeList: data.prizeList || [],
            //     activityType: LIST.lottery[data.activityTypeCode]
            // });
            // this.preloadImgs(showLoading);
            //   this.setData({
            //       isHided: false
            //   });
            // this.draw_acts.loadData();
            return Promise.resolve(data);
        } else {
            return Promise.reject(res);
        }
    });
}

function createLotteryShareLaunch(activityId){
    return app.LotteryApi.createLotteryShareLaunch({
        data:{
            activityId,
        }
    }).netData();
}

function createShareHelpFnc(activityId,shareCode,joinRecordId){
    return app.LotteryApi.createLotteryShareHelp({
        data:{
            activityId,
            shareCode,
            joinRecordId,
        }
    }).netData();
} 

function checkHelp(){
    let actInfo = this.actInfo||{};
    if(actInfo.shareInfo && actInfo.shareInfo.shareType == 2 && actInfo.shareInfo.helpInfo){
        setTimeout(() => {
            this.shareHelp.show();
        }, 200);
    }
}