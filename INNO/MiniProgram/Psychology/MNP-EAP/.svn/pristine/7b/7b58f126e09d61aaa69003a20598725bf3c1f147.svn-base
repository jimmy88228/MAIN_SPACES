<template>
  <view class="participation">
    <page-nav>
      <template slot="title">
        <view>参与情况</view>
      </template>
    </page-nav>
    <view class="organize-title" :style="{top:navHeight+'px'}">
      <view class="font-22 C_B2 clamp m-b-10">广州海关</view>
      <view class="flex-b-c">
        <view class="font-36 C_33 flex-s-c" @click="showOrganizeLsit"><text class="clamp" style="max-width:300rpx">质检部</text><text>（29/32）</text>
          <view class="select-icon"></view>
        </view>
        <view class="C_7f font-24 f-shrink-0">共4个小组</view>
      </view>
    </view>
    <view class="organize-situation">
      <view class="organize-item flex-c-c" :style="item.style" v-for="(item,i) in organizeList" :key="i">
        <view v-if="item.code == 1" class="check-style check-style-1"></view>
        <view v-if="item.code == 2" class="check-style check-style-2">!</view>
        <view class="font-26">{{item.score}}</view>
        <view class="font-22">{{item.name}}</view>
      </view>
    </view>
    <work-bench ref="workBench" @selected="selectOrganize" :organizeLsit="organizeLsit"></work-bench>
  </view>
</template>

<script>
  import SIH from "@/common/helper/sys-infos-handler"
  import workBench from "@/components/custom-page/work-bench/work-bench"

  const app = getApp();
  const pageOption = Page.BasePage({
    data() {
      return {
        navHeight: SIH.navPlace,
        organizeList: []
      }
    },
    components:{
      workBench
    },
    // onShareAppMessage(e){},
    methods: {
      loadData() {
        let organizeList = [];
        for (let i = 0; i < 50; i++) {
          console.log(Math.random())
          let code = Math.random() > 0.9 ? 0 : (Math.random() > 0.6 ? 1 : 2);
          let name = Math.random() > 0.9 ? '谢磊梦梦' : (Math.random() > 0.6 ? '陈泽' : '龙少')
          let style = {}
          switch (code) {
            case 0:
              style = 'background:#DCDCDD;border: 1px solid #DDDDDD;color: #B2B2B2;'

              break
            case 1:
              style = 'background:#FAFAFA;border: 1px solid #008ACB;color: #008ACB;'
              break
            case 2:
              style = 'background: #FFF2F2; border: 1px solid #E69C9E;color: #E89EA0;'
              break
            default:
              break
          }
          organizeList.push({
            "name": name,
            "score": Math.floor(Math.random() * 10),
            "code": code,
            "style": style
          })
        }
        this.organizeList = organizeList
      },
       showOrganizeLsit() {
        let ref = "workBench";
        this.$refs[ref].showBench();
      },
      selectOrganize(){

      }
    },
    onShow() {
      this.loadData()
    },
    onReady() {

    }
  })
  export default pageOption
</script>

<style lang="scss" scoped>
  .participation {
    background-color: #F7F7F7;
    min-height: 100vh;
  }

  .organize-title {
    position: sticky;
    position: -webkit-sticky;
    left: 0;
    padding: 38rpx 31rpx;
    background-color: #FFFFFF;
    z-index: 2;

    .select-icon {
      width: 0px;
      height: 0px;
      border: 15rpx solid transparent;
      border-top-color: #000000;
      margin-top: 22rpx;
    }
  }

  .organize-situation {
    padding: 28rpx 24rpx;
    display: flex;
    flex-wrap: wrap;
    

    .organize-item {
      box-sizing: border-box;
      position: relative;
      margin-right: 13rpx;
      margin-bottom: 8rpx;
      width: 107rpx;
      height: 112rpx;
      position: relative;
      border-radius: 33rpx;
      border: 2rpx solid #008ACB;
      flex-direction: column;
      background-color: #FAFAFA;

      .check-style {
        position: absolute;
        right: -8rpx;
        top: -8rpx;
        display: inline-block;
        height: 26rpx;
        width: 26rpx;
        border-radius: 50%;

      }

      .check-style-1 {
        border: 2px solid #008ACB;
        background: #008ACB;
      }

      .check-style-1::after {
        content: ' ';
        position: absolute;
        display: inline-block;
        width: 14rpx;
        height: 8rpx;
        border-width: 0 0 3rpx 3rpx;
        overflow: hidden;
        border-color: #FFFFFF;
        border-style: solid;
        -webkit-transform: rotate(-45deg);
        transform: rotate(-45deg) translate(-50%, -50%);
        left: 50%;
        top: 15%;
      }

      .check-style-2 {
        border: 2px solid #E89EA0;
        background: #E89EA0;
        color: #FFFFFF;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20rpx;
      }
    }

    .organize-item:nth-child(6n) {
      margin-right: 0;

    }
  }
</style>