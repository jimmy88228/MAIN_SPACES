<template>
	<view class="container">
		<global-com></global-com>
		<u-icon name="photo" color="#2979ff" size="28"></u-icon>
		<view :style="{height: bodyHeight +'px'}">
			<u-empty v-if="showEmpty" :text="errorText" mode="permission"></u-empty>
		</view>
	</view>		
</template>	

<script>
/**
 * 中间过渡，统一跳转页，
 * 用于带参数的跳转登录
 * token 对应 userkey
 * hashCode 用来验证数据的完整性
 * DEMO  http://xxxx/pages/home/jump?brand_id=111&time=123&token=userkey&hashCode=(token+'||'+brand_id+'||'+time)&route=urlencode(/pages/app/customer-service/index)
 */
export default {
	data() {
		return {
			bodyHeight: 500,
			showEmpty: false,
			errorText: '参数错误或无权限',
		};
	},
	onLoad( option ) {
		this.init( option );
		this.getTestData();
	},
	methods:{
		init( option ){
			// 计算屏幕高度
			var system = uni.getSystemInfoSync();
			this.bodyHeight = system.windowHeight;
			
			if( typeof( option.brand_id) != 'undefined' 
				&& option.brand_id != ''
				&& typeof( option.token) != 'undefined' 
				&& option.token != ''
				&& typeof(option.route) != 'undefined' 
				&& option.route != ''
				&& typeof(option.hashCode) != 'undefined'
				&& option.hashCode != ''
				&& typeof(option.time) != 'undefined'
				&& option.time != ''
			){
				// 是否要获取admin_token (就是需要管理员登录的)
				let getAdminToken = 0;
				if( ['/pages/app/customer-service-worker/index'].indexOf( option.route ) !== -1 ){
					getAdminToken = 1;
				}
				
				// 登录
				this.$u.post( this.$api.loginByToken, {
					brand_id: option.brand_id,
					user_key: option.token,
					hash_code: option.hashCode,
					time: option.time,
					get_admin_token: getAdminToken,
				})
				.then( (response) => {
					
					var res = response.data;
					if( res.code ){
						this.info = res.data;
						uni.setStorageSync('brandCode', option.brand_id );
						uni.setStorageSync('userToken', res.userToken );
						
						// 如果纯关联管理员的，把管理员的adminToken 也写入
						if( res.adminToken !='' && res.adminToken != null ){
							uni.setStorageSync('adminToken', res.adminToken );
						}
						
						// 登录成功，跳转
						uni.redirectTo({
							url: option.route,
						});
					}
					else{
						this.showEmpty = true;
						this.errorText = res.message;
					}
				});
	
			}
			else{
				this.showEmpty = true;
				this.errorText = '参数错误';
			}
		},
		getTestData(){
			// uni.request({
			// 	url: this.$api.loginByToken
			// })
			// this.$http({
			// 	url: this.$api.loginByToken
			// }).then((res)=>{
			// 	console.log("res", res);
			// }).catch((error)=>{
			// 	console.log("error", error);
			// })
		}
	},
}
</script>

<style lang="scss">
page{
	background: $page-color-base;
}	
</style>