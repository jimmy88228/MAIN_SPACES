<template>
  <view class="information" v-if="!hidePage">
    <page-nav isHideHome></page-nav>
    <view class="box">
      <view class="perfect_info">
        <!-- <view class="actInfo flex"
          ><view v-if="schoolInfo.schoolId">{{ schoolInfo.schoolName }}</view
          ><view v-if="actInfo.activityId"
            >/{{ actInfo.activityName }}</view
          ></view
        > -->
        <view class="title">
          <view>进入测评前</view>
          <view>请先确认你的个人信息</view>
        </view>
        <view class="item">
          <view class="label">姓名</view>
          <ori-input
            maxlength="15"
            @onInput="(e) => onInput(e, 'realName')"
            :value="formData.realName"
            placeholder="请输入"
            placeholderClass="hold-style"
            class="input content"
            boxStyle="padding:25rpx 0;height:44rpx"
          ></ori-input>
        </view>
        <view class="item relative">
          <view class="label">手机号</view>
          <view class="content p-t-25 p-b-25">
            <text :style="{ opacity: `${mobilePhone}` ? '1' : '0.1' }">{{
              mobilePhone ? mobilePhone : "授权获取手机号"
            }}</text>
          </view>
          <!-- <view class="authorized_phone absolute" @click="authorizedPhone"
            >重新授权</view
          > -->
          <auth-button
            class="authorized_phone absolute"
            :auth="true"
            :openType="openType"
            @getphonenumber="getPhoneNumber"
            ><text class="authorized">{{
              mobilePhone ? "重新授权" : "授权"
            }}</text>
          </auth-button>
        </view>
        <!-- <view class="item">
          <view class="label">填写学号</view>
          <ori-input  @onInput="e=>onInput(e,'studentNumber')" placeholder="请输入" placeholderClass="hold-style" class="input content" boxStyle="padding:25rpx 0;"></ori-input>
        </view> -->
        <view class="item">
          <view class="label">性别</view>
          <template v-if="schoolInfo.gender">
            <view class="content">{{ schoolInfo.gender }}</view>
          </template>
          <template v-else>
            <ori-picker
              @pickerChange="(e) => pickerChange(e, 'gender')"
              range-key="genderName"
              :mode="mode.school"
              :range="genderRange"
              :pickerValue="picker_value_gender"
            >
              <template v-slot:content>
                <div class="flex-b-c content">
                  <view>
                    <template v-if="picker_value_gender >= 0">
                      <text>{{
                        genderRange[picker_value_gender].genderName
                      }}</text>
                    </template>
                    <view v-else class="place">请选择</view>
                  </view>
                  <view class="switch font-32">选择</view>
                </div>
              </template>
            </ori-picker>
          </template>
        </view>
        <view class="item">
          <view class="label">婚姻状况</view>
          <template v-if="schoolInfo.marriage">
            <view class="content">{{ schoolInfo.marriage }}</view>
          </template>
          <template v-else>
            <ori-picker
              @pickerChange="(e) => pickerChange(e, 'marriage')"
              range-key="marriageName"
              :mode="mode.school"
              :range="marriageRange"
              :pickerValue="picker_value_marriage"
            >
              <template v-slot:content>
                <div class="flex-b-c content">
                  <view>
                    <template v-if="picker_value_marriage >= 0">
                      <text>{{
                        marriageRange[picker_value_marriage].marriageName
                      }}</text>
                    </template>
                    <view v-else class="place">请选择</view>
                  </view>
                  <view class="switch font-32">选择</view>
                </div>
              </template>
            </ori-picker>
          </template>
        </view>
        <!-- <view class="item" v-if="classInfo.classId"> -->
        <!-- <view class="label">所在班级</view> -->
        <!-- <template v-if="classInfo.classId"> -->
        <!-- <view class="content"><template v-if="classInfo.campusName">[{{classInfo.campusName}}]</template>{{classInfo.classFullName}}</view> -->
        <!-- </template> -->
        <!-- <template v-else>
						<ori-picker @pickerChange="(e)=>pickerChange(e,'grade')" @columnchange="columnchange"  range-key="className" :mode="mode.grade" :range="classRange" :pickerValue="picker_value">
						  <template v-slot:content>
						    <div class="flex-b-c content">
						      <view>
						        <template v-if="picker_value.length>0">
						          <text  v-for="(item,index) in classRange" :key="index">{{classRange[index][picker_value[index]].campus ? '[' + classRange[index][picker_value[index]].campus + ']' : ''}}{{classRange[index][picker_value[index]].className||''}}</text>
						        </template>
						        <view v-else class="place">请选择</view>
						      </view>
						      <view class="switch font-32">选择</view>
						    </div>
						  </template>
						</ori-picker> 
					</template> -->
        <!-- </view> -->
        <!-- <view class="item iden-box flex-s-c">
          <view class="label flex1 f-shrink-0">选择你的身份</view>
          <view class="flex-s-c flex1 f-shrink-0">
            <view 
              :class="['iden','flex-c-c','flex1',formData.relateType == item.relateType?'active':'']" 
              @click="formData.relateType = item.relateType"
              v-for="(item) in relateArr" :key="item.relateType">
              {{item.name}}
            </view>
          </view>
        </view> -->
        <view class="tips C_7f7f7f font-20">{{ tips }}</view>
        <view class="btn-box flex-c-s fixed">
          <view class="btn flex-c-c" @click="confirm">确认信息</view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
import AuthButton from "@/components/auth-button/auth-button.vue";
import oriPicker from "@/components/ori-comps/picker/ori-picker.vue";
import oriInput from "@/components/ori-comps/input/ori-input.vue";
import scanCode from "@/common/helper/scan-code-handler.js";
const app = getApp();
const pageOption = Page.BasePage({
  components: {
    oriPicker,
    oriInput,
    AuthButton,
  },
  data() {
    return {
      formData: {
        // relateType: "child",
        // classId: 0,
        // schoolId: 0,
        // studentNumber: "",
        gender: "",
        marriage: "",
        realName: "",
      },
      mobilePhone: "",
      mode: {
        grade: "multiSelector",
        school: "selector",
      },
      openType: "getPhoneNumber",
      lockPage: false,
      // classRange: [],
      // oriClassArr: [],
      // schoolRange: [],
      // picker_value: [],
      // picker_value_school: -1,
      genderRange: [
        // {
        //   genderName: "保密",
        //   value: 0,
        // },
        {
          genderName: "男",
          value: 1,
        },
        {
          genderName: "女",
          value: 2,
        },
      ],
      picker_value_gender: -1,
      marriageRange: [
        // {
        //   marriageName: "保密",
        //   value: 0,
        // },
        {
          marriageName: "未婚",
          value: 1,
        },
        {
          marriageName: "已婚",
          value: 2,
        }, 
        {
          marriageName: "离异",
          value: 3,
        },
        {
          marriageName: "丧偶",
          value: 4,
        },
      ],
      picker_value_marriage: -1,
      // relateArr: [
      //   { name: "我是家长", relateType: "child" },
      //   { name: "我是学生", relateType: "none" },
      // ],
      tips: "为了确保本次测评结果有效性请认真确认个人信息",
      curRecordId: 0,

      actInfo: {},
      // schoolInfo: {},
      // classInfo: {},
      hidePage: true,
    };
  },
  onLoad(options) {
    this.options = options || {};
  },
  onShow() {
    console.log(this);
    this.init();
  },
  methods: {
    init() {
      this.loadUserInfo();
      this.actInfo = scanCode.actBaseInfo || {};
      // 确保该页面在账号登陆配置时，不展示，不可用
      // app.Sysm.getSysConf("applet_login_type").finally(() => {
      //   let isAccountLogin =
      //     app.Sysm.sysConf["applet_login_type"] == "password";
      //   if (isAccountLogin) {
      //     this.redirectAction("/pages/login/login");
      //   } else {
      this.hidePage = false;
      //   }
      // });

      // this._checkLogin().then(() => {
      //   if (!this.schoolInfo.schoolId) {
      // this.loadSchool();
      // } else {
      // this.loadGradeClass();
      //   }
      // });
    },
    getPhoneNumber({ e }) {
      return this.$Http(this.$Apis.getPhoneNumber, {
        data: {
          code: e.detail.code || 0,
          sessionId: app.LM.sessionId || 0,
        },
        other: {
          isShowLoad: true,
        },
      }).then((res) => {
        this.mobilePhone = res.data || "";
      });
    },
    loadUserInfo() {
      return new Promise((rs, rj) => {
        rs(app.IM.authUserInfo);
      }).then((res) => {
        let data = { ...this.formData, ...res } || {};
        this.mobilePhone = res.mobilePhone || "";
        delete data.mobilePhone;
        // 由于之前是有未知选项为了确保之前选了未知选项的用户能正常使用筛选了一下，如果没有该选项改为空值
        let selectGender = this.genderRange.filter((item, index) => {
          item.index = index;
          return item.value == data.gender;
        });
        if (!!selectGender[0]) {
          this.picker_value_gender = selectGender[0].index;
        } else {
          this.picker_value_gender = -1;
          data.gender = "";
        }

        let selectMarriage = this.marriageRange.filter((item, index) => {
          item.index = index;
          return item.value == data.marriage;
        });
        if (!!selectMarriage[0]) {
          this.picker_value_marriage = selectMarriage[0].index;
        } else {
          this.picker_value_marriage = -1;
          data.marriage = "";
        }
        this.picker_value_gender = !!selectGender[0] ? selectGender[0].index : -1;
        this.picker_value_marriage = !!selectMarriage[0] ? selectMarriage[0].index : -1;
        
        this.formData = data;
        // this.$forceUpdate()
        // this.schoolRange = data;
      });
    },
    loadGradeClass() {
      let schoolId = this.formData.schoolId || 0;
      // return this.$Http(this.$Apis.getSchoolClassList,{
      return this.$Http(this.$Apis.getSchoolClassListWithActivity, {
        data: {
          schoolId,
          activityId: this.actInfo.activityId || 0,
        },
        other: {
          isShowLoad: true,
        },
      }).then((res) => {
        this.picker_value = [];
        if (res.code == 1) {
          let data = res.data || [];
          let oriClassArr = data.map((item) => {
            item.className = item.gradeName || ""; //共用一个range-key
            return item.classList;
          });
          this.oriClassArr = oriClassArr;
          this.$set(this.classRange, 0, data);
          this.$set(this.classRange, 1, oriClassArr[0] || []);
        }
      });
    },
    pickerChange(e, type) {
      // if (type == "grade") {
      //   this.picker_value = e.detail.value;
      //   let item = this.classRange[1][this.picker_value[1]] || {};
      //   this.formData.classId = item.classId || 0;
      // } else if (type == "school") {
      //   if (e.detail.value >= 0 && this.picker_value_school != e.detail.value) {
      //     this.picker_value_school = e.detail.value;
      //     let item = this.schoolRange[this.picker_value_school] || {};
      //     this.formData.schoolId = item.schoolId || 0;
      //     this.loadGradeClass();
      //   }

      // } else
      if (type == "gender") {
        // 性别选择
        this.picker_value_gender = e.detail.value;
        let item = this.genderRange[this.picker_value_gender] || {};
        this.formData.gender = item.value || 0;
      } else if (type == "marriage") {
        // 婚姻状况选择
        this.picker_value_marriage = e.detail.value;
        let item = this.marriageRange[this.picker_value_marriage] || {};
        this.formData.marriage = item.value || 0;
      }
    },
    columnchange(e) {
      let detail = e.detail || {};
      if (detail.column == 0) {
        this.$set(this.classRange, 1, this.oriClassArr[detail.value || 0]);
      }
    },
    confirm(e) {
      if (this.lockPage) return;
      let invalid = this.checkValid();
      if (invalid) {
        app.SMH.showToast({
          title: invalid,
        });
        return;
      }
      return this.updateUserInfo();
    },
    updateUserInfo() {
      let reqData = this.formData;
      if (this.mobilePhone != (app.IM.authUserInfo.mobilePhone || "")) {
        reqData.sessionId = app.LM.sessionId;
      }
      return this.$Http(
        this.isLogin ? this.$Apis.updateUserInfo : this.$Apis.register,
        {
          data: {
            ...this.formData,
          },
          other: {
            isShowLoad: true,
          },
        }
      )
        .then((res) => {
          if (res.code == 1) {
            this.lockPage = true;
            this._checkLogin().then(() => {
              app.IM.getAuthUserInfo();
            });

            app.SMH.showToast({
              title: `${this.isLogin ? "修改成功" : "新建成功"}`,
            });
            // switch(this.isLogin){
            //   case false:
            //     this.jumpAction("pages/index/index")
            //   case true:
                this.backAction();
            // }
            return res;
          }
          return Promise.reject(res);
        })
        .catch((e) => {
          return Promise.reject(e);
        });
    },
    checkValid() {
      if (!this.formData.realName) {
        return "请输入姓名";
      } else if (!this.mobilePhone) {
        return "请先授权手机号";
      } else if (!this.formData.gender && this.formData.gender !== 0) {
        return "请选择性别";
      } else if (!this.formData.marriage && this.formData.marriage !== 0) {
        return "请选择婚姻状况";
      }
      // else if(!this.formData.classId){
      //        return "请选择学生所在班级"
      //      }
    },
    onInput(e, type) {
      let detail = e.detail || {};
      let value = detail.value;
      this.formData[type] = value;
    },
    authorizedPhone() {
      console.log("授权手机号");
    },
  },
});
export default pageOption;
</script>
 
<style lang="scss" scpoed>
.information {
  .box {
    .perfect_info {
      padding: 64rpx;
      padding-bottom: 200rpx;
      .actInfo {
        font-size: 26rpx;
        color: #b2b2b2;
        padding-bottom: 20rpx;
      }
      .title {
        font-size: 46rpx;
        color: #222222;
        padding-bottom: 5rpx;
        & > view:last-child {
          margin-top: 30rpx;
          font-weight: bold;
        }
      }
      .item {
        padding-top: 40rpx;
        border-bottom: 1px solid rgba($color: #979797, $alpha: 0.63);
        .label {
          font-size: 26rpx;
          color: #b2b2b2;
        }
        .content {
          padding: 25rpx 0;
          font-size: 42rpx;
          color: #222222;
          &.input {
            padding: 0;
          }
        }
        .place {
          opacity: 0.1;
        }
        .switch {
          color: $uni-main-color;
        }
        .iden {
          height: 80rpx;
          font-size: 28rpx;
          border-radius: 100rpx;
          background: #fafafa;
          &.active {
            color: #fff;
            background-color: $uni-main-color;
          }
        }
        &.iden-box {
          padding-bottom: 40rpx;
        }
        .authorized_phone {
          top: 50%;
          right: 0;
          z-index: 2;
          button {
            padding: 0;
          }
        }
        .authorized {
          color: $uni-main-color;
          font-size: 32rpx;
        }
      }
      .tips {
        padding-top: 30rpx;
      }
      .btn-box {
        width: 100%;
        height: 200rpx;
        box-sizing: border-box;
        padding-top: 40rpx;
        left: 0;
        bottom: 0;
        background-color: #fff;
        .btn {
          width: 400rpx;
          height: 100rpx;
          border-radius: 50rpx;
          background-color: $uni-main-color;
          color: #fff;
        }
      }
    }
    .hold-style {
      color: #e9e9e9;
    }
  }
}
</style>
