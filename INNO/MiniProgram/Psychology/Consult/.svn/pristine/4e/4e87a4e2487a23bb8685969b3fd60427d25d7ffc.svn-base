<template>
<view class="poster" @touchmove.stop.prevent="noAction">
  <ori-popup
      ref="popup"
      type="center"
      @change="change"
      background-color="#fff"
  >
    <template v-slot:content>
      <view
        style="
          border-radius: 30rpx;
          overflow: hidden;
        "
      >
        <image :src="posterImg" mode="aspectFit" class="img-poster" />
        <div class="btn-save C_fff flex-c-c" @click="save" :class="{'loading':saveLoading||!hasDone}">保存至手机</div>
      </view>
    </template>
  </ori-popup>
  <view class="l-painter-box">
    <l-painter
      is-canvas-to-temp-filePath
      @done="painterDone"
      @success="success"
      css="width:650rpx;height:816rpx;border-radius:30rpx;background:#fff;"
      :width="'650rpx'"
      :height="'816rpx'"
      ref="painter"
    >
      <l-painter-image
        css="margin:auto;width:448rpx;height:448rpx;margin-top:84rpx;"
        :src="posterMsg.code || ''"
      ></l-painter-image>
      <l-painter-view
        css="text-align:center;margin-top:68rpx;font-weight:bold;font-size:42rpx;padding:0 40rpx;"
      >
        <l-painter-text :text="posterMsg.title || ''"></l-painter-text>
      </l-painter-view>
      <l-painter-view
        css="text-align:center;margin-top:20rpx;font-size:24rpx;padding:0 40rpx;"
      >
        <l-painter-text :text="posterMsg.tips || ''"></l-painter-text>
      </l-painter-view>
    </l-painter>
  </view>
</view>
</template>

<script>
import oriPopup from "@/components/ori-comps/popup/ori-popup";
import painterMixin from "@/components/lime-painter/mixin.js"; 
const BaseComp = Page.BaseComp({
  data() {
    return {
      showPoster: false,
      hasDone: false,
      posterMsg: {}, 
      posterImg:"",
    };
  },
  components: {
    oriPopup,
  },
  mixins:[painterMixin],
  methods: {
    showModal(posterMsg) {
      if(this.posterMsg.key && this.posterMsg.key == posterMsg.key){
        this.hasDone = true;
      }
      this.posterMsg = JSON.parse(JSON.stringify(posterMsg || {}));
      this.fileType = this.posterMsg.fileType || this.fileType;
      this.quality = this.posterMsg.quality || this.quality;
      this.showPoster = true;
      this.$refs.popup.show();
    },
    change(e) {
      if (!e.show) {
        this.showPoster = false;
        this.hasDone = false;
      }
      this.$emit('change',e);
    },
    painterDone(e){
      console.log('painterDone',e)
      this.hasDone = true;
    },
    success(e){
      console.log('poster success',e);
      if(this.showPoster){
        this.posterImg = e;
      }
      this.$emit('success',e);
    },
  },
});
export default BaseComp
</script>

<style lang="scss" scoped>
.l-painter-box{
  position: fixed;
  opacity: 0;
  left: -1000px;
  top:-1000px; 
}
.btn-save {
  width: 650rpx;
  height: 100rpx;
  background: $uni-main-color;
  border-radius: 16rpx;
  position: fixed;
  bottom: 48rpx;
  left: 50%;
  transform: translateX(-50%);
  font-size: 36rpx;
  transition: opacity 0.3s;
  &.loading{
    opacity: 0.5;
  }
}
.img-poster{
  margin:auto;
  width:650rpx;
  height:816rpx;
}
</style>