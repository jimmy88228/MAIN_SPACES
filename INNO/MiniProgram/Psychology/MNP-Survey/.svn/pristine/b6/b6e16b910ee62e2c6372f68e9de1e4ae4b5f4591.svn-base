<template>
  <view>
    <view v-show="!showLoading">
      <frame-box :showPage="mixShowPage">
        <template v-slot:body>
          <view class="evaluating-detail flex-col flex" :style="isMP && 'height: 100vh'">
            <!-- #ifdef MP -->
            <page-nav :isTransparent="true"></page-nav>
            <view class="evaluating-bg-area-cover"
              :style="{'background-color':`${acInfo.evaluateActivitySetting.detailBgColor}`}"
              v-if="detailBg || ( acInfo.evaluateActivitySetting && acInfo.evaluateActivitySetting.detailBgColor)">
              <!-- <image class="evaluating-bg-area-cover-image" mode="widthFix" :src="detailBg" /> -->
              <oriImage :showLoading="false" class="evaluating-bg-area-cover-image" mode="widthFix" :src="detailBg" />
            </view>
            <view class="evaluating-bg-area" v-else>
              <!-- <image class="evaluating-bg" :src="requireStatic('/green-bg.png')" mode="widthFix" /> -->
              <oriImage :showLoading="false" class="evaluating-bg" :src="requireStatic('/green-bg.png')" mode="widthFix" />
            </view>
            <!-- #endif -->
            <view class="evaluating-index flex-col-1">
              <!-- #ifdef MP -->
              <view class="msg-box flex-s-c">
                <view v-for="(item,index) in msgList" :key="item.key" class="item flex1 f-shrink-0 flex-col"
                  :class="[index==0?'flex-s-c':'flex-c-c']">
                  <view class="C_7f font-20">{{item.title || ""}}</view>
                  <view v-if="item.title == '班级'" class="content font-22">{{acInfo.joinStructure || ""}}</view>
                  <view v-else class="content font-22">{{curStudentInfo[item.key] || ""}}</view>
                </view>
              </view>
              <!-- #endif -->
              <view class="content-box flex flex-col-1">
                <template v-if="!detailBg || isH5">
                  <view class="content-info flex">
                    <scroll-view class="flex1" scroll-y>
                      <view class="font-22 C_7f"><text
                          class="p-r-10">题目{{ acInfo.questionCount }}</text><text>约{{ acInfo.estimatedTime }}分钟</text>
                      </view>
                      <view class="title font-32">{{ acInfo.activityName }}</view>
                      <view class="tips_content">
                        <view class="tips font-22 C_7f" v-if="acInfo.modelIds && acInfo.modelIds.length == 1">
                          {{acInfo.modelDescription }}</view>
                        <view v-if="acInfo.activityDescription && acInfo.activityDescription.trim()" class="line">
                        </view>
                        <view v-if="acInfo.activityDescription && acInfo.activityDescription.trim()"
                          class="notice-box flex" :class="isH5?'flex-col':''">
                          <view class="notice-title font-32 p-r-20 f-shrink-0">测评须知</view>
                          <view class="tips_read C_7f font-22">{{ acInfo.activityDescription }}</view>
                        </view>
                      </view>
                    </scroll-view>
                  </view>
                </template>
                <template>
                  <view class="btn flex-c-c fixed-X-50 invalid C_B2" v-if="acInfo.joinState == 'cannotjoin'"
                    @click="jump">
                    开始测评</view>
                  <view class="btn flex-c-c fixed-X-50 invalid-green" v-else-if="acInfo.joinState == 'notstart'"
                    @click="jump">
                    活动未开始</view>
                  <view class="btn flex-c-c fixed-X-50" v-else-if="acInfo.joinState == 'unjoin'" @click="jump">
                    开始测评</view>
                  <view class="btn flex-c-c fixed-X-50" v-else-if="acInfo.joinState == 'joining'" @click="jump">
                    继续测评</view>
                  <view class="btn flex-c-c fixed-X-50 invalid" v-else-if="acInfo.joinState == 'finished'"
                    @click="jump">
                    已测评
                  </view>
                  <view class="btn flex-c-c fixed-X-50 invalid" v-else-if="acInfo.joinState == 'end'" @click="jump">
                    活动已结束
                  </view>
                </template>
              </view>
            </view>
          </view>
        </template>
      </frame-box>
      <template v-if="!mixShowPage">
        <empty :showBack="!isH5">
          <view>没有访问权限</view>
          <view>
            <!-- #ifdef H5 -->
            <button class="btn-logout flex-c-c" @click="logout" data-url="/pages/index/index">退出登录 ({{count}}s)</button>
            <!-- #endif -->
          </view>
        </empty>
      </template>
    </view>
    <view v-show="showLoading" class="loading-view flex-c-c">
      <loading-view></loading-view>
    </view>
  </view>
</template>

<script>
  import SMH from "@/common/helper/show-msg-handler.js";
  import oriImage from "@/components/ori-comps/image/ori-image";
  import LoadingView from '@/components/css3/loading/loading.vue';

  const app = getApp();
  const pageOption = Page.BasePage({
    components: {
      LoadingView,
      oriImage,
    },
    data() {
      return {
        // 定时器退出
        count: 10,
        loginTimer: null,
        // **背景图
        bgHeight: 0,
        bgWidth: 0,
        //********/
        showLoading: true,
        mixShowPage: false,
        curStudentInfo: {
          name: "",
          studentNumber: "",
          classFullName: "",
        },
        msgList: [{
            title: "测评对象",
            key: "name",
          },
          {
            title: "账号",
            key: "studentNumber",
          },
          {
            title: "班级",
            key: "classFullName",
          },
        ],
        acInfo: {
          activityName: "",
          activityDescription: "",
          questionCount: 0,
          estimatedTime: 0,
          answerCount: 0,
          activityId: 0,
          endTime: "",
          joinState: "",
          logo: "",
          modelDescription: "",
          startTime: "",
        },
      };
    },
    onLoad(options) {
      console.log('navigatornavigator', navigator, this.mobileInfo)
      this.options = options;
    },
    onShow() {
      this.loadData();
    },
    computed: {
      detailBg() {
        let acInfo = this.acInfo;
        let evaluateActivitySetting = acInfo.evaluateActivitySetting || {};
        let detailBg = evaluateActivitySetting.detailBgImg || '';
        return detailBg
      }
    },
    // onShareAppMessage(e){},
    methods: {
      loadData() {
        this._getBsnUserInfo().then((res) => {
          this.curStudentInfo = res;
        });
        return this.$Http(this.$Apis.getActivityInfo, {
          data: {
            activityId: this.options.activityId,
          },
        }).then((res) => {
          if (res.code == 1) {
            let data = res.data || {};
            let evaluateActivitySetting = data.evaluateActivitySetting
            for (let i in evaluateActivitySetting) {
              if (typeof (evaluateActivitySetting[i]) == 'string') {
                evaluateActivitySetting[i] = evaluateActivitySetting[i].trim()
              }
            }
            this.acInfo = {
              ...this.acInfo,
              ...data,
            };
            // #ifdef H5
            if (this.acInfo.joinState == 'finished') {
              this.redirectAction(
                `/pages/activities/evaluating/answer/answer-result`
              );
            } else {
              this.showLoading = false;
            }
            // #endif
            // #ifdef MP
            this.showLoading = false;
            // #endif
            this.mixShowPage = true;
          }
        }).catch(() => {
          this.showLoading = false;
          // #ifdef H5
          this.autoLoginOut()
          // #endif
        })
      },
      jump() {
        let acInfo = this.acInfo || {};
        if (acInfo.joinState == "cannotjoin") {
          SMH.showToast({
            title: `不属于本次测评对象`,
          });
          return;
        }
        if (!(acInfo.joinState == "unjoin" || acInfo.joinState == "joining")) {
          return;
        }
        let url =
          `/pages/activities/evaluating/answer/answer?activityId=${acInfo.activityId || 0}&current=${acInfo.answerCount || 0}&allCount=${acInfo.questionCount}`;
        this.jumpAction(url);
      },
      logout() {
        this.clearTimer();
        app.LM.logout().logout('bsnUserToken');
        this.reLaunchAction(
          `/pages/startup/startup?id=${app.PM.getParams('initId')||0}&schoolId=${app.PM.getParams('schoolId')||0}&campusId=${app.PM.getParams('campusId')||0}&classId=${app.PM.getParams('classId')||0}`
        )
      },
      autoLoginOut() {
        // #ifdef H5
        if (this.count > 0) {
          this.count--;
          this.loginTimer = setInterval(() => {
            if (this.count > 0) {
              this.count--;
            } else {
              this.clearTimer();
              this.logout();
            }
          }, 1000)
        }
        // #endif
      },
      clearTimer() {
        if (this.loginTimer) {
          clearInterval(this.loginTimer)
          this.loginTimer = null;
        }
      }
    },
  });
  export default pageOption;
</script>

<style lang="scss" scoped>
  @import "./H5.scss";

  .loading-view {
    width: 100%;
    height: 100vh;
  }

  .evaluating-detail {
    position: relative;
    height: 100%;

    .evaluating-bg-area {
      position: fixed;
      top: 0px;
      left: 0px;
      width: 100%;
      z-index: -1;
    }

    .evaluating-bg {
      width: 100%;
    }

    .evaluating-bg-area-cover {
      position: absolute;
      top: 0px;
      left: 0px;
      width: 100%;
      min-height: 100vh;
      z-index: -1;

      .evaluating-bg-area-cover-image {
        width: 100%;
      }
    }


    .evaluating-index {
      padding: 35rpx;
      padding-bottom: 200rpx;
      font-family: PingFangSC-Regular;
      overflow-y: hidden;
    }

    .msg-box {
      position: fixed;
      width: calc(100% - 35rpx - 35rpx);
      left: 35rpx;
      background: rgba($color: #ffffff, $alpha: 0.8);
      border-radius: 14rpx;
      min-height: 66rpx;
    }

    .item {
      border-right: 1px solid rgba($color: #979797, $alpha: 0.2);
      box-sizing: border-box;
      padding: 0 10rpx;
      flex-shrink: 0;

      &:first-child {
        padding-left: 20rpx;
      }

      &:last-child {
        border-right: none;
      }
    }

    .content {
      word-break: break-all;
      font-family: PingFangSC-Medium;
    }

    .content-box {
      padding: 120rpx 30rpx 0 30rpx;
      overflow-y: hidden;

    }

    .content-info {
      height: 100%;
      overflow: hidden;
    }

    .title {
      font-size: 56rpx;
      line-height: 85rpx;
      // padding: 20rpx 0;
      padding-top: 30rpx;
      margin-left: -1px;
    }

    .tips_content {
      // padding-right: 250rpx;
    }

    .tips {
      padding-top: 30rpx;
      line-height: 38rpx;
      word-break: break-all;
    }

    .notice-title {
      line-height: 48rpx;
    }

    .tips_read {
      line-height: 48rpx;
    }

    .btn {
      width: 500rpx;
      height: 100rpx;
      border-radius: 50rpx;
      color: #fff;
      background-color: $uni-main-color;
      bottom: 60rpx;
      box-shadow: 0 0 20rpx 0 rgba($color: #5ecf68, $alpha: 0.5);

      &.invalid {
        color: #7f7f7f;
        background-color: #dfdfdf;
        box-shadow: unset;
        cursor: default;

      }

      &.invalid-green {
        color: rgb(230, 255, 240);
      }
    }

    .notice-box {}

    .line {
      width: 100%;
      height: 1px;
      background-color: #dfdfdf;
      margin: 80rpx 0;
    }
  }

  .btn-logout {
    width: 380rpx;
    height: 100rpx;
    border-radius: 50rpx;
    background: #f3f3f3;
    margin: 20rpx auto;
  }
</style>