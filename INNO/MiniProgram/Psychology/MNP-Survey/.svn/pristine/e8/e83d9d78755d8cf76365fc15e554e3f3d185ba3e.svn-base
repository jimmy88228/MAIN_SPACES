<template>
  <view class="student-info flex flex-col">
    <page-nav :full="false"></page-nav>
    <template v-if="showLoading">
      <view class="flex1 flex-c-c">
        <loading-view v-show="showLoading"></loading-view>
      </view>
    </template>
    <template v-else>
      <view class="student_main flex-s-c">
        <view class="student_icon flex-c-c shrink0">{{studentInfo.name}}</view>
        <view class="student_main_info flex-c-b flex-col ">
          <view class="font-32 m-b-10 bold">{{studentInfo.fullName}}</view>
          <view class="font-20">{{studentInfo.className}}</view>
        </view>
      </view>
      <view class="app_entry flex-b-c">
        <view class="entry_item flex-c-c" @click="jumpArchives">
          <image :src="requireStatic(mentalFileIcon)" mode="widthFix" />
          <view class="font-26 bold">心理档案</view>
        </view>
        <view class="entry_item flex-c-c"
          @click="jumpAction(`/pages/work-bench/student-edit/student-edit?userId=${studentInfo.userId}`)">
          <image :src="requireStatic(userInfo)" mode="widthFix" />
          <view class="font-26 bold">学生资料</view>
        </view>
      </view>
      <template v-if="parentsList.length > 0">
        <view class="list_title flex-b-c">
          <view class="font-26 bold">当前绑定的家长</view>
          <view class="change_manager flex-c-c" @click="showSetManager = !showSetManager">更改管理员</view>
        </view>
        <view class="bind-list">
          <uni-swipe-action>
            <uni-swipe-action-item :right-options="item.options" v-for="(item,i) in parentsList" :key="i"
              @click="deleteItem">
              <view class="bind-item flex-s-c">
                <view class="bind-icon flex-c-c font-26 C_fff m-r-25 shrink0">{{item.relateTypeDesc}}</view>
                <view class="flex-b-c flex1">
                  <view class="bind-info flex-s-b flex-col">
                    <view class="flex-s-c m-b-10">
                      <view class="font-26 C_333 m-r-10">{{item.fullDescription}}</view>
                      <view class="manager_icon flex-c-c shrink0" v-if="item.isAdmin">管理员</view>
                    </view>
                    <view class="font-22 C_B2" v-if="item.mobilePhone">
                      {{item.isAdmin?_phoneEllipsis(item.mobilePhone):item.mobilePhone}}</view>
                  </view>
                  <view v-show="showSetManager" :class="['font-22','shrink0','m-l-10',item.isAdmin?'C_B2':'C_008acb']"
                    @click="setManager" :data-index="i">
                    设为管理员
                  </view>
                </view>
              </view>
            </uni-swipe-action-item>
          </uni-swipe-action>
        </view>
      </template>
      <template v-else>
        <view class="flex1 relative">
          <empty :showBack="false"></empty>
        </view>
      </template>
    </template>
    <psychologyProtocol @confirm="confirmProtocol" ref="psychologyProtocol"></psychologyProtocol>
  </view>
</template>

<script>
  import psychologyProtocol from '@/components/psychology-protocol/psychology-protocol.vue';
  import LoadingView from '@/components/css3/loading/loading.vue';
  const app = getApp();
  const pageOption = Page.BasePage({
    data() {
      return {
        showLoading: true,
        options: {},
        mentalFileIcon: 'class-manage/mental-file.png',
        userInfo: 'class-manage/user-info.png',
        studentInfo: {},
        showSetManager: false,
        // 设置管理员padding
        setManagerPadding: false
      };
    },
    components: {
      psychologyProtocol,
      LoadingView
    },
    computed: {
      parentsList() {
        let studentInfo = this.studentInfo || {};
        let parentList = studentInfo.parentList || [];
        let formatterList = [];
        // 添加删除按钮
        if (parentList.length > 0) {
          for (let i = 0; i < parentList.length; i++) {
            if (parentList.length != 1 && parentList[i].isAdmin) {
              formatterList.push({
                ...parentList[i],
                options: [{
                  text: '删除',
                  style: {
                    backgroundColor: '#EFEFEF',
                    color: "#7F7F7F"
                  },
                  index: i,
                  disabled: 1
                }]
              })
            } else {
              formatterList.push({
                ...parentList[i],
                options: [{
                  text: '删除',
                  style: {
                    backgroundColor: '#f56c6c',
                  },
                  index: i
                }]
              })
            }
          }
        }
        return formatterList
      }
    },
    onLoad(options) {
      this.options = options
    },
    onShow() {
      this.init()
    },
    methods: {
      init() {
        this.oragnize = app.SM.structureInfo;
        return this.$Http(this.$Apis.getStudentInfo, {
          data: {
            userId: this.options.userId
          }
        }).then((res) => {
          if (res.code == 1) {
            let data = res.data;
            this.studentInfo = data
            return data
          }
        }).finally(() => {
          setTimeout(() => {
            this.showLoading = false
          }, 200)
        })
      },
      setManager({
        currentTarget
      }) {
        let that = this;
        let index = currentTarget.dataset.index;
        let parentList = that.parentsList;
        let setItem = parentList[index];
        if (setItem.isAdmin || that.setManagerPadding) return
        uni.showModal({
          title: "更改管理员",
          content: `是否确认将${setItem.fullDescription}设置为管理员`,
          confirmText: "确认",
          confirmColor: "#21B014",
          success: function (res) {
            if (res.confirm) {
              that.httpManagerChange(setItem)
            }
          }
        })

      },
      httpManagerChange(setItem) {
        this.setManagerPadding = true;
        return this.$Http(this.$Apis.updateAdmin, {
          data: {
            "recordId": setItem.recordId,
            "userId": this.studentInfo.userId
          },
          other: {
            showLoading: true
          }
        }).then(res => {
          if (res.code == 1) {
            return this.init()
          }
        }).finally(() => {
          setTimeout(() => {
            this.setManagerPadding = false;
          }, 200);
        })
      },
      deleteItem(e) {
        let that = this;
        let index = e.content.index;
        let parentsList = that.parentsList;
        let clickItem = parentsList[index];

        console.log(clickItem, "clickItem")
        if (e.content.disabled) {
          app.SMH.showToast({
            title: '无法删除管理员'
          })
          return
        }
        uni.showModal({
          content: "是否确认删除？",
          confirmText: "删除",
          confirmColor: "#21B014",
          success: function (res) {
            if (res.confirm) {
              that.$Http(that.$Apis.deleteParent, {
                data: {
                  "recordId": clickItem.recordId,
                  "userId": that.studentInfo.userId
                }
              }).then(res => {
                if (res.code == 1) {
                  that.init()
                }
              })
            }
          }
        })
      },
      jumpArchives() {
        this.$refs.psychologyProtocol.showModal();
      },
      confirmProtocol() {
        this.jumpAction(
          `/pages/work-bench/archives/archives?memberName=${this.studentInfo.fullName}&userId=${this.studentInfo.userId}`
        )
      },
    }
  });
  export default pageOption;
</script>

<style lang="scss">
  .student-info {
    width: 100%;
    min-height: 100vh;
  }

  .student_main {
    padding: 25rpx;

    .student_icon {
      width: 100rpx;
      height: 100rpx;
      background: #21B014;
      font-size: 34rpx;
      color: #FFFFFF;
      line-height: 48rpx;
      border-radius: 50%;
      margin-right: 26rpx;
    }
  }

  .app_entry {
    padding: 25rpx;

    .entry_item {
      width: 338rpx;
      height: 132rpx;
      background: #FFFFFF;
      box-shadow: 0px 2rpx 14rpx 0px rgba(0, 0, 0, 0.07);
      border-radius: 10rpx;

      image {
        width: 37rpx;
        height: 37rpx;
        margin-right: 20rpx
      }
    }
  }

  .list_title {
    padding: 38rpx 41rpx 27rpx 27rpx;

    .change_manager {
      width: 130rpx;
      height: 42rpx;
      background: #FFFFFF;
      border-radius: 21rpx;
      border: 1px solid #DDDDDD;
      font-size: 20rpx;
    }
  }

  .bind-list {
    box-shadow: 0px 2rpx 14rpx 0px rgba(0, 0, 0, 0.07);
    border-radius: 20rpx;
    margin: 0 25rpx;
    overflow: hidden;

    .bind-item {

      border-bottom: 1px solid #EFEFEF;
      margin: 0 28rpx;
      padding: 37rpx 18rpx 43rpx;

      .bind-icon {
        width: 80rpx;
        height: 80rpx;
        border-radius: 50%;
        background: #21B014;
      }
    }

    .bind-item:last-child {
      border: 0;
    }

    .manager_icon {
      width: 80rpx;
      height: 32rpx;
      background: #F5FBFF;
      border-radius: 6rpx;
      font-size: 20rpx;
      color: #008ACB;
    }
  }
</style>