<template>
  <view class="information" v-if="!hidePage">
    <image class="green-bg" :src="requireStatic('/green-bg.png')" mode="widthFix" />
    <page-nav isHideHome :isTransparent="true"></page-nav>
    <view class="custom-title" :style="{'height':navHeight+'px'}">填写信息</view>
    <view class="box" v-show="!showLoading">
      <view class="perfect_info">
        <view class="actInfo flex-s-c">
          <view :style="actInfo.activityId?'max-width:48%':''" v-if="schoolInfo.schoolId">{{schoolInfo.schoolName}}
          </view>
          <view v-if="actInfo.activityId">/</view>
          <view style="flex:1" v-if="actInfo.activityId">{{actInfo.activityName}}</view>
        </view>
        <view class="title">请先填写你的信息</view>
        <view class="item">
          <view class="label">学生姓名</view>
          <ori-input :value="formData.name" @onInput="e=>onInput(e,'name')" placeholder="请输入"
            placeholderClass="hold-style" class="input content" boxStyle="padding:5rpx 0;height: calc(1.4rem + 40rpx)"></ori-input>
        </view>
        <view class="item">
          <view class="label">所在学校</view>
          <template v-if="schoolInfo.schoolId">
            <view class="content">{{schoolInfo.schoolName}}</view>
          </template>
          <template v-else>
            <ori-picker @pickerChange="(e)=>pickerChange(e,'school')" :select-fir="selectFstSchool"
              range-key="schoolName" :mode="mode.school" :range="schoolRange" :pickerValue="picker_value_school">
              <template v-slot:content>
                <view class="flex-b-c content" v-if="!selectFstSchool">
                  <view>
                    <template v-if="picker_value_school>=0">
                      <text>{{schoolRange[picker_value_school].schoolName}}</text>
                    </template>
                    <view v-else class="place">请选择</view>
                  </view>
                  <view class="switch font-32">选择</view>
                </view>
                <view class="flex-b-c content" v-else>
                  <view>{{schoolRange[0].schoolName}}</view>
                </view>
              </template>
            </ori-picker>
          </template>
        </view>
        <view class="item">
          <view class="label">填写学号</view>
          <ori-input :value="formData.studentNumber" @onInput="e=>onInput(e,'studentNumber')" placeholder="请输入"
            placeholderClass="hold-style" class="input content" boxStyle="padding:5rpx 0;height: calc(1.4rem + 40rpx)"></ori-input>
        </view>
        <!-- <view class="item"> -->
        <view class="item" v-if="classInfo.classId">
          <view class="label">所在班级</view>
          <!-- <template v-if="classInfo.classId"> -->
          <view class="content"><template
              v-if="classInfo.campusName">[{{classInfo.campusName}}]</template>{{classInfo.classFullName}}</view>
          <!-- </template> -->
          <!-- <template v-else>
						<ori-picker @pickerChange="(e)=>pickerChange(e,'grade')" @columnchange="columnchange"  range-key="className" :mode="mode.grade" :range="classRange" :pickerValue="picker_value">
						  <template v-slot:content>
						    <div class="flex-b-c content">
						      <view>
						        <template v-if="picker_value.length>0">
						          <text  v-for="(item,index) in classRange" :key="index">{{classRange[index][picker_value[index]].campus ? '[' + classRange[index][picker_value[index]].campus + ']' : ''}}{{classRange[index][picker_value[index]].className||''}}</text>
						        </template>
						        <view v-else class="place">请选择</view>
						      </view>
						      <view class="switch font-32">选择</view>
						    </div>
						  </template>
						</ori-picker> 
					</template> -->
        </view>
        <view class="item iden-box flex-s-c" v-if="!options.type">
          <view class="label flex1 f-shrink-0">选择你的身份</view>
          <view class="flex-s-c flex1 f-shrink-0">
            <view :class="['iden','flex-c-c','flex1',formData.relateType == item.relateType?'active':'']"
              @click="formData.relateType = item.relateType" v-for="(item) in relateArr" :key="item.relateType">
              {{item.name}}
            </view>
          </view>
        </view>
        <!-- 家长：获取手机号 -->
        <view class="item">
          <view class="label">我的信息</view>
          <view class="content flex-s-c">
            <ori-picker v-show="options.type == 'child'" @pickerChange="(e)=>pickerChange(e,'relateTypeDesc')"
              :select-fir="selectFstrelateTypeDescRange" range-key="relateTypeDesc" :mode="mode.school"
              :range="relateTypeDescRange" :pickerValue="picker_value_relateTypeDesc">
              <template v-slot:content>
                <view class="select_family_member flex-b-c">
                  <view class="m-r-38">{{relateTypeDescRange[picker_value_relateTypeDesc].relateTypeDesc}}</view>
                  <u-icon name="arrow-down" color="#000000" :size="dropdownSize()"></u-icon>
                </view>
              </template>
            </ori-picker>
            <view v-show="options.type == 'child'" class="select_family_member_splite"></view>
            <view class="flex1 flex-b-c relative">
              <view :style="{'opacity':mobilePhone?'1':'0.1'}">{{mobilePhone?mobilePhone:'授权手机号'}}</view>
              <view v-show="mobilePhone" class="font-32" :style="{'color':_style.themeColor}">更改</view>
              <auth-button class="authorized_phone absolute" :auth="true" :openType="openType"
                @getphonenumber="getPhoneNumber"></auth-button>
            </view>
          </view>
        </view>
        <view class="tips C_7f7f7f font-20">{{tips}}</view>
        <view class="btn-box flex-c-s fixed">
          <view class="btn flex-c-c" @click="confirm">确认信息</view>
        </view>
        <view class="tips_popup" @touchmove.stop.prevent="noAction">
          <ori-popup ref="popup" type="center" :isMaskClick="false" background-color="transparent">
            <template v-slot:content>
              <view class="tips_popup_info">
                <view class="tips_popup_info_message">
                  <view class="font-36 bold text-align-c m-b-55">待验证通过</view>
                  <view class="font-30 m-b-45">{{tipsContent}}</view>
                  <view class="font-30" :style="{'color':_style.themeColor}">已发送验证到小程序中通知家长验证</view>
                </view>
                <view class="tips_popup_button flex-c-c font-30" @click="tipsConfirm">知道了</view>
              </view>
            </template>
          </ori-popup>
        </view>
      </view>
    </view>
    <view class="loading_view flex-c-c" v-show="showLoading">
      <loading-view></loading-view>
    </view>
  </view>
</template>

<script>
  import oriPopup from "@/components/ori-comps/popup/ori-popup";
  import AuthButton from "@/components/auth-button/auth-button.vue";
  import oriPicker from '@/components/ori-comps/picker/ori-picker.vue';
  import oriInput from '@/components/ori-comps/input/ori-input.vue';
  import scanCode from '@/common/helper/scan-code-handler.js';
  import SIH from "@/common/helper/sys-infos-handler"
  import LoadingView from '@/components/css3/loading/loading.vue';


  const app = getApp();
  const pageOption = Page.BasePage({
    components: {
      oriPicker,
      oriInput,
      AuthButton,
      oriPopup,
      LoadingView
    },
    data() {
      return {
        showLoading:true,
        navHeight: SIH.navPlace + SIH.statusBarHeight,
        formData: {
          name: '',
          relateType: '',
          classId: 0,
          schoolId: 0,
          studentNumber: '',
          relateTypeDesc: '',
        },
        mode: {
          'grade': 'multiSelector',
          'school': 'selector',
        },

        lockPage: false,
        classRange: [],
        oriClassArr: [],
        schoolRange: [],
        picker_value: [],
        picker_value_school: -1,
        relateArr: [{
          name: '我是家长',
          relateType: 'child'
        }, {
          name: '我是学生',
          relateType: 'none'
        }],
        tips: '请务必准确填写以上信息，方便老师辨别孩子身份，归档学籍信息',
        curRecordId: 0,

        actInfo: {},
        schoolInfo: {},
        classInfo: {},
        selectFstSchool: false,
        hidePage: true,
        // 获取手机号
        relateTypeDescRange: [{
            relateTypeDesc: '家长'
          },
          {
            relateTypeDesc: '妈妈'
          },
          {
            relateTypeDesc: '爸爸'
          },
          {
            relateTypeDesc: '爷爷'
          },
          {
            relateTypeDesc: '奶奶'
          },
          {
            relateTypeDesc: '公公'
          },
          {
            relateTypeDesc: '婆婆'
          },
          {
            relateTypeDesc: '姐姐'
          },
          {
            relateTypeDesc: '哥哥'
          },
        ],
        picker_value_relateTypeDesc: -1,
        openType: "getPhoneNumber",
        mobilePhone: '',
        tipsContent: ""
      }
    },
    onLoad(options) {
      this.options = options || {};
    },
    onReady() {
      let relateType = this.options.type || 'child'
      this.formData.relateType = relateType;
    },
    onShow() {
      this.init();
    },
    methods: {
        init(){
					this.schoolInfo = scanCode.schoolInfo || {};
					this.classInfo = scanCode.classInfo || {};
					this.actInfo = scanCode.actBaseInfo || {};
					// this.formData.classId = this.classInfo.classId || 0;
					this.formData.schoolId = this.schoolInfo.schoolId || 0;
          this.picker_value_school = -1;
          if(this.options.type == "child"){
            this.picker_value_relateTypeDesc = 0;
            this.formData.relateTypeDesc = "家长"
          }
					// 确保该页面在账号登陆配置时，不展示，不可用
					// app.Sysm.getSysConf('applet_login_type').finally(()=>{
					app.Sysm.getLoginConfig(this.schoolInfo.schoolId || 0).then((res)=>{
						let isAccountLogin =  res.data == 'password';
						if(isAccountLogin){
							this.redirectAction('/pages/login/login')
						} else {
							this.hidePage = false;
						}
					})
          this._checkLogin().then(()=>{
            if(!this.schoolInfo.schoolId) {
							this.loadSchool();
						} else {
							this.loadGradeClass();
						}
          })
          setTimeout(() => {
            this.showLoading = false
          }, 200);
        },
      loadSchool() {
        return this.$Http(this.$Apis.getSchoolList, {
          other: {
            isShowLoad: true
          }
        }).then(res => {
          if (res.code == 1) {
            let data = res.data || [];
            if (data.length == 1) {
              this.selectFstSchool = true
              this.formData.schoolId = data[0].schoolId || 0;
              this.loadGradeClass();
            }
            this.schoolRange = data;
          }
        })
      },
      loadGradeClass() {
        let schoolId = this.formData.schoolId || 0;
        // return this.$Http(this.$Apis.getSchoolClassList,{
        return this.$Http(this.$Apis.getSchoolClassListWithActivity, {
          data: {
            schoolId,
            activityId: this.actInfo.activityId || 0
          },
          other: {
            isShowLoad: true
          }
        }).then(res => {
          this.picker_value = [];
          if (res.code == 1) {
            let data = res.data || [];
            let oriClassArr = data.map(item => {
              item.className = item.gradeName || ''; //共用一个range-key
              return item.classList
            });
            this.oriClassArr = oriClassArr;
            this.$set(this.classRange, 0, data);
            this.$set(this.classRange, 1, oriClassArr[0] || []);
          }
        })
      },
      pickerChange(e, type) {
        if (type == 'grade') {
          this.picker_value = e.detail.value;
          let item = this.classRange[1][this.picker_value[1]] || {};
          this.formData.classId = item.classId || 0
        } else if (type == 'school') {
          if (e.detail.value >= 0 && this.picker_value_school != e.detail.value) {
            this.picker_value_school = e.detail.value;
            let item = this.schoolRange[this.picker_value_school] || {};
            this.formData.schoolId = item.schoolId || 0;
            this.loadGradeClass();
          }
        } else if (type == 'relateTypeDesc') {
          let index = e.detail.value;
          this.picker_value_relateTypeDesc = index;
          this.formData.relateTypeDesc = this.relateTypeDescRange[index].relateTypeDesc || '家长'
        }
      },
      columnchange(e) {
        let detail = e.detail || {};
        if (detail.column == 0) {
          this.$set(this.classRange, 1, this.oriClassArr[detail.value || 0]);
        }
      },
      confirm(e) {
        if (this.lockPage) return;
        let invalid = this.checkValid();
        if (invalid) {
          app.SMH.showToast({
            title: invalid
          })
          return
        };
        return this.bindStudent();
      },
      bindStudent() {
        let formData = this.formData;
        return this.$Http(this.$Apis.bindStudent, {
          data: {
            ...formData,
            sessionId: app.LM.sessionId || 0
          },
          other: {
            isShowLoad: true
          }
        }).then(res => {
          if (res.code == 1) {
            this.lockPage = true;
            if (res.data.content) {
              this.tipsContent = res.data.content;
              this.$refs.popup.show();
              return
            }
            if (!app.LM.recordId) {
              app.LM.savePrivateInfo({
                recordId: res.data.recordId || ''
              });
            }
            app.IM.getAuthUserInfo();

            app.SMH.showToast({
              title: "新建成功"
            });
            if (this.options.fromRoute == "/pages/user-switch/user-switch") {
              this.redirectAction(
                `/pages/user-switch/user-switch?selectType=${this.options.type == 'child'?1:2}&fromRoute=/pages/startup/startup`
              )
            } else {
              this.backAction();
            }
            return res
          }
          return Promise.reject(res)
        }).catch(e => {
          return Promise.reject(e);
        })
      },
      tipsConfirm() {
        this.$refs.popup.dismiss();
        if (this.options.fromRoute == "/pages/user-switch/user-switch") {
          this.redirectAction(
            `/pages/user-switch/user-switch?selectType=${this.options.type == 'child'?1:2}&fromRoute=/pages/startup/startup`
          )
        } else {
          this.backAction();
        }
      },
      checkValid() {
        if (!this.formData.name) {
          return "请输入学生姓名"
        } else if (!this.formData.studentNumber) {
          return "请输入学生学号"
        } else if (!this.formData.schoolId) {
          return "请选择学生所在学校"
        } else if (!this.mobilePhone) {
          return "请先授权手机号"
        }
        // else if(!this.formData.classId){
        //        return "请选择学生所在班级"
        //      }
      },
      onInput(e, type) {
        let detail = e.detail || {};
        let value = detail.value;
        this.formData[type] = value;
      },
      dropdownSize() {
        let px = app.SIH.getConvert(26, "PX")
        return px
      },
      getPhoneNumber({
        e
      }) {
        // console.log(e,app.LM.sessionId)
        return this.$Http(this.$Apis.getPhoneNumber, {
          data: {
            code: e.detail.code || "",
            encryptedData: e.detail.encryptedData || "",
            iv: e.detail.iv || "",
            sessionId: app.LM.sessionId || 0,
          },
          other: {
            isShowLoad: true,
          },
        }).then((res) => {
          this.mobilePhone = res.data || "";
        });
      },
    },
  })
  export default pageOption
</script>

<style lang="scss" scpoed>
  .loading_view {
    width: 100%;
    height: 100vh;
  }

  .information {
    .green-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      z-index: -1;
    }

    .custom-title {
      width: 100%;
      position: absolute;
      top: 0;
      left: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: -1;
    }

    .box {
      .perfect_info {
        padding: 64rpx;
        padding-bottom: 200rpx;

        .actInfo {
          font-size: 26rpx;
          color: #B2B2B2;
          padding-bottom: 20rpx;
        }

        .title {
          font-size: 46rpx;
          color: #222222;
          padding-bottom: 5rpx;
        }

        .item {
          padding-top: 40rpx;
          border-bottom: 1px solid rgba($color: #979797, $alpha: 0.3);

          .label {
            font-size: 26rpx;
            color: #B2B2B2;
          }

          .content {
            padding: 25rpx 0;
            font-size: 42rpx;
            color: #222222;

            &.input {
              padding: 0;
            }

            .select_family_member {}

            .select_family_member_splite {
              margin: 0 50rpx;
              width: 1rpx;
              height: 27rpx;
              opacity: 0.3;
              background-color: #979797
            }
          }

          .place {
            opacity: 0.1;
          }

          .switch {
            color: $uni-main-color;
          }

          .iden {
            height: 80rpx;
            font-size: 28rpx;
            border-radius: 100rpx;
            background: #FAFAFA;

            &.active {
              color: #fff;
              background-color: $uni-main-color;
            }
          }

          &.iden-box {
            padding-bottom: 40rpx;
          }
        }

        .tips {
          padding-top: 30rpx;
        }

        .btn-box {
          width: 100%;
          height: 200rpx;
          box-sizing: border-box;
          padding-top: 40rpx;
          left: 0;
          bottom: 0;
          background-color: #fff;

          .btn {
            width: 400rpx;
            height: 100rpx;
            border-radius: 50rpx;
            background-color: $uni-main-color;
            color: #fff;
          }
        }
      }

      .hold-style {
        color: #E9E9E9;
      }
    }
  }

  .authorized_phone {
    width: 100%;
    height: 100%;
    z-index: 2;

    button {
      padding: 0;
    }
  }

  .tips_popup {
    position: relative;
    overflow: hidden;

    .tips_popup_info {
      background: #FFFFFF;
      border-radius: 20rpx;
      width: 660rpx;

      .tips_popup_info_message {
        padding: 66rpx 75rpx 72rpx;
      }
    }

    .tips_popup_button {
      border-top: 1rpx solid #DDDDDD;
      height: 123rpx;
    }
  }
</style>