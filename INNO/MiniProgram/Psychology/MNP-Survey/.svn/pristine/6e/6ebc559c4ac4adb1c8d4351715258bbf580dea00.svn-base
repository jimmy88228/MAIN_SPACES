<template>
	<view class="custom-page-area" :style="pageStyle">
		<page-nav v-if="holdNav" :mode="navMode"></page-nav>
		<view v-for="(item, index) in  moduleList" :key="index">
			<moduleContain :contain-conf="item.setting" v-if="item.setting.is_enable == 1">
				<template v-if="item.moduleType == 'IMAGE-AD'">
					<imageAd :module-info="item"></imageAd>
				</template>
				<template v-else-if="item.moduleType == 'USER-HEADER'">
					<userHeader :module-info="item" :userInfo="userInfo" :authUserInfo="authUserInfo"></userHeader>
				</template>
				<template v-else-if="item.moduleType == 'USER-SERVICE'">
					<userService :module-info="item" :userInfo="userInfo"></userService>
				</template>
			</moduleContain>
		</view>
	</view>
</template>

<script>
	import moduleContain from "./module/module-contain/module-contain.vue";
	import imageAd from "./module/image-ad/image-ad.vue";
	import userHeader from "./module/user-header/user-header.vue";
	import userService from "./module/user-service/user-service.vue";
	const pageOption = Page.BasePage({
		name: "custom-page",
		components: {
			moduleContain,
			imageAd,
			userHeader,
			userService
		},
		props: {
			userInfo: {
				type: Object,
				default: () => {}
			},
			authUserInfo: {
				type: Object,
				default: () => {}
			},
			holdNav:{
				type: Boolean,
				default: false
			},
			navMode: String
		},
		data() {
			return {
				layoutSetting: {},
				moduleList: [],
				pageName: "",
				pageData: {}
			}
		},
		computed: {
			pageStyle() {
				let layoutSetting = this.layoutSetting || {};
				let pageStyle = "";
				if (layoutSetting.backgroundColor) {
					pageStyle += "background-color:" + layoutSetting.backgroundColor + ";";
				}
				if (layoutSetting.backgroundImage) {
					pageStyle += "background-image:url(" + layoutSetting.backgroundImage + ");";
					pageStyle += "background-repeat: no-repeat;";
					pageStyle += "background-size: 100% auto;";
					pageStyle += "background-position: center " + layoutSetting.backgroundPosition + ";";
				}
				return pageStyle;
			}
		},
		methods: {
			initData(pageData) {
				pageData = pageData || {};
				this.pageData = pageData;
				this.layoutSetting = pageData.layoutSetting || {}
				this.moduleList = pageData.moduleList || [];
			}
		}
	})
	export default pageOption;
</script>

<style lang="less" scoped>
	.custom-page-area {
		width: 100%;
		// min-height: 100%;''
		min-height: 100vh;
	}
</style>
