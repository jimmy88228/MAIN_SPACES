<template>
	<loading-box :showPage="mixShowPage">
		<view class="login">
				<!-- #ifdef MP -->
				<page-nav :hideBtn="true"></page-nav>
				<!-- <page-nav :hideBtn="true" :isTransparent="true"></page-nav> -->
				<!-- #endif -->
				<template v-if="!showTip">
					<template v-if="!isAccountLogin">
						<view class="main">
							<image class="login-logo" :src="customerInfo.logo||''" ></image>
							<view v-if="schoolInfo.schoolId">
								<view class="title">{{schoolInfo.schoolName}}</view> 
								<view v-if="actInfo.activityId" class="content">{{actInfo.activityName||""}}</view>
							</view>
							<view v-else>
								<view class="content">{{customerInfo.customerName||""}}</view>
							</view>
							<!-- <image class="login-logo-big" :src="requireStatic('/cang-gang-login.jpg')" @load="getBgSize" :style="{height:bgHeight,width:bgWidth}"></image> -->
						</view>
						<view class="footer flex-c-c">
							<auth-button class="btn-box" @clicked="register">
								<text class="C_fff font-36">微信授权进入</text>
							</auth-button>
							<view class="agree-area" @click="chooseAgree">
								<view class="agree-icon">
									<view class="select-switch" :class="{'selected': selectAgree}"></view>
								</view>
								<view >我同意心理使用我所提交的信息用于快捷登录，查看 <view class="agree-link" @click.stop="checkAgree">用户隐私保护指引</view></view>
							</view>
						</view>
					</template>
					<template v-else>
						<view class="account-main">
							<image class="login-logo" :src="customerInfo.logo||''" ></image>
							<view v-if="schoolInfo.schoolId">
								<view class="title">{{schoolInfo.schoolName}}</view> 
								<view v-if="actInfo.activityId" class="content">{{actInfo.activityName||""}}</view>
							</view>
							<view v-else>
								<view class="content">{{customerInfo.customerName||""}}</view>
							</view>
							<view class="input-area">
								<view class="input-item">
									<ori-input @onInput="e=>onInput(e,'schoolCode')" :value="inputData.schoolCode||''" placeholder="输入检验ID" placeholderClass="hold-style" class="_input" :boxStyle="inputStyle">
									</ori-input>
								</view>
								<view class="input-item">
									<ori-input @onInput="e=>onInput(e,'account')" :value="inputData.account||''" placeholder="输入账号" placeholderClass="hold-style" class="_input" :boxStyle="inputStyle">
									</ori-input>
								</view>
								<view class="input-item">
									<ori-input @onInput="e=>onInput(e,'password')" :value="inputData.password||''" placeholder="请输入密码" type="password" placeholderClass="hold-style" class="_input" :boxStyle="inputStyle">
									</ori-input>
								</view>
							</view>
							<view class="agree-area" @click="chooseAgree">
								<view class="agree-icon">
									<view class="select-switch" :class="{'selected': selectAgree}"></view>
								</view>
								<view>已阅读并同意心理 <view class="agree-link" @click.stop="checkAgree">用户隐私保护指引</view></view>
							</view>
							<button class="btn-box"  @click="bindStudentByPwd">
								<text class="C_fff font-36">确认</text>
							</button>
						</view>
					</template>
				</template>
				<template v-else>
					<view class="empty-area">无效APP CODE</view>
				</template>
		</view>
	</loading-box>
</template>

<script>
import SIH from "@/common/helper/sys-infos-handler";
import AuthButton from '@/components/auth-button/auth-button.vue';
import oriInput from '@/components/ori-comps/input/ori-input.vue';
import scanCode from '@/common/helper/scan-code-handler.js';
import CIH from '@/common/helper/common-info-handler.js';
import StorageH from "@/common/helper/storage-handler.js";
import brandM from "@/common/manager/brand-manager.js";
import utils from '@/common/support/utils.js';

const app = getApp();
const pageOption = Page.BasePage({
	components:{
		AuthButton,
		oriInput, 
	},
	data(){
		return {
			bgHeight:0,
			bgWidth:0,
			lockPage:false,
			selectAgree: false,
			isAccountLogin: false,
			inputData: {
				schoolCode: "",
				account: "",
				password: "",
			},
			activityId:0,
			schoolInfo:{},
			actInfo:{},
			customerInfo:{},
			showTip: false
		}
	},
	computed: {
		inputStyle(){
			return "width:100%;height:100%;padding:20rpx 20rpx 20rpx 50rpx;box-sizing:border-box;"
		}
	},
	onLoad(options){
		this.schoolInfo = scanCode.schoolInfo || {};
		this.actInfo = scanCode.actBaseInfo || {};
		this.options = options || {};
	},
	onShow(){
		this.init().then(()=>{
			this.checkAppCode().then(()=>{
				this.initCustomerInfo().then(()=>{
					this.$nextTick(()=>{
						this.mixShowPage = true;
					})
				})
			})
		})
	},  
	methods: {
		 getBgSize({
        detail
      }) {
        let windowHeight = SIH.windowHeight;
        let windowWidth = SIH.windowWidth;
        let imgW = windowWidth;
        let imgH = (windowWidth * detail.height) / detail.width;
        if (imgH < windowHeight) {
          imgH = windowHeight;
          imgW = (windowHeight * detail.width) / detail.height;
        }
        this.bgWidth = imgW + "px"
        this.bgHeight = imgH + "px"

      },
		checkAppCode(){
			// #ifdef H5
			let appCode = this.options.appCode || brandM.appCode||"";
			if(!appCode){
				brandM.removeData();
				this.showTip = "无效的APP CODE";
				app.SMH.showToast({
					title: this.showTip
				})
				this.$nextTick(()=>{
					this.mixShowPage = true;
				})
				return Promise.reject();
			}
			// brandM.setData({
			// 	appCode
			// })
			// #endif
			return Promise.resolve();
		},
		init(){
			// #ifdef H5
			let inputData = StorageH.get("LOGIN_CERTIFICATE") || this.inputData || {	schoolCode: "",	account: "",	password: "",};
			this.$set(this.inputData,"schoolCode",inputData.schoolCode)
			this.$set(this.inputData,"account",inputData.account)
			this.$set(this.inputData,"password",inputData.password)
			this.isAccountLogin = true;
			app.LM.logout().logout('bsnUserToken');
			app.PM.setParams('initId',parseInt(this.options.id||0)||app.PM.getParams('initId')||0);
			this.activityId = app.PM.getParams('initId');
			let optionStr = "";
			if(!this.options.id && this.activityId){
				this.options.id = this.activityId;
				optionStr = utils.paramsByJson(this.options || {});
			}
			if(!this.options.appCode && brandM.appCode){
				this.options.appCode = brandM.appCode;
				optionStr = utils.paramsByJson(this.options || {});
			}
			if(optionStr){
				this.reLaunchAction(`/pages/login/login?${optionStr}`)
				return Promise.reject();
			}
			return Promise.resolve();
			// #endif 

			// #ifdef MP
			return app.Sysm.getSysConf('applet_login_type').finally(()=>{
				this.isAccountLogin =  app.Sysm.sysConf['applet_login_type'] == 'password';
			}).catch(e=>{
				return Promise.resolve();
			})
			// #endif
		},
		initCustomerInfo(){
			return CIH.getCustomerInfo().then(res=>{
				this.customerInfo = res||{};
			})
		},
		register(){
			if(!this.selectAgree){
				app.SMH.showToast({
					title: '请先勾选用户协议！'
				});
				return;
			}
			if(this.lockPage) return;
			this.lockPage = true
			return this.beforeLogin().then(res=>{
					if(this.isLogin){
						app.SMH.showToast({
							title:"注册成功"
						});
						this.redirectAction('/pages/user-type-select/user-type-select')
					}else{
						app.SMH.showToast({
							title:"注册异常"
						});
					}
					return res
			}).finally(()=>{
				this.lockPage = false;
			})
		},
		beforeLogin(){
			// #ifdef MP
				return this._getTokenRegister().then(res=>{
					return this._checkLogin();
				})
			// #endif
			// #ifdef H5
				return Promise.resolve();
			// #endif
		},
		bindStudentByPwd(){
			if(this.lockPage) return;
			let inputData = this.inputData || {}, warn = "";
			if(!warn){
				if(!inputData.schoolCode){
					warn = "请输入校验ID";
				} else if(!inputData.account){
					warn = "请输入账号";
				} else if(!inputData.password){
					warn = "请输入密码";
				} else if(!this.selectAgree){
					warn = "请先勾选用户协议！"
				}
			}
			if(warn){
				app.SMH.showToast({
					title: warn
				})
				return;
			}
			this.lockPage = true;
			return this.beforeLogin().then(()=>{
				let api = "bindStudentByPwd",params=inputData;
				// #ifdef H5
					api = "loginByH5";
					params.activityId = this.activityId;
				// #endif
				return this.$Http(this.$Apis[api],{
				  data:params ,
				  other:{
				    isShowLoad: true
				  }
				}).then(res=>{
				  if(res.code==1){
						if(res.data){
							let data = res.data || '';
							let recordId=data,bsnUserToken=data,authUserToken="";
							// #ifdef H5
							bsnUserToken = data.authUserToken; 
							authUserToken = data.authUserToken;
							recordId = data.recordId;
							app.LM.savePrivateInfo({authUserToken});
							// #endif
							app.LM.savePrivateInfo({recordId});
							app.IM.getUserInfoByToken().then(()=>{
								// #ifdef H5
								StorageH.set("LOGIN_CERTIFICATE",inputData)
								this.redirectAction(this.options.fromRoute || `/pages/activities/evaluating/detail/detail?activityId=${this.activityId||0}`);
								// #endif

								// #ifdef MP
								this.reLaunchAction('/pages/index/index')
								// this.backAction(this.options.fromRoute || '/pages/index/index');
								// #endif
							})
						}
				  }
				})
			}).finally(()=>{
				this.lockPage = false
			})
		},
		onInput(e, key){
			let detail = e.detail || {};
			let value = detail.value;
			this.inputData[key] = value;
		},
		chooseAgree(){
			this.selectAgree = !this.selectAgree;
		},
		checkAgree(){
			this.jumpAction('/pages/agree/agree');
		}
	},
})
export default pageOption
</script>

<style scoped lang="scss">
	.main{
		padding:220rpx 0rpx 0 96rpx;
		color: #333;
		.title,.content{
			font-size: 62rpx;
			font-weight: bold;
			text-overflow: -o-ellipsis-lastline;
			overflow: hidden;
			text-overflow: ellipsis;
			display: -webkit-box;
			-webkit-line-clamp: 3;
			line-clamp: 3;
			-webkit-box-orient: vertical;
		}
		.login-logo{
			width:160rpx;
			height: 160rpx;
			display: block;
			margin-bottom: 65rpx;
		}
		.login-logo-big{
			position: fixed;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
		}
	}
	.footer{
		position: fixed;
		flex-direction: column;
		bottom: 80rpx;
		left: 50%;
		transform: translateX(-50%);
	}
	.btn-box{ 
		width: 580rpx;
		height: 110rpx;
		border-radius: 55rpx;
		overflow: hidden;
		background-color: $uni-main-color;
	}
	.btn{
		width: 100%;
		height: 100%;
		border-radius: 55rpx;
	}
.box{
	position: fixed;
	bottom: 30rpx;
	left: 50%;
	transform: translateX(-50%);
}
.account-main{
	padding-top: 80rpx;
	text-align: center;
	.title,.content{
		font-size: 30rpx;
		font-weight: bold;
		margin-bottom: 50rpx;
	}
	.hold-style{
		color: #E9E9E9;
	}
	.login-logo{
		width:236rpx;
		height: 236rpx;
		display: block;
		margin: 0 auto;
		margin-bottom: 20rpx;
	}
	.input-area{
		.input-item{
			text-align:left;
			margin: 0px auto;
			margin-bottom: 25rpx;
			width: 600rpx;
			height: 120rpx;
			display: flex;
			background: #FAFAFA;
			border-radius: 60rpx;
			._input{
				width:100%;
				height:100%;
				display: flex;
				align-items: center;
			}
		}
	}
	.btn-box{
		width: 300rpx;
		height: 100rpx;
		border-radius: 55rpx;
		overflow: hidden;
		background-color: $uni-main-color;
		margin: 0 auto;
	}
	.agree-area{
		justify-content: center;
		margin: 0px;
		margin-bottom: 144rpx;
	}
}

.agree-area{
	line-height: 30rpx;
	font-family: PingFangSC-Regular;
	font-size: 22rpx;
	margin-top:35rpx;
	display: flex;
	.agree-icon{
		padding:5rpx 20rpx;
		.select-switch{
			background: #EFEFEF;
			border: 1px solid #979797;
			border-radius: 4rpx;
			width: 23rpx;
			height: 23rpx;
			position:relative;
		}
		.selected::after{
			content: "";
			display: block;
			position: absolute;
			top: 50%;
			left: 50%;
			width: 30%;
			height: 80%;
			border-radius: 4rpx;
			border: 6rpx solid  $uni-main-color;
			border-top-color:transparent;
			border-left-color:transparent;
			transform: translate(-18%, -80%) rotate(40deg);
		}
	}
	.agree-link{
		display: inline-block;
		color: #178ED2;
		padding: 0px 10rpx;
	}
}
</style>
