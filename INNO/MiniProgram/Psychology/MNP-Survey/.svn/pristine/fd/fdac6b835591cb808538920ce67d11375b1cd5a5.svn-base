<template>
  <view class="information" v-if="!hidePage">
    <page-nav isHideHome></page-nav>
    <view class="box">
      <view class="perfect_info">
        <view class="actInfo flex"><view v-if="schoolInfo.schoolId">{{schoolInfo.schoolName}}</view><view v-if="actInfo.activityId">/{{actInfo.activityName}}</view></view>
        <view class="title">请先填写你的信息</view>
        <view class="item">
          <view class="label">填写姓名</view>
          <ori-input @onInput="e=>onInput(e,'name')" placeholder="请输入" placeholderClass="hold-style" class="input content" boxStyle="padding:25rpx 0;"></ori-input>
        </view>
        <view class="item">
          <view class="label">填写学号</view>
          <ori-input  @onInput="e=>onInput(e,'studentNumber')" placeholder="请输入" placeholderClass="hold-style" class="input content" boxStyle="padding:25rpx 0;"></ori-input>
        </view>
        <view class="item">
          <view class="label">所在学校</view>
					<template v-if="schoolInfo.schoolId">
						<view class="content">{{schoolInfo.schoolName}}</view>
					</template>
					<template v-else>
						<ori-picker @pickerChange="(e)=>pickerChange(e,'school')" range-key="schoolName" :mode="mode.school" :range="schoolRange" :pickerValue="picker_value_school">
							<template v-slot:content>
								<div class="flex-b-c content">
									<view>
										<template v-if="picker_value_school>=0">
											<text>{{schoolRange[picker_value_school].schoolName}}</text>
										</template>
										<view v-else class="place">请选择</view>
									</view>
									<view class="switch font-32">选择</view>
								</div>
							</template>
						</ori-picker> 
					</template>
        </view>
        <view class="item" v-if="classInfo.classId">
          <view class="label">所在班级</view>
					<!-- <template v-if="classInfo.classId"> -->
						<view class="content">{{classInfo.classFullName}}</view>
					<!-- </template> -->
					<!-- <template v-else>
						<ori-picker @pickerChange="(e)=>pickerChange(e,'grade')" @columnchange="columnchange"  range-key="className" :mode="mode.grade" :range="classRange" :pickerValue="picker_value">
						  <template v-slot:content>
						    <div class="flex-b-c content">
						      <view>
						        <template v-if="picker_value.length>0">
						          <text  v-for="(item,index) in classRange" :key="index">{{classRange[index][picker_value[index]].campus ? '[' + classRange[index][picker_value[index]].campus + ']' : ''}}{{classRange[index][picker_value[index]].className||''}}</text>
						        </template>
						        <view v-else class="place">请选择</view>
						      </view>
						      <view class="switch font-32">选择</view>
						    </div>
						  </template>
						</ori-picker> 
					</template> -->
        </view>
        <view class="item iden-box flex-s-c">
          <view class="label flex1 f-shrink-0">选择你的身份</view>
          <view class="flex-s-c flex1 f-shrink-0">
            <view 
              :class="['iden','flex-c-c','flex1',formData.relateType == item.relateType?'active':'']" 
              @click="formData.relateType = item.relateType"
              v-for="(item) in relateArr" :key="item.relateType">
              {{item.name}}
            </view>
          </view>
        </view>
        <view class="tips C_7f7f7f font-20">{{tips}}</view>
        <view class="btn-box flex-c-s fixed">
          <view class="btn flex-c-c" @click="confirm">确认信息</view>
        </view>
      </view> 
    </view>
  </view>
</template>

<script>
  import oriPicker from '@/components/ori-comps/picker/ori-picker.vue';
  import oriInput from '@/components/ori-comps/input/ori-input.vue';
	import scanCode from '@/common/helper/scan-code-handler.js';
    const app = getApp();
  	const pageOption = Page.BasePage({
      components: {
        oriPicker,
        oriInput
      },
      data() {
        return {
          formData:{
            name:'',
            relateType:'child',
            classId: 0,
            schoolId:0,
            studentNumber:'',
          },
          mode:{
            'grade':'multiSelector',
            'school':'selector',
          }, 
          lockPage:false,
          classRange:[],
          oriClassArr:[],
          schoolRange:[],
          picker_value:[],
          picker_value_school:-1,
          relateArr:[{name:'我是家长',relateType:'child'},{name:'我是学生',relateType:'none'}],
          tips:'请务必准确填写以上信息，方便老师辨别孩子身份，归档学籍信息',
          curRecordId:0,

          actInfo: {},
					schoolInfo: {},
					classInfo: {},
					hidePage: true
        }
      },
      onLoad(options){
        this.options = options||{};
        this.init();
      },
      methods: { 
        init(){
					this.schoolInfo = scanCode.schoolInfo || {};
					this.classInfo = scanCode.classInfo || {};
					this.actInfo = scanCode.actBaseInfo || {};
					this.formData.classId = this.classInfo.classId || 0;
					this.formData.schoolId = this.schoolInfo.schoolId || 0;
					// 确保该页面在账号登陆配置时，不展示，不可用
					app.Sysm.getSysConf('applet_login_type').finally(()=>{
						let isAccountLogin =  app.Sysm.sysConf['applet_login_type'] == 'password';
						if(isAccountLogin){
							this.redirectAction('/pages/login/login')
						} else {
							this.hidePage = false;
						}
					})
          this._checkLogin().then(()=>{
            if(!this.schoolInfo.schoolId) {
							this.loadSchool();
						} else {
							this.loadGradeClass();
						}
          })
        },
        loadSchool(){
           return this.$Http(this.$Apis.getSchoolList,{
            other:{
              isShowLoad: true
            }
          }).then(res=>{
            if(res.code == 1){
              let data = res.data||[];
              this.schoolRange = data;
            }
          })
        },
        loadGradeClass(){
          let schoolId = this.formData.schoolId || 0;
          // return this.$Http(this.$Apis.getSchoolClassList,{
          return this.$Http(this.$Apis.getSchoolClassListWithActivity,{
            data:{
              schoolId,
              activityId:this.actInfo.activityId||0
            },
            other:{
              isShowLoad: true
            }
          }).then(res=>{
            console.log('resres',res);
            this.picker_value = [];
            if(res.code == 1){
              let data = res.data||[];
              let oriClassArr = data.map(item=>{
                item.className = item.gradeName||''; //共用一个range-key
                return item.classList
              });
              this.oriClassArr = oriClassArr;
              this.$set(this.classRange,0,data);
              this.$set(this.classRange,1,oriClassArr[0]||[]);
            }
          })
        },
        pickerChange(e,type){
          if(type == 'grade'){
            this.picker_value = e.detail.value;
            let item = this.classRange[1][this.picker_value[1]]||{};
            this.formData.classId = item.classId || 0
          }else if(type == 'school'){
            if(e.detail.value >= 0 && this.picker_value_school!=e.detail.value){
              this.picker_value_school = e.detail.value;
              let item = this.schoolRange[this.picker_value_school]||{};
              this.formData.schoolId = item.schoolId || 0;
              this.loadGradeClass();
            }
          }
        },
        columnchange(e){
          let detail = e.detail||{};
          if(detail.column == 0){
            this.$set(this.classRange,1,this.oriClassArr[detail.value||0]);
          }
        }, 
        confirm(e){
          if(this.lockPage)return;
          let invalid = this.checkValid();
          if(invalid){
            app.SMH.showToast({
              title:invalid
            })
            return
          };
          return this.bindStudent();
        },
        bindStudent(){
          return this.$Http(this.$Apis.bindStudent,{
            data:{
              ...this.formData,
            },
            other:{
              isShowLoad: true
            }
          }).then(res=>{
            if(res.code==1){
              this.lockPage = true;
							if(!app.LM.bsnUserToken || !app.LM.recordId){
								app.LM.savePrivateInfo({bsnUserToken:res.data||''});
								app.LM.savePrivateInfo({recordId:res.data||''});
								app.IM.setChooseUser(this.formData.studentNumber);
								app.IM.getAuthUserInfo();
							}
              app.SMH.showToast({
                title:"新建成功"
              });
              this.backAction();
              return res
            }
            return Promise.reject(res)
          }).catch(e=>{
            return Promise.reject(e);
          })
        },
        checkValid(){ 
          if(!this.formData.name){
            return "请输入学生姓名"
          }else if(!this.formData.studentNumber){
            return "请输入学生学号"
          }else if(!this.formData.schoolId){
            return "请选择学生所在学校"
          }
					// else if(!this.formData.classId){
     //        return "请选择学生所在班级"
     //      }
        },
        onInput(e,type){
          let detail = e.detail||{};
          let value = detail.value;
          this.formData[type] = value;
        },
      }, 
    })
    export default pageOption
</script>
 
<style lang="scss" scpoed>
.information{ 
  .box{
    .perfect_info{
      padding:64rpx;
      padding-bottom: 200rpx;
      .actInfo{
        font-size: 26rpx;
        color: #B2B2B2;
        padding-bottom: 20rpx;
      }
      .title{
        font-size: 46rpx;
        color: #222222;
        padding-bottom: 5rpx;
      }
      .item{
        padding-top:40rpx;
        border-bottom: 1px solid rgba($color: #979797, $alpha: 0.63);
        .label{
          font-size: 26rpx;
          color: #B2B2B2;
        }
        .content{
          padding: 25rpx 0;
          font-size: 42rpx;
          color: #222222;
          &.input{
            padding: 0;
          }
        }
        .place{
          opacity: 0.1;
        }
        .switch{ 
          color: $uni-main-color;
        }
        .iden{
          height: 80rpx;
          font-size: 28rpx;
          border-radius: 100rpx;
          background: #FAFAFA;
          &.active{
            color:#fff;
            background-color: $uni-main-color;
          }
        }
        &.iden-box{ 
          padding-bottom: 40rpx;
        }
      }
      .tips{
        padding-top:30rpx;
      }
      .btn-box{
        width: 100%;
        height: 200rpx;
        box-sizing: border-box;
        padding-top: 40rpx;
        left: 0;
        bottom: 0;
        background-color: #fff;
        .btn{ 
          width:400rpx;
          height:100rpx;
          border-radius: 50rpx;
          background-color: $uni-main-color;
          color: #fff;
        }
      }
    }
		.hold-style{
			color: #E9E9E9;
		}
  }
}
</style>
