<template>
  <view>
    <view v-if="!showLoading" class="article-detail-page">
      <page-nav  mode="Close"></page-nav>
      <template v-if="!articleDetail.articleUrl && articleDetail.articleContent">
        <view class="clamp2 bold font-40 m-b-25">{{
        articleDetail.articleTitle
      }}</view>
        <view class="C_7f font-24 m-b-20">
          <text class="m-r-30">
            {{
            articleDetail.supplierName
              ? "来源 " + articleDetail.supplierName
              : ""
          }}</text><text>{{ formatDate || "" }}</text>
        </view>
        <view v-if="trimString(articleDetail.articleDescription).length > 0" class="article-detail-tips m-b-35">
          {{ articleDetail.articleDescription }}
        </view>
        <view class="content_box">
          <mp-html :content="articleDetail.articleContent" />
        </view>
      </template>
      <template v-else-if="empty">
        <empty>暂无内容噢～</empty>
      </template>
    </view>
    <view v-else class="loading flex-c-c">
      <loading-view></loading-view>
    </view>
  </view>
</template>

<script>
  import mpHtml from '@/common/support/mp-html/mp-html'
  import LoadingView from '@/components/css3/loading/loading.vue';

  const app = getApp();
  const pageOption = Page.BasePage({
    data() {
      return {
        showLoading: true,
        options: {},
        articleDetail: {},
        empty:false
      };
    },
    components: {
      LoadingView,
      mpHtml
    },
    onLoad(options) {
      this.options = options;
    },
    onReady() {
      this.init();
    },
    computed: {
      formatDate() {
        let articleDetail = this.articleDetail;
        let date = articleDetail.createTime ?
          articleDetail.createTime.slice(0, -3) :
          "";
        return date;
      },
    },
    methods: {
      init() {
        this.$Http(this.$Apis.getArticle, {
          data: {
            id: this.options.id || 0,
          },
        }).then((res) => {
          if (res.code == 1) {
            this.articleDetail = res.data||{};
            this.empty = !this.articleDetail.articleUrl && !this.articleDetail.articleContent;
            if(this.articleDetail.articleUrl){
              let url = encodeURIComponent(this.articleDetail.articleUrl);
              this.redirectAction(`/pages/web-view/web-view?url=${url}`,)
            }
          }
        }).catch((err) => {
          this.empty = true;
        }).finally(() => {
          this.showLoading = false
        });
      },
      trimString(str) {
        return str && str.trim()
      }
    },
    onUnload() {},
    onShow() {},
  });
  export default pageOption;
</script>

<style lang="scss" scoped>
  .loading {
    width: 100%;
    height: 100vh;
  }

  .article-detail-page {
    padding: 30rpx 50rpx 135rpx 50rpx;
    box-sizing: border-box;

    .article-detail-tips {
      padding: 21rpx;
      background: #f9f9f9;
      font-size: 24rpx;
      line-height: 40rpx;
      color: #7f7f7f;
      border-radius: 11rpx;
    }
  }
</style>