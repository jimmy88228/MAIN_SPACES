<template>
  <view class="dimension" :style="dimensionStyle">
    <view class="dimension-title flex-b-c">
      <view class="dimension-title-left">
        <view class="C_50 bold font-24 m-b-5">维度/{{dimensionItem.ruleName}}</view>
        <view class="font-18 C_B2 clamp">{{dimensionItem.rangeShortDesc}}</view>
      </view>
      <view class="dimension-title-right flex-b-c">
        <view class="score-group flex-b-c">
          <view v-for="(item,i) in scoreList" :key="i">
            <view v-if="item.light == true" class="score-item">
            </view>
            <view v-if="item.light == false" class="score-item-grey">
            </view>
            <view v-if="item.splite == true" class="score-splite"></view>
          </view>
        </view>
        <view class="p-r-25 p-l-25 font-26">{{score}}</view>
      </view>
    </view>
    <view class="dimension-info">
      {{dimensionItem.rangeDescription}}
    </view>
  </view>
</template>

<script>
  const pageOption = Page.BasePage({
    name: "dimension",
    components: {},
    props: {
      dimensionItem: {
        type: Object,
        default: false
      },
      dimensionStyle: {
        type: String,
        default: ''
      }
    },
    data() {
      return {
        caculateResult: {},
        score: 0,
        scoreList: []
      };
    },
    computed: {},
    onShow() {},
    onReady() {},
    methods: {
      caculateChart(dimensionItem) {
        let rangeList = dimensionItem.rangeList;
        let totalScore = rangeList[rangeList.length - 1].maxValue - 1;
        let scoreList = [];
        let hasSplite = false;
        let score = dimensionItem.coefficientPoints;
        for (let i = 0; i < totalScore; i++) {
          if (i < score) {
            scoreList.push({
              light: true
            })
          } else {
            scoreList.push({
              light: false
            })
          }
          if (hasSplite == false) {
            for (let v = 0; v < rangeList.length; v++) {
              if (rangeList[v].maxValue == i + 1) {
                scoreList.push({
                  splite: true
                })
                hasSplite = true
                break
              }
            }
          }
          // rangeList.map(item => {
          //   if (item.maxValue == i+1) {
          //     scoreList.push({
          //       splite: true
          //     })
          //   }
          // })
        }
        this.score = score;
        this.scoreList = scoreList;
        console.log(scoreList)
      }

    },
    watch: {
      dimensionItem: {
        handler(nval, oval) {
          console.log(nval, "获取data")
          let dimensionItem = nval;
          this.caculateChart(dimensionItem)
          // this.caculateChart(dimensionItem).then(res => {
          //   console.log(res, "获取的res")
          //   this.caculateResult = res
          // })
        },
        immediate: true
      }
    }
  });
  export default pageOption;
</script>

<style lang="scss" scoped>
  .dimension {
    background-color: #FFFFFF;
    width: 100%;
    border-radius: 20rpx;

    .dimension-title {
      box-shadow: 0px 9rpx 10rpx 0px rgba($color: #D8D8D8, $alpha: 0.15);

      .dimension-title-left {
        width: 45%;
        padding: 30rpx 0rpx 30rpx 35rpx;
        box-sizing: border-box;
      }

      .dimension-title-right {
        flex: 1;

        .score-group {
          flex: 1;

          .score-item {
            position: relative;
            width: 18rpx;
            height: 55rpx;
            background: #EEFEEC;
            border-radius: 5px;
            border: 2rpx solid #C5EFC1;
            box-sizing: border-box;
          }

          .score-item-grey {
            width: 18rpx;
            height: 55rpx;
            background: #F5F5F5;
            border-radius: 5rpx;
          }

          .score-splite {
            height: 55rpx;
            width: 2rpx;
            background: #EF9307;
          }
        }
      }
    }

    .dimension-info {
      padding: 35rpx;
      font-size: 22rpx;
      color: #7F7F7F;
      line-height: 40rpx;
    }
  }
</style>