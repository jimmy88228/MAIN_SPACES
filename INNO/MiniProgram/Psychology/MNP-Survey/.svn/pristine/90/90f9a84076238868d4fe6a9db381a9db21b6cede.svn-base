<template>
  <view class="reserve-supervise">
    <page-nav>
      <template slot="title">
        <view>审核标记</view>
      </template>
    </page-nav>
    <view class="form-list">
      <view class="input-panel flex-s-c">
        <view class="input-title">姓名</view>
        <view class="referrals-name">{{_nameEllipsis(options.name)}}</view>
      </view>
      <view class="input-panel flex-b-c">
        <view class="input-title">审核情况</view>
        <view class="select-result-group flex-e-c">
          <!-- 1预警风险，2复核通过 -->
          <view class="select-result-item m-r-45 flex-c-c" @click="formData.result = 1">
            <view class="select-radio m-r-15">
              <view v-if="formData.result == 1" class="select-radio-checked"></view>
            </view>
            <view class="C_7f font-28">需预警</view>
          </view>
          <view class="select-result-item flex-c-c" @click="formData.result = 2">
            <view class="select-radio m-r-15">
              <view v-if="formData.result == 2" class="select-radio-checked"></view>
            </view>
            <view class="C_7f font-28">无需预警</view>
          </view>
        </view>
      </view>
      <template v-if="formData.result == 1">
        <ori-picker @pickerChange="(e) => pickerChange(e, 'warningLevel')" range-key="level_name" mode="selector"
          :range="warningLevelGroup" :pickerValue="warningLevelValue">
          <template v-slot:content>
            <view class="input-panel flex-b-c">
              <view class="flex flex1">
                <view class="input-title">预警等级</view>
                <view class="flex1">{{warningLevelGroup[warningLevelValue].level_name || ''}}</view>
              </view>
              <view class="font-26 m-l-13 C_80abae">
                选择
              </view>
            </view>
          </template>
        </ori-picker>
        <view class="text-area-input">
          <view class="input-title">预警记录</view>
          <textarea placeholder="请在此输入" v-model="formData.warningRemark" placeholder-style="color:#DDDDDD;"
            :maxlength="maxlength"></textarea>
        </view>
      </template>
    </view>
    <view class="bottom-area flex-c-c">
      <view class="submit-button flex-c-c font-30" @click="submitForm">
        提交
      </view>
    </view>

  </view>
</template>

<script>
  import oriPopup from "@/components/ori-comps/popup/ori-popup";
  import oriPicker from "@/components/ori-comps/picker/ori-picker.vue";
  import SMH from "@/common/helper/show-msg-handler.js";
  import oriScrollView from "@/components/ori-comps/scroll/ori-scroll-view.vue"

  const app = getApp();
  const pageOption = Page.BasePage({
    data() {
      return {
        maxlength: 200,
        formData: {
          result: "",
          warningRemark: "",
          warningId: ""
        },
        warningLevelGroup: [],
        warningLevelValue: -1,
        isLoading: false,
        showDate: false
      }
    },
    components: {
      oriPicker,
      oriPopup,
      oriScrollView
    },
    methods: {
      disabledScroll() {
        return
      },
      init() {
        this.loadWarningLevel()
      },
      loadWarningLevel() {
        return this.$Http(this.$Apis.getWarningLevelList).then(res => {
          if (res.code == '1') {
            let data = res.data;
            this.warningLevelGroup = res.data || [];
            return Promise.resolve(res.data)
          }
        })
      },
      pickerChange({
        detail
      }, type) {
        if (type == "warningLevel") {
          this.warningLevelValue = detail.value;
          this.formData.warningId = this.warningLevelGroup[detail.value].id || 0;
          // this.formData.warningId = String(this.warningLevelGroup[detail.value].level_name) || "";
        }
      },
      checkForm() {
        let msg = "";
        let formData = this.formData;
        if (!formData.result) {
          msg = "选择审核情况"
        } else if (!formData.result) {
          msg = "请选择审核情况"
        } else if (formData.result == 1 && !formData.warningId) {
          msg = "请选择预警等级"
        } else if (formData.result == 1 && formData.warningRemark.trim().length == 0) {
          msg = "请填写预警记录"
        }

        if (msg) {
          SMH.showToast({
            title: msg,
          });
          return false
        } else {
          return true
        }

      },
      submitForm() {
        if (this.checkForm()) {
          this.submitRecord();
        }
      },
      submitRecord() {
        if (this.isLoading) return
        this.isLoading = true;
        return this.$Http(this.$Apis.submitAudit, {
          data: {
            ...this.formData,
            userId: this.options.userId,
            recordId:this.options.recordId,
            modelId:this.options.modelId
          }
        }).then(res => {
          if (res.code) {
            app.SMH.showToast({
              title: "提交成功"
            })
          }
          setTimeout(() => {
            this.backAction();
          }, 500);
        }).finally(() => {
          setTimeout(() => {
            this.isLoading = false;
          }, 500);
        })
      },
      showDatePicker() {
        this.showDate = true
      },
      closeDatePicker() {
        this.showDate = false
      },
      selectDate(e) {
        console.log(e)
        this.$set(this.formData, "interventionDate", e[0] ? e[0] : "")
        this.showDate = false
      },
      showHotKey() {
        let ref = "popup";
        this.$refs[ref].show();
      },
      closePupup() {
        let ref = "popup";
        this.$refs[ref].dismiss();
      },
      hotKeySel(words) {
        this.formData.remark = this.formData.remark + (words || "");
        this.closePupup();
      }
    },
    onLoad(options) {
      this.options = options;
      this.init()
    }
  })
  export default pageOption
</script>

<style lang="scss" scoped>
  .reserve-supervise {
    min-height: 100vh;
    background-color: #F7F7F7;

    .form-list {
      padding: 30rpx 25rpx 165rpx;

      .input-panel {
        box-sizing: border-box;
        padding: 0 30rpx;
        height: 130rpx;
        background-color: #FFFFFF;
        width: 100%;
        border-radius: 20rpx;
        margin-bottom: 20rpx;
        font-size: 28rpx;

        .input-title {
          min-width: 110rpx;
          margin-right: 37rpx;
          color: #7f7f7f;
          flex-shrink: 0;
        }

        .referrals-name {
          padding: 7rpx 15rpx;
          background: rgba($color: $uni-main-color, $alpha: 0.08);
          border-radius: 10rpx;
          color: $uni-main-color;
        }

        .select-result-group {
          .select-radio {
            position: relative;
            width: 40rpx;
            height: 40rpx;
            background: #FBFBFB;
            border: 1px solid #E5E5E5;
            border-radius: 50%;

            .select-radio-checked {
              position: absolute;
              top: 50%;
              left: 50%;
              transform: translate(-50%, -50%);
              width: 22rpx;
              height: 22rpx;
              background: $uni-main-color;
              border-radius: 50%;
            }
          }
        }
      }

      .text-area-input {
        background-color: #FFFFFF;
        padding: 40rpx 36rpx 0 36rpx;
        margin-bottom: 20rpx;
        border-radius: 20rpx;

        .input-title {
          margin-bottom: 32rpx;
          color: #7f7f7f;
        }

        textarea {
          width: 100%;
          height: 400rpx;
          resize: none;
          line-height: 37rpx;
        }

        .select-hotkey {
          box-sizing: border-box;
          padding: 32rpx 16rpx;

          &>image {
            width: 48rpx;
            height: 48rpx;
            margin-right: 16rpx;
          }

        }
      }
    }
  }

  .bottom-area {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 140rpx;
    background: #FFFFFF;
    z-index: 2;

    .submit-button {
      background: $uni-main-color;
      color: #FFFFFF;
      width: 660rpx;
      height: 100rpx;
      border-radius: 16rpx;
    }
  }

  // 弹出框
  .popup-content {
    background: #ffffff;
    border-radius: 20rpx 20rpx 0px 0px;
    box-sizing: border-box;
    width: 100%;
    padding-top: 32rpx;
    padding-left: 32rpx;
    padding-right: 32rpx;
    padding-bottom: calc(16rpx + constant(safe-area-inset-bottom));
    padding-bottom: calc(16rpx + env(safe-area-inset-bottom));

    .popup-title {
      width: 100%;
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 33rpx;

      .close-icon {
        width: 23rpx;
        height: 23rpx;
      }
    }

    .scroll-view-info {
      height: 550rpx;
      width: 100%;

    }

    .hot-key-item {
      width: 100%;
      box-sizing: border-box;
      padding: 35rpx 20rpx;
      background: #F4F9FA;
      border-radius: 10rpx;
      color: #333333;
      font-size: 26rpx;
      margin-bottom: 20rpx;
    }

  }
</style>