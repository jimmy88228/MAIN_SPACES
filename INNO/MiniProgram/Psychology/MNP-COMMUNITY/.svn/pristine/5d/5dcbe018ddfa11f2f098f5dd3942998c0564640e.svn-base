<template>
  <view class="evaluating-list">
    <page-nav>
      <view slot="custom-content">心理测评记录</view>
    </page-nav>
    <view class="content-box" :style="isEmpty ? 'background-color: #fff;' : ''">
      <template v-if="!isEmpty">
        <!-- <view class="title bold">测评量表</view> -->
        <view class="content-scroll">
          <scroll-view scroll-y class="scroll-box" id="scrollId" @scrolltolower="scrolltolower">
            <view class="item-page" v-for="(pItem, pIndex) in list" :key="pIndex">
                <view v-for="(item, index) in pItem" :key="item.activityId" class="item">
                  <view class="msg-box flex-s-c">
                    <view class="relative">
                      <ori-image :lazy-load="true" :src="item.logo.trim() ? item.logo : staticAddress+activityIcon"
                        @error="imgerror($event, index, pIndex)" customStyle="width: 180rpx;height: 180rpx;border-radius: 12rpx;" class="shrink0" mode="aspectFill" ></ori-image>
                      <!-- <image :lazy-load="true" :src="item.logo.trim() ? item.logo : staticAddress+activityIcon"
                        @error="imgerror($event, index, pIndex)" class="img" mode="aspectFill" /> -->
                    </view>
                    <view class="content flex1 flex flex-col flex-b-s">
                      <view>
                        <view class="tips font-22 C_B2"><text
                            class="p-r-10">题量{{ item.questionCount }}</text><text>约{{ item.estimatedTime }}分钟</text>
                        </view>
                        <view class="tip-title font-32">{{
                        item.activityName
                      }}</view>
                      </view>
                      <view class="progress" v-if="item.joinState == 'joining'">
                        <view v-for="procressIndex in item.modelCount" :key="procressIndex" :style="{'width':(100/item.modelCount)-1+'%'}">
                          <template v-if="item.modelIndex-1 == procressIndex">
                            <progress :percent="getPercent(item.modelAnswerCount, item.modelAnswerCount + item.restQuestions)" active
                              active-mode="forwards" :duration="10" stroke-width="6" border-radius="8"
                              :activeColor="brandStyle.themeColor" backgroundColor="rgba(216,216,216,0.3)" />
                          </template>
                          <template v-else>
                            <template v-if="procressIndex > item.modelIndex-1">
                              <progress :percent="0" active active-mode="forwards" duration="0" stroke-width="6"
                                border-radius="8" :activeColor="'rgb(33,176,20,0.3)'"
                                backgroundColor="rgba(216,216,216,0.3)" />
                            </template>
                            <template v-if="procressIndex < item.modelIndex-1">
                              <progress :percent="0" active active-mode="forwards" duration="0" stroke-width="6"
                                border-radius="8" :activeColor="'rgb(33,176,20,0.3)'"
                                backgroundColor="rgb(33,176,20,0.3)" />
                            </template>
                          </template>
                        </view>
                      </view>
                      <view class="C_21b014 font-22">
                        <text v-if="item.joinState == 'finished'">已完成</text>
                        <text v-else-if="item.modelCount > 1">
                          测评活动进度{{item.modelIndex}}/{{item.modelCount}}
                        </text>
                        <text v-else-if="item.modelCount == 1">
                          测评进度{{item.answerCount}}/{{item.answerCount + item.restQuestions}}
                        </text>
                      </view>
                    </view>
                  </view>
                  <view class="btn flex-e-c font-28"
                    v-if="item.joinState == 'joining' || (item.joinState == 'finished' && item.recordId != 0)">
                    <view v-if="item.joinState == 'finished'" class="active-btn m-r-32" @click="report"
                      :data-state="item.joinState" data-p-index="pIndex"
                      :data-url="`pages/report-info/report-info?recordId=${item.recordId}`">查看报告</view>
                    <view v-else-if="item.joinState == 'joining'" class="active-btn m-r-32" @click="jump"
                      :data-state="item.joinState" data-p-index="pIndex" :data-url="
                      '/pages/activities/evaluating/detail/detail?activityId=' +
                      item.activityId
                    ">继续测评</view>
                  </view>
                </view>
            </view>
          </scroll-view>
        </view>
      </template>
      <template v-else>
        <empty>暂无相关心理评测噢～</empty>
      </template>
    </view>
    <view class="fixed left-0 bottom-0" id="bottomId"></view>
  </view>
</template>

<script>
  import SMH from "@/common/helper/show-msg-handler";
  import oriImage from "@/components/ori-comps/image/ori-image"

  const app = getApp();
  const pageOption = Page.BasePage({
    components:{
      oriImage
    },
    data() {
      return {
        activityIcon: "/activity-icon.jpg",
        list: [],
        pageIndex: 0,
        hasMore: true,
        pageSize: app.Conf.PAGE_SIZE,
        clickPage: 0,
        isEmpty: false,
        // finishPage: "",
        finishIndex: "",
      };
    },
    onLoad() {},
    onShow() {
      // 记录上次点击的页面数据，局部刷新
      if (this.clickPage) this.pageIndex = this.clickPage - 1 || 0;
      this.loadData();
    },
    // onShareAppMessage(e){},
    methods: {
      loadData() {
        let pageIndex = this.pageIndex ? this.pageIndex + 1 : 1;
        return this.$Http(this.$Apis.getEvaluateRecordList, {
          data: {
            pageIndex: pageIndex,
            pageSize: this.pageSize,
          },
        }).then((res) => {
          if (res.code == 1) {
            let data = res.data || {};
            this.pageIndex = pageIndex;
            let currPage = pageIndex - 1 ? pageIndex - 1 : 0;
            // 添加已结束/已完成折线
            // if (!this.finishPage) {
            //   data.list.some((item, i) => {
            //     if (item.joinState == "end" || item.joinState == "finished") {
            //       this.finishPage = pageIndex;
            //       this.finishIndex = i;
            //     }
            //     return item.joinState == "end" || item.joinState == "finished";
            //   });
            // }
            this.list[currPage] = data.list || [];
            this.hasMore = this.pageIndex * this.pageSize < data.totalCount;
            this.setEmpty(this.list);
          }
          return res;
        });
      },
      getPercent(cur, len) {
        console.log(cur, len, "百分比")
        return Number((cur / len).toFixed(2)) * 100;
      },
      // progressItemStyle() {
      //   let acInfo = this.acInfo;
      //   let modelIds = acInfo.modelIds || [];
      //   let count = modelIds.length;
      //   let width = 100
      //   if (count > 1) {
      //     width = (100 / count).toFixed(0) - 1
      //   }
      //   return `width:${width}%`
      // },
      jump(e) {
        let dataset = e.currentTarget.dataset || {};
        if (dataset.state == "cannot_join") {
          SMH.showToast({
            title: `不属于本次测评对象`,
          });
          return;
        }
        this.clickPage = dataset.pIndex || 0;
        this.jumpAction(dataset.url);
      },
      imgerror(e, img_index, index) {
        var _this = this;
        var imgChildList = _this.list[index];
        if (imgChildList.length > 0) {
          imgChildList[img_index].logo = this.staticAddress + this.activityIcon;
        }
        this.$forceUpdate()
      },
      report({
        currentTarget
      }) {
        let dataset = currentTarget.dataset || {};
        this.clickPage = dataset.pIndex || 0;
        this.jumpAction(dataset.url);
      },
      scrolltolower(e) {
        if (this.hasMore) {
          this.loadData();
        }
      },
      setEmpty(data) {
        if (data instanceof Array) {
          if (data.length == 0 || !data[0] || (data[0] && data[0].length == 0)) {
            this.isEmpty = true;
          } else {
            this.isEmpty = false;
          }
        } else {
          this.isEmpty = false;
        }
      },
    },
  });
  export default pageOption;
</script>

<style lang="scss" scoped>
  .evaluating-list {
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    // background-color: rgb(247, 247, 247);
    height: 100vh;
  }

  .content-box {
    // padding: 0 20rpx;
    flex: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    background-color: #f7f7f7;
  }

  // .title {
  //   font-size: 38rpx;
  //   padding: 40rpx 0 40rpx 40rpx;
  // }
  .content-scroll {
    flex: 1;
    padding-top: 23rpx;
    overflow: hidden;
  }

  .scroll-box {
    height: 100%;

    .item-page {
      overflow: hidden;
    }

    .item {
      position: relative;
      border-radius: 20rpx;
      background-color: #fff;
      margin: 20rpx;
      box-shadow: 0px 0px 17rpx 0 rgba(0, 0, 0, 0.09);

      .msg-box {
        padding: 25rpx;
        box-sizing: border-box;
      }

      .img {
        width: 180rpx;
        height: 180rpx;
        border-radius: 12rpx;
        flex-shrink: 0;
      }

      .content {
        min-height: 180rpx;
        padding-left: 25rpx;
      }

      .progress {
        width: 100%;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .tips {
        padding-bottom: 25rpx;
      }

      .btn {
        border-top: 1px solid rgba($color: #979797, $alpha: 0.2);
        height: 100rpx;
      }

      .active-btn {
        width: 160rpx;
        height: 66rpx;
        background: #FFFFFF;
        border-radius: 10rpx;
        border: 1px solid #DDDDDD;
        font-size: 26rpx;
        display: flex;
        justify-content: center;
        align-items: center;
        // color: $uni-main-color;
      }

      .invalid-btn {
        color: #b2b2b2;
      }

      .tip-title {
        padding-bottom: 25rpx;
      }
    }

    // 已完成折断线
    .wrap {
      display: table;
      width: 100%;
      white-space: nowrap;
      border-spacing: 2rpx 0;
      font-size: 24rpx;
      color: #8e8e8e;
      text-align: center;
      box-sizing: border-box;
      padding: 0 32rpx;
    }

    .wrap::before,
    .wrap::after {
      display: table-cell;
      content: "";
      width: 35%;
      background: -webkit-linear-gradient(#dddddd, #dddddd) repeat-x left center;
      background: linear-gradient(#dddddd, #dddddd) repeat-x left center;
      background-size: 1rpx 1rpx;
    }
  }
</style>