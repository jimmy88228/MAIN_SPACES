const STORE_KEY = "STORE_INFO"
import Http from "../../manager/http-manager/index";
import StorageH from "../storage-handler/index";
import LM from "../../manager/login-manager/index";
import PH from "../../helper/params-handler/index"; 
class storeManager {
    static getInstance() {
      if (!storeManager.instance) {
        storeManager.instance = new storeManager();
      }
      return storeManager.instance;
    }

    constructor() { 
      let storeInfo = StorageH.get(STORE_KEY);
      this.lastShareInfo = {};
      this._selfStoreInfo = null;
      if(storeInfo){
        this._storeInfo = storeInfo;
      }
    }

    initShareInfo(){
      let options = PH.paramsJson('options') || {};
      let {staffCode} = options.query||{};
      staffCode && (this.lastShareInfo.staffCode = staffCode); //有新的staffCode才赋值
      return this.lastShareInfo.staffCode;
    } 
    getVisitStore(){
      return getVisitStore({staffCode : this.initShareInfo() || ""}).then(res=>{
        if(res.code == 1){
          let data = res.data||{};
          this.setStoreInfo(data); //保存当前店铺信息
          let {needChange,staffCode} = data;
          if(needChange){ //需要调change接口
            this.lastShareInfo.staffCode = staffCode;
            return this.changeVisitStore(staffCode);
          }
        }
        return res;
      })
    }

    getSelfStore(){
      if(this.selfStoreInfo)return Promise.resolve(this.selfStoreInfo);
      return getVisitStore({staffCode : LM.storeInfo && LM.storeInfo.staff_code || ""}).then(res=>{
        this._selfStoreInfo = res;
        return res;
      })
    }

    changeVisitStore(staffCode){
        if(LM.isLogin && (staffCode)){
            return Http.QT_UserApi.changeVisitStore({
                data: {
                    staffCode,
                },
            })
        }
        return Promise.reject(`未登录 || 无分销码${LM.isLogin},${staffCode}`);
    }
    
    setStoreInfo(info){
        this._storeInfo = info||{};
        StorageH.set(STORE_KEY,this._storeInfo);
    }

    get storeInfo(){
        return this._storeInfo || {};
    }
    get selfStoreInfo(){
        return this._selfStoreInfo || null;
    }
}
function getVisitStore(params){
  return Http.QT_UserApi.getVisitStore({
    params
  })
}

export default storeManager.getInstance();