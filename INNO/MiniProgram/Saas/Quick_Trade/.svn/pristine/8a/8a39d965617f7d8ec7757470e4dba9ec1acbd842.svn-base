const TAB_INDEX_REF = { //tab顺序
  "all": 0,
  "wait_to_pay": 1,
  "wait_to_shipping": 2,
  "wait_to_pickupgoods": 3,
  "wait_to_receiving": 4,
}

const DEFAULT_ORDER_TAB_LIST = [{
  state: 0,
  title: "全部",
  key: "all",
  api:"QT_BuyApi",
  url:"getOrderList",
  params: {
    pageIndex: 1,
    pageSize: 20,
    isOrderForCustom: 0,
    orderType:0,
  },
  nomore: false,
  list: []
},
{
  state: 1,
  title: "待付款",
  key: 'wait_to_pay',
  api:"QT_BuyApi",
  url:"getOrderList",
  params: {
    pageIndex: 1,
    pageSize: 20,
    isOrderForCustom: 0,
    orderType:1,
  },
  nomore: false,
  list: []
},
{
  state: 2,
  title: "发货中",
  key: 'wait_to_shipping',
  api:"QT_BuyApi",
  url:"getOrderList",
  params: {
    pageIndex: 1,
    pageSize: 20,
    isOrderForCustom: 0,
    orderType:2,
  },
  nomore: false,
  list: []
},
{
  state: 3,
  title: "待提货",
  key: 'wait_to_pickupgoods',
  api:"QT_BuyApi",
  url:"getOrderList",
  params: {
    pageIndex: 1,
    pageSize: 20,
    isOrderForCustom: 0,
    orderType:3,
  },
  nomore: false,
  list: []
},
{
  state: 4,
  title: "已完成",
  key: 'wait_to_receiving',
  api:"QT_BuyApi",
  url:"getOrderList",
  params: {
    pageIndex: 1,
    pageSize: 20,
    isOrderForCustom: 0,
    orderType:4,
  },
  nomore: false,
  list: []
}]

const App = getApp();
Page(App.BP({
  data: {
    orderTabList: JSON.parse(JSON.stringify(DEFAULT_ORDER_TAB_LIST)),
  },
  onLoad(query) { 
    this.setView({ 
      orderListRef: { get: () => this.findView("#orderList") }, 
    })
    this.setData({isInited:true,staff_type:query.staff_type||'0'})
    this.orderListRef.onLoadFunc(query,switchActiveTab(query.orderType || "all"));
  },
  onShow() {
    this.orderListRef.init();
  },
  // init(){
  //   App.LM.loginAsync(false).ignore(()=>{
  //     this.setData({inited:true,isLogin:App.LM.isLogin})
  //     loadOrderList.call(this)
  //   })
  // },
  // handleOrderTabTap(e) {
  //   const index = this.getDataset(e, "index");
  //   this.changeOrderTab(index);
  // },
  // handleSwiperChange(e) {
  //   const current = e.detail.current || 0;
  //   this.changeOrderTab(current);
  // },
  // changeOrderTab(index) {
  //   if (index === this.data.activeTabIndex) return;
  //   this.setData({
  //     activeTabIndex: index
  //   }, refreshCurrentOrderTab.bind(this))
  // },
  // handleSearchInput(e) {
  //   const value = e.detail.value || "";
  //   this.setData({
  //     _searchStr: value
  //   })
  // },
  // handleSearchBtnTap() {
  //   let {_searchStr, activeTabIndex} = this.data;
  //   this.searchStr = _searchStr;
  //   this.setData({
  //     [`orderTabList[${activeTabIndex}]params.pageIndex`]: 1,
  //     [`orderTabList[${activeTabIndex}].nomore`]: false,
  //   }, loadOrderList.bind(this))
  // },
  // handleScrollToLower() {
  //   console.log("handleScrollToLower")
  //   let {orderTabList ,activeTabIndex} = this.data;
  //   let orderTab = orderTabList[activeTabIndex];
  //   if (orderTab.nomore) {
  //     App.SMH.showToast({title: "已经到底了哦"});
  //     return;
  //   }
  //   this.setData({
  //     [`orderTabList[${activeTabIndex}]params.pageIndex`]: orderTab.params.pageIndex + 1,
  //   }, loadOrderList.bind(this))
  // },
  // handleRefresh() {
  //   console.log("handleRefresh")
  //   if (this.refreshing) return; // 解决下拉刷新，有时会多次触发这个方法的问题
  //   this.refreshing = true;
  //   this.setData({pullDownRefreshing: true})
  //   refreshCurrentOrderTab.call(this)
  //     .then(() => {
  //       setTimeout(() => {this.setData({pullDownRefreshing: false})}, 100)
  //     })
  //     .finally(() => {this.refreshing = false})
  // },
  // handleOrderItemTap(e) {
  //   let orderId = this.getDataset(e, "orderId");
  //   let staffType = this.pageQuery.staff_type || 0
  //   WxApi.navigateTo({
  //     url: `/pages/micro_mall/order/order_info?order_id=${orderId}&staff_type=${staffType}`
  //   })
  // }, 
  // loginCallback(){
  //   this.init();
  // }
}))

function switchActiveTab(orderType) {
  return TAB_INDEX_REF[orderType]; 
}

// function loadOrderList() {
//   if(!App.LM.isLogin){
//     return Promise.reject(false)
//   }
//   let {
//     activeTabIndex = 0, orderTabList = []
//   } = this.data;
//   let orderTab = orderTabList[activeTabIndex] || {};
//   let {
//     pageIndex,
//     pageSize,
//   } = orderTab.params;
//   this.showLoading();
//   return App.Http.QT_BuyApi.getOrderList({
//       params: {
//         orderType: orderTab.state,
//         staffType: this.pageQuery.staff_type ? 1 : 0,
//         isOrderForCustom: 0,
//         searchStr: this.searchStr,
//         pageIndex,
//         pageSize
//       }
//     })
//     .then(res => {
//       if (res.code == 1) {
//         let {
//           list: _list,
//           count = 0
//         } = res.data
//         let currentList = orderTab.list || [];
//         let list = pageIndex === 1 ? _list : [...currentList, ..._list];
//         this.setData({
//           [`orderTabList[${activeTabIndex}]list`]: list,
//           [`orderTabList[${activeTabIndex}]nomore`]: list.length >= count,
//         })
//         console.log('orderTabList',this.data.orderTabList)
//         return res.data
//       }
//       return Promise.reject(res.msg || "获取订单列表失败");
//     })
//     .finally(() => {
//       this.hideLoading();
//     })
// }

// function refreshCurrentOrderTab() {
//   let activeTabIndex = this.data.activeTabIndex || 0;
//   this.searchStr = "";
//   return new Promise(rs => {
//     this.setData({
//       _searchStr: "",
//       [`orderTabList[${activeTabIndex}]params.pageIndex`]: 1,
//       [`orderTabList[${activeTabIndex}].nomore`]: false,
//     }, () => {
//       loadOrderList.call(this).ignore(res => rs(res))
//     })
//   })
// }