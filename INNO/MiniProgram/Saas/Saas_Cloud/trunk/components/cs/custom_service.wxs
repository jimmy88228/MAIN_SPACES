
var moveY = 0, moveX = 0, initY = 0, initX = 0, differX = 0, differY = 0;
var winW = 0, winH = 0, itemW = 0, itemH = 0, itemX, itemY, bottomExtra = 0,topExtra;
var time = 0.3;//s
var touchstart = function (event, ownerInstance) {
  var dataset = event.currentTarget.dataset || {};
  var touches = event.touches;
  winW = winW || dataset.winW;
  winH = winH || dataset.winH;
  bottomExtra = dataset.bottomExtra || 0;
  topExtra = dataset.topExtra || 0;
  itemW = itemW || parseFloat(dataset.itemW);
  itemH = itemH || parseFloat(dataset.itemH);
  itemX = typeof (itemX) == "undefined" ? parseFloat(dataset.itemX) : itemX;
  itemY = typeof (itemY) == "undefined" ? parseFloat(dataset.itemY) : itemY;
  initY = parseFloat(touches[0].pageY);
  initX = parseFloat(touches[0].pageX);
  differX = initX - itemX;
  differY = initY - itemY;
}
var touchmove = function (event, ownerInstance) {
  var dataset = event.currentTarget.dataset || {};
  var touches = event.touches;
  moveY = parseFloat(touches[0].pageY);
  moveX = parseFloat(touches[0].pageX);
  var instance = ownerInstance.selectComponent('.cs_link_area');
  if (moveX - differX <= 0) {
    itemX = 0
  } else if (moveX + itemW - differX > parseFloat(winW)) {
    itemX = winW - itemW;
  } else {
    itemX = moveX - differX;
  }
  if (moveY - differY <= topExtra) {
    itemY = topExtra
  } else if (moveY + itemH - differY > parseFloat(winH) - bottomExtra) {
    itemY = winH - itemH - bottomExtra;
  }else{
    itemY = moveY - differY;
  }
  instance.setStyle({
    top: itemY + "px",
    left: itemX + "px",
    "border-top-left-radius": '100%',
    "border-bottom-left-radius": '100%',
    "border-top-right-radius": '100%',
    "border-bottom-right-radius": '100%',
  })
}
var touchend = function (event, ownerInstance) {
  var radius = "";
  if (itemX <= (parseFloat(winW) / 2)) {
    itemX = 0;
  } else {
    itemX = parseFloat(winW) - itemW;
  }
  var instance = ownerInstance.selectComponent('.cs_link_area');
  instance.setStyle({
    top: itemY + "px",
    left: itemX + "px",
    "transition": "left " + time + "s ease, border-radius " + time / 2 + "s ease " + time / 2 + "s",
    "border-top-left-radius": itemX == 0 ? '0' : '100%',
    "border-bottom-left-radius": itemX == 0 ? '0' : '100%',
    "border-top-right-radius": itemX == 0 ? '100%' : '0',
    "border-bottom-right-radius": itemX == 0 ? '100%' : '0',
  })
}
module.exports = {
  touchstart: touchstart,
  touchmove: touchmove,
  touchend: touchend
}