<template>
    <div class="count-info flex-c-c">
        <div v-for="(item,index) in listData" :key="index" class="count-item flex-c-s flex-col">
            <div class="title">{{item.title}}</div>
            <dir class="flex-b-s msg-box">
                <div class="msg">
                    <div class="tip">
                        人数
                    </div>
                    <div class="counts">
                        {{customInfoData[item.user_counts]||(inited?0:'--')}}
                    </div>
                </div>
                <div class="msg">
                    <div class="tip">
                        记录数
                    </div>
                    <div class="counts">
                        {{customInfoData[item.record_counts]||(inited?0:'--')}}
                    </div>
                </div>
            </dir>
        </div>
    </div>
</template>

<script>
    export default { 
        data() {
            return {
                listData:[{
                    title:"总预警情况",
                    user_counts:"all_user",
                    record_counts:"all_record",
                },{
                    title:"待审核情况",
                    user_counts:"to_audit_user",
                    record_counts:"to_audit",
                },{
                    title:"审核通过",
                    user_counts:"success_audit_user",
                    record_counts:"success_audit",
                },{
                    title:"复核已通过",
                    user_counts:"not_pass_user",
                    record_counts:"not_pass",
                },],
                customInfoData:{},
                inited:false,
            }
        },
        props: {
            infoData: {
                type: Object,
                default: ()=>({})
            },
        },
        watch:{
            infoData:{
                handler(nV){
                    if(nV){
                        let obj = {
                            all_user:0,
                            all_record:0,
                        };
                        for(let key in nV){
                            if(key.indexOf('user') == -1){
                                obj.all_record += nV[key];
                            }else{
                                obj.all_user += nV[key];
                            }
                        }
                        this.customInfoData = {
                            ...nV,
                            ...obj
                        };
                        this.inited = true;

                    }
                },
            }
        }
    }
</script>

<style lang="less" scoped>
.count-info{
    padding: 0 40px;
    flex-wrap: nowrap;
    .count-item{
        box-shadow: 0 0 15px 1px rgba(125, 125, 125, 0.1);
        border-radius: 12px;
        background-color: #fff;
        padding: 30px;
        flex: 1;
        flex-shrink: 0;
        margin-right: 50px;
        height: 140px;
        &:last-child{
            margin-right: 0;
        }
        &:hover{
            box-shadow: 0 0 15px 1px rgba(125, 125, 125, 0.18);
        }
    }
    .title{
        font-size: 18px;
        margin-bottom: 20px;
    }
    .msg-box{
        width: 100%;
        padding: 0 50px;
    }
    .tip{
        color:#7f7f7f;
        margin-bottom: 15px;
    }
    .counts{
        font-size: 22px;
    }
}
</style>