<template>
    <div class="editor-left-menu">
        <template v-if="baseCompList.length>0">
            <div class="bold m-b-20">模块选择</div>
            <draggable class="flex-c-s flex-wrap" :clone="cloneItem" :list="baseCompList" :sort="false" :group="{name:'itemBox', pull:'clone', put: false}">
                <div v-for="item in baseCompList" :key="item.module_type" class="source-item flex-c-c flex-col">
                    <div class="img-box flex-c-c">
                        <img :src="item.img" alt="" class="img-logo">
                    </div>
                    <div class="m-t-10">{{item.module_name}}</div>
                </div>
            </draggable>
        </template>
        <p v-if="baseCompList.length == 0 " class="empty-tip">暂无可用基础组件</p>
    </div>
</template>

<script>
import draggable from "vuedraggable";
import AudioImg from "@/assets/images/custom/audio.png"
import VideoImg from "@/assets/images/custom/video.png"
import ArticleImg from "@/assets/images/custom/article.png"
import AdImg from "@/assets/images/custom/picture.png"
export default {
    name: "editorLeftMenu",
    components: {
        draggable,
    },
    props: {
        height: {
            type: Number,
            default: 500,
        },
        pageType: {
            type: String,
            default: "NONE",
        },
    },
    data() {
        return {
            panelShow: ["basePanel"],
            baseCompList: [
                {
                    cat: "basic",
                    module_type: "IMAGE-AD",
                    module_name: "图片模块",
                    img:AdImg,
                },
                {
                    cat: "basic",
                    module_type: "VIDEO-MD",
                    module_name: "视频模块",
                    img:VideoImg,
                },
                {
                    cat: "basic",
                    module_type: "AUDIO-MD",
                    module_name: "音频模块",
                    img:AudioImg,
                },
                {
                    cat: "basic",
                    module_type: "ARTICLE-MD",
                    module_name: "文章模块",
                    img:ArticleImg,
                },
            ],
        };
    },
    methods: {
        setCopmList(copmList) {},
        // 克隆的内容
        cloneItem({ module_name, module_type }) {
            let cloneObject = JSON.parse(
                JSON.stringify({
                    module_name: `${module_name}`,
                    module_type: `${module_type}`,
                    is_deletable: 1,
                    setting: {}, // 统一静态配置
                    dynamic_setting: {

                    }, // 动态配置
                    module_data: {
                        
                    }, // 动态数据 Object | Array
                })
            );
            console.log('cloneObjectcloneObject',cloneObject)
            return cloneObject;
        },
    },
};
</script>

<style lang="less" scoped>
.editor-left-menu {
    width: 100%;
    // height: 100%;
    overflow: hidden;
    padding: 20px;
    background: rgba(239, 239, 239, 0.17);
    color:#333;
    font-size: 13px;
    .source-item{
        margin-right: 10px;
        margin-bottom: 38px;
        cursor: move;
        &:nth-child(2n){
            margin-right: 0;
        }
    }
    .img-box{
        width: 80px;
        height: 60px;
        border-radius: 6px;
        background: rgba(239, 239, 239, 0.3);
    }
    .img-logo{
        width: 30px;
        height: 30px;
    }
    // border-right: 1px solid #dcdee2;
    // border-left: 1px solid #dcdee2;
    // .ivu-collapse{
    //     border-left: 0 none;
    //     border-right: 0 none;
    // }
    // .source-item {
    //     width: 50%;
    //     display: inline-block;
    //     text-align: center;
    //     background-color: #fff;
    //     padding: 5px;
    //     cursor: move;
    // }
    // .source-item:hover {
    //     background-color: #efefef;
    // }
    // .empty-tip {
    //     padding: 10px;
    //     text-align: center;
    // }
}
</style>
