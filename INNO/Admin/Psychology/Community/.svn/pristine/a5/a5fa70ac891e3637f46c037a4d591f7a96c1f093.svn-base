<template> 
    <swiper 
        ref="swiperRef"
        :modules="modules"
        :slides-per-view="2"
        :space-between="50"

        @swiper="onSwiper"
        @slideChange="onSlideChange"
        :autoplay="{ delay: 3500, disableOnInteraction: false }"

    >
        <swiper-slide>
            <div>Slide 1</div>
        </swiper-slide>
         <swiper-slide>
            <div>Slide 2</div>
        </swiper-slide>
         <swiper-slide>
            <div>Slide 3</div>
        </swiper-slide>
    </swiper>
</template>

<script>
import { Swiper, SwiperSlide } from 'vue-awesome-swiper'
// import { Swiper, SwiperSlide } from 'swiper/vue'; 
import { Navigation, Pagination, Scrollbar, A11y } from 'swiper';
// import { useSwiper } from 'swiper/vue';


import 'swiper/css';
import 'swiper/css/autoplay';
  
import 'swiper/css/navigation';
import 'swiper/css/pagination';
import 'swiper/css/scrollbar';

export default {
    name:"customSwiperName",
    props: {
        settings: {
            type: Object,
            default:()=>({}) 
        },
    },
    data() {
        return {
            current:0,
            // modules: [Navigation, Pagination, Scrollbar, A11y],
        }
    },
    components: {
        Swiper,
        SwiperSlide,
    }, 
    methods: {
        reInit(){
            console.log('reInitreInit')
        },
        init() {
            return
            console.log('initinit')
            this.$emit('init');
        },
        beforeChange(e) {
             this.$emit('beforeChange',e);
        },
        afterChange(e) {
            this.current = e;   
            this.$emit('afterChange',e);
            console.log('afterChangeafterChange',e)
        },
        goTo(index){
            return
            console.log('goTo',index)
            this.$refs.carousel.setPage(index);
        },
        next(){
            return
            console.log('next')
            this.$refs.carousel.next();
        },
        getCurrent(){
            return this.current;
        },


        onSlideChange (e) {
            console.log('onSlideChange', e);
        },
        onSwiper (e) {
            setTimeout(() => {
                let ref = this.$refs.swiperRef;
                console.log('onSwiper', this.modules,e,ref);  
            }, 1000);

        },
        
    }, 
    mounted() { 
    },
    setup(){
        return {
            modules:[Navigation]
        }
    }
}
</script>

<style lang="less" scoped>
</style>