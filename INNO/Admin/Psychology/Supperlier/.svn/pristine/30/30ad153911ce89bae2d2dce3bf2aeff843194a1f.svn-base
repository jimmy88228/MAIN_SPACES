<template>
  <custom-modal ref="modal" class="page-drawer-area" :footerHide="true" :width="530" :closable="true">
    <div class="class-edit-area">
      <div class="edit-title bold">{{title}}</div>
      <div class="edit-cont">
        <div class="edit-cont-area">
          <Form :label-width="100" :model="superviseInfo" ref="formDataRef" :rules="ruleValidate">
            <FormItem  label="预约日期" prop="consult_date">
              <date-time :afterNow="true" type="datetime" v-model="superviseInfo.consult_date" class="base-320" placeholder="请选择日期"></date-time>
            </FormItem>
            <FormItem  label="督导方式"  prop="service_id">
              <data-select type="consult" class="base-320" v-model="superviseInfo.service_id" placeholder="请选择咨询方式"></data-select>
            </FormItem>
            <FormItem label="分配督导师" prop="supervisor">
              <custom-input class="base-320" placeholder="请输入名称" v-model="superviseInfo.supervisor" :show-word-limit="true" :maxlength="10"></custom-input>
            </FormItem>
          </Form>
          <div class="edit-foot flex-c-c">
            <Button type="primary" @click="checkSupervise">确&nbsp;&nbsp;认</Button>
          </div>
          <Spin fix v-if="pageLoading"></Spin>
        </div>
      </div>
    </div>
  </custom-modal>
</template>

<script>
export default {
  components: {},
  props: {
    title: {
      type: String,
      default: "分配督导"
    },
  },
  data() {
    return {
      superviseInfo: {
        id: 0,
        consult_date: "",
        supervisor: "",
        service_id: 0,
      },
      ruleValidate: {
        consult_date: [
          {
            required: true,
            validator: this._checkAfterTime,
            trigger: "blur",
          },
        ],
        supervisor: [
          {
            required: true,
            validator: this._checkString,
            trigger: "blur",
            message: "请填写督导师名称"
          },
        ],
        service_id: [
          {
            required: true,
            validator: this._checkThanInt,
            trigger: "blur",
            message: "请选择督导方式"
          },
        ],
      },
    };
  },
  computed: {},
  methods: {
    dismiss() {
      this.$refs.modal.dismiss();
    },
    showModal({ superviseInfo = {} }) {
      let _superviseInfo = JSON.parse(JSON.stringify(superviseInfo)) || {};
      this.superviseInfo = {
        id: _superviseInfo.id,
        service_id: _superviseInfo.get_consultant_service && _superviseInfo.get_consultant_service.service_id,
        consult_date: "",
        supervisor: "",
      }
      this.$refs.modal.show();
      this.pageLoading = false;
    },
    checkSupervise() {
      this.$refs["formDataRef"].validate((valid) => {
        if (valid) {
          this.handleSupervise();
        } else {
          this.$Message.warning("请完善信息");
        }
      });
    },
    handleSupervise() {
      let superviseInfo = this.superviseInfo || {};
      this.pageLoading = true;
      return this.$MainApi
        .supervisorAllocation({
          data: superviseInfo,
        })
        .then((res) => {
          this.tableLoading = false;
          if (res.code) {
            this.$Message.success(res.message || "操作成功");
            this.$emit("success", superviseInfo);
            this.dismiss();
          } else {
            this.$Message.warning(res.message || "操作失败");
          }
        })
        .finally(() => {
          this.pageLoading = false;
        })
    },
  },
  mounted() {},
};
</script>

<style lang="less" scoped>
.page-drawer-area {
  .edit-cont-area {
    border: 0 none !important;
  }
  .edit-title {
    padding-left: 22px;
    font-size: 18px;
    margin-bottom: 20px;
    font-weight: bold;
  }
}
</style>