<template>
  <hold-layout :isFull="true" class="edit-gauge" isShowFormSave isShowAllSave @_cancel="cancel" @_save="save" @_saveAll="saveAll">
    <rewrite-tabs isHideLayout :data="tabList" @changeTab="changeTab" :currTab="curTab">
      <template v-slot:basic>
        <form-view ref="basic" class="box"></form-view>
      </template>
      <template v-slot:report>
        <report ref="report" class="box"></report>
      </template>
      <template v-slot:problems>
        <!-- 题目管理 -->
        <problemsDetail ref="problems"></problemsDetail>
      </template>
      <template v-slot:dimension> 
        <!-- 维度 -->
        <dimension ref="dimension" class="box"></dimension>
      </template>
    </rewrite-tabs>
  </hold-layout>
</template>

<script>
import report from "./report.vue"
import formView from "./form.vue"
import dimension from './dimension.vue'
import problemsDetail from "./problems-detail/index.vue";
export default {
  mixins: [],
  components: {
    report,
    formView,
    dimension,
    problemsDetail
  },
  data() {
    return { 
      pageId:0,
      curTab: "basic",
      tabList:[{
        name:"basic",
        label:"基础信息",
        tabName:"editGauge",
      },{
        name:"report",
        label:"报告建议",
        tabName:"editGauge",
      },{
        name:"problems",
        label:"题目维护",
        tabName:"editGauge",
      },{
        name:"dimension",
        label:"量表维度",
        tabName:"editGauge",
      }],
      tipShow:false,
    };
  },
  methods: { 
      changeTab(name) {
          // if(!this.tipShow && this.curTab != name){
          //   this.tipShow = true;
          //   this.$Modal.info({
          //       title: '温馨提示',
          //       content: '切换标签并不会自动保存数据,请记得手动保存'
          //   });
          // }
          this.curTab = name;
          this.$refs[this.curTab] && this.$refs[this.curTab].init && this.$refs[this.curTab].init();
      },
      cancel(){
          this.$router.back();
      },
      save(){
        let item = this.tabList.find(item=>item.name == this.curTab) || {};
        this.$refs[this.curTab].save && this.$refs[this.curTab].save().then(()=>{
          this.$Message.info(`${item.label}保存成功`);
        }).catch(e=>{
            this.$Message.info(e && e.message || `请完善${item.label}`); 
        });
      },
      saveAllLoop(index){
        let tabList = this.tabList;
        let item = tabList[index];
        if(item){
          this.$refs[item.name].save && this.$refs[item.name].save().then(()=>{
            index += 1;
            if(tabList[index]){
                this.saveAllLoop(index)
            } else {
              this.$Message.info(`保存成功`);
              this.$router.back();
            }
          }).catch(e=>{
              if(tabList[index]){
                this.curTab = tabList[index].name;
              }
          });
        }
      },
      saveAll(){
        this.saveAllLoop(0)
      }
  },
  mounted () {  
  },
};
</script>

<style lang="less" scoped>
.edit-gauge{
    .box{
        // padding-top: 40px;
        height: 100%;
    }
}
</style>
<style lang="less">
.edit-gauge{
    .ivu-tabs{
        height: 100%;
    }
    .ivu-tabs-content{
        height: calc(100% - 52px);
    }
}
</style>