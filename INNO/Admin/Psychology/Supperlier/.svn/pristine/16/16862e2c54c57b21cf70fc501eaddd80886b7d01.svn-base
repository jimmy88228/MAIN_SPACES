<template>
  <custom-modal class="hold-modal-zindex" ref="modal" :width="500" :footerHide="true" :closable="true" title="编辑类型">
    <Form class="base-form" :label-width="100" :model="typeInfo" ref="formDataRef" :rules="ruleValidate">
        <FormItem label="类型名称" prop="name">
          <custom-input size="large" class="base-320" v-model="typeInfo.name" placeholder="请填写类型名称"  :maxlength="30" :showWordLimit="true"></custom-input>
        </FormItem>
        <FormItem label="备注" prop="remark">
          <custom-input size="large" type="textarea" v-model="typeInfo.remark" class="base-320" placeholder="请填写备注"  :maxlength="120" :showWordLimit="true"></custom-input>
        </FormItem>
        <FormItem style="margin:0px;">
          <Button type="primary" @click="confirm()">&nbsp;{{typeInfo.id ? '保 存': '创 建'}}&nbsp;</Button>
        </FormItem>
        <Spin fix v-if="pageLoading"></Spin>
    </Form>
  </custom-modal>
</template>

<script>
export default {
  data(){
    return {
      typeInfo: {},
      pageLoading: false,
      defaultTypeInfo:{
        id: 0,
        testId: 0,
        type: '',
        name: '',
        remark: '',
      },
      ruleValidate: {
        name: [
          {
            required: true,
            validator: this._checkString,
            trigger: "blur",
            message: "请填写类型名称",
          },
        ],
      }
    }
  },
  methods:{
    dismiss() {
      this.$refs.modal.dismiss();
    },
    showModal(detail = {}){
      detail = detail || {}
      this.$refs.modal.show();
      this.$refs["formDataRef"] && this.$refs["formDataRef"].resetFields();
      this.typeInfo = detail.id ? JSON.parse(JSON.stringify(detail)) : this.defaultTypeInfo;
    },
    confirm(){
     this.$refs["formDataRef"] && this.$refs["formDataRef"].validate((valid) => {
        if (valid) {
          this.save();
        } else {
          this.$Message.error("请完善相关信息");
        }
     }) 
    },
    save(){
      if(!this.pageQuery.testId){
        return Promise.reject();
      }
      let typeInfo = this.typeInfo || {};
      let req = typeInfo.id ? 'tasteTestTypeUpdate' : 'tasteTestTypeAdd';
      this.pageLoading = true;
      return this.$MainApi[req]({
          data: {
            ...typeInfo,
            testId: this.pageQuery.testId,
            type: this.pageQuery.type
          },
      })
      .then((res) => {
          if (res.code) {
            this.$Message.success(res.message);
            this.dismiss();
            this.$emit("confirm");
          } else {
            this.$Message.warning(res.message);
          }
      }).finally(()=>{
        this.pageLoading = false;
      })
    }
  }
}
</script>

<style>

</style>