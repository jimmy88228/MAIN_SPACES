<template>
  <Modal v-model="isShowModal" :title="title" :width="700" class-name="dimension-view-modal">
    <div class="organize-area">
      <div class="o-area-l">
        <p class="area-title">选择维度：</p>
        <div class="area-cont">
          <div class="dimension-table">
            <div class="d-body">
              <div class="d-tr flex-s-c" v-for="(item, index) in dimensionList" :key="index">
                <div class="d-td"><Checkbox :value="ids.indexOf(item.id) != -1">{{item.dimension_name}}</Checkbox></div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div style="width:10px;height:100%;"></div>
      <div class="o-area-r">
        <p class="area-title">已选维度：</p>
        <div class="area-cont" v-bar>
          <div class="p-r-10">
            <div class="select-item flex-b-c" v-for="(item, index) in selectData" :key="item.id" v-show="(isRelation && !item.pChecked) || !isRelation">
              <p class="text-flow text-r text-rtl" :title="item.parentName && item.parentName.join('/') + '/' + item.title">
                {{item.reverseTitle}}<span v-for="(nItem, nindex) in item.reversePName" :key="nindex">&nbsp;/&nbsp;{{nItem}}</span>
              </p>
              <Icon v-if="!item.disabled" type="md-close" class="close-icon" @click="removeSelect(index)" />
            </div>
          </div>
        </div>
      </div>
    </div>
    <div slot="footer">
      <Button type="default" @click="isShowModal = false">取消</Button>
      <Button type="primary" @click="confirm">确定</Button>
    </div>
  </Modal>
</template>

<script>
export default {
  name: "dimensionModal",
  components: {},
  props: {
    title: {
      type: String,
      default: "选择维度",
    },
  },
  data() {
    return {
      isShowModal: false,
      dimensionList: [],
      selectData: [],
      disabledIds: []
    };
  },
  computed: {
    ids(){
      let selectData = this.selectData || [];
      let ids = [], disabledIds = [];
      for(let i = 0; i < selectData.length; i++){
        if(selectData[i].id){
          ids.push(selectData[i].id)
          if(selectData[i].disabled){
            disabledIds.push(selectData[i].id)
          }
        }
      }
      this.disabledIds = disabledIds;
      return ids;
    }
  },
  methods: {
    showModal(options = {}) {
      this.isShowModal = true;
      this.selectData = options.selectData || [];
      this.getData(options.id);
    },
    getData(id) {
      if(!Number(id)) return Promise.reject();
      return this.$MainApi
        .scaleDimensionInfo({
          data: {
            id,
          },
        })
        .then((res) => {
          if (res.code) {
            let data = res.data || {};
            let items = data.items || [];
            items.unfi
            this.dimensionList = items.map((item) => ({
              ...item,
            }));
            return res;
          } else {
            return Promise.reject(res);
          }
        });
    },
    confirm() {
      this.isShowModal = false;
      this.$emit("success");
    },
  },
};
</script>

<style lang="less" scoped>
.dimension-view-modal {
  .organize-area {
    padding: 25px;
    padding-top: 32px;
    display: flex;
    .o-area-l {
      width: 60%;
    }
    .o-area-r {
      width: 40%;
      .area-cont {
        padding: 5px;
      }
    }
    .area-title {
      font-size: 16px;
      font-family: PingFangSC-Regular, PingFang SC;
      font-weight: 400;
      color: #333333;
      line-height: 22px;
      margin-bottom: 12px;
    }
    .area-cont {
      background: rgba(216, 216, 216, 0.11);
      border-radius: 4px;
      border: 2px solid #f2f2f2;
      height: 438px;
      padding: 13px;
      display: flex;
      flex-direction: column;
      position: relative;
      .select-item {
        border-radius: 5px;
        overflow: hidden;
        margin-bottom: 5px;
        padding: 5px;
        padding-right: 0px;
        .close-icon {
          font-size: 20px;
          margin-left: 5px;
          cursor: pointer;
        }
      }
      .select-item:hover {
        background-color: #fff;
      }
    }
  }
}
.dimension-table{
  .d-tr{
    border-top: 1px solid #efefef;
    border-bottom: 1px solid #efefef;
    padding: 10px;
    margin-bottom: -1px;
  }
  .d-td{
    flex: 1;
  }
  .ivu-checkbox-wrapper{
    display: block;
    line-height: 30px;
  }
}
</style>