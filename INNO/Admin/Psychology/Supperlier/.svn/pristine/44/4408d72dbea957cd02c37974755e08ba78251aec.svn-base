<template>
    <hold-layout class="base-config-layout">
        <div class="box" v-bar>
            <Form v-if="total != 0" class="v-bar-box flex flex-wrap" ref="formId" :model="formData" :rules="ruleValidate">
                <FormItem class="list-item" :prop="item.config_key" v-for="(item,key) in list" :key="key">
                    <div class="flex-s-c">
                        <div class="name m-r-20">{{getKeyVal(item.config_key,'name')||""}}</div>
                        <i-switch v-model="item.config_value" true-value="1" false-value="0">
                            <span slot="open"></span>
                            <span slot="close"></span>
                        </i-switch>
                    </div>
                </FormItem> 
            </Form> 
            <div v-else class="global-empty default-text"></div>
        </div>
        <template v-slot:footer>
            <div class="btn-box flex-c-c">
                <Button class="btn-save" type="primary" @click="save" :loading="$store.state.app.pageLoading">保 存</Button>
            </div>
        </template>
    </hold-layout>
</template>

<script>
    export default {
        name:"baseConfig",
        data() {
            return {
                list: [],
                keyList:{
                    show_supplier_homepage:{
                        name:"是否显示本渠道主页",
                        tip:"(1:是,0:否)",
                        default_value:'0',
                    }
                },
                total:-1,
                ruleValidate:{}
            }
        },
        methods: {
            getKeyVal(key,val) {
                return this.keyList[key] && this.keyList[key][val] || ""
            },
            loadData() {
                return this.$MainApi.basicSettinglist({
                    data:{
                        customer_id:this.pageQuery.customer_id||0
                    }
                }).then(res=>{
                    if(res.code){
                        let data = res.data||{};
                        let items = data.items||{},arr=[];
                        for(let key in items){
                            arr.push({
                                config_key:key,
                                config_name:key,
                                config_value:items[key],
                                default_value:this.keyList[key]&&this.keyList[key].default_value||0,
                                description:(this.keyList[key]&&this.keyList[key].name) + (this.keyList[key]&&this.keyList[key].tip)
                            })
                        }
                        this.total = data.total||0;
                        console.log('arr',arr)
                        this.list = arr;
                    }
                    return res;
                })
            },
            save(){
                return this.$MainApi.basicSettingSave({
                    data:{
                        customer_id:this.pageQuery.customer_id||0,
                        data:this.list
                    }
                }).then(res=>{
                    if(res.code){
                        this.$router.go(-1);
                    }
                    return res;
                })
            }

        },
        mounted () {
            this.loadData();
        },
    }
</script>

<style lang="less" scoped>
.base-config-layout{
    .box{
        height: 100%;
        padding: 0 30px;
    }
    .v-bar-box{
        width: 100%;
        height: 100%;
    }
    .name{
        font-size: 14px;
        color:#333;
    }
    .btn-box{
        width: 100%;
        height: 70px;
    }
    .btn-save{
        width: 100px; 
        height: 40px;
        line-height: normal;
    }
    .list-item{
        padding-right: 45px;
        box-sizing: border-box;
    }
}
</style>