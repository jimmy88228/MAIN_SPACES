<template>
  <hold-layout slot="right" class="video-data-layout">
    <div class="content-data-layout">
      <filterView ref="filterViewRef" :chooseData="chooseData" :total="total" type="video" typeStr="视频" :isShowClassify="isShowClassify" :isShowTipsBox="isShowTipsBox" @groupChange="groupChange"></filterView>
      <materialList type="video" :list="list" :chooseData="chooseData" @selectItem="selectItem" @cancelItem="cancelItem"></materialList>
    </div>
    <rewrite-page slot="footer" :total="total" :current="page" :page-size="pageSize" :page-size-opts="pageSizeOpts" @on-change="e=>loadData(e)" @on-page-size-change="handlePageSizeChange" show-sizer show-elevator show-total transfer></rewrite-page>
    <Spin fix v-if="pageLoading"></Spin>
  </hold-layout>
</template>

<script>
import ListMixin from "@/helper/mixin/list-mixin";
import filterView from "@/components/view-components/material-view/view/filter-view.vue";
import materialList from "@/components/view-components/material-view/material-list.vue";
export default {
  mixins: [ListMixin],
  props: {
    isShowClassify: Boolean,
    isShowTipsBox: Boolean,
    chooseData: {
      type: Array,
      default: function() {
        return []
      }
    }
  },
  components: {
    filterView,
    materialList,
  },
  data() {
    return {
      reqParams: {
        is_all: 0,
        distribute: 0, // 是否显示分配情况
        target_id: 0 //所属组织
      },
    };
  },
  methods: {
    getData(params = {}){
      this.reqParams = params || {};
      if(!this.list || this.list.length == 0) {
        this.loadData();
      }
      this.$refs["filterViewRef"] && this.$refs["filterViewRef"].initData();
    },
    onLoadData(page, extraData) {
      this.pageLoading = true;
      return this.$MainApi
        .getVideoList({
          data: {
            ...this.reqParams,
            ...extraData,
          },
        })
        .then((res) => {
          if (res.code) {
            let data = res.data || {};
            this.data = {
              total: data.total,
              list: data.items,
            };
          }
        }).finally(()=>{
          this.pageLoading = false;
        })
    },
    groupChange(group_id){
      this.reqParams.group_id = group_id || 0;
      this.loadData();
    },
    selectItem(index, item){
      console.log("index", index, "item", item)
      this.chooseData.push(item);
    },
    cancelItem(delIndex){
      this.chooseData.splice(delIndex, 1);
    }
  },
  mounted(){}
};
</script>

<style lang="less" scoped>
.video-data-layout{
  display: flex;
  flex-direction: column;
  padding:0px 10px;
  height:100%;
  .content-data-layout{
    display: flex;
    flex-direction: column;
    height:100%;
  }
}
</style>