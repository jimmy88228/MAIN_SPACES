<template>
  <div class="video-edit-area">
    <Form :label-width="100" :model="formData" ref="formDataRef" :rules="ruleValidate">
      <FormItem label="上传视频" prop="path">
        <uploadBtn 
        type="VIDEO" 
        :isMulti="false" 
        name="file" 
        :isShowProgress="true"
        :extraParams="{file_type: 'video'}"
        :customUploading="uploadIng"
        @beforeUpload="uploadIng = true;"
        @uploadSuccess="uploadSuccess"
        @handleUploadError="uploadIng = false"
        @handleFormatError="uploadIng = false"
        @handleMaxSize="uploadIng = false"
        :btnTxt="formData.path ? '重新上传' : '上传视频'"
        >
        </uploadBtn>
        <p class="upload-file" v-if="uploadVideo.fileName">{{uploadVideo.fileName}}</p>
        <custom-input v-show="false" v-model="formData.path" />
      </FormItem>
      <FormItem label="视频标题" prop="title">
        <custom-input size="large" class="base-320" v-model="formData.title" :show-word-limit="true" :maxlength="60"></custom-input>
      </FormItem>
      <FormItem label="视频封面" prop="cover_pic">
        <img-view uploadType="video" ref="coverPicImgRef" :width="87" :img="formData.cover_pic" @delImg="formData.cover_pic = ''" @selectImg="(src)=>{ selectImg(src, 'cover_pic') }"></img-view>
        <span>默认使用视频第一帧&nbsp;<a @click="changeCoverPicImg">更改封面</a></span>
        <p class="desc-notice">按比例16:9上传最佳，图片大小不得超过</p>
      </FormItem>
      <!-- <FormItem label="视频背景" prop="bg_pic">
        <img-view width="89" height="116" :img="formData.bg_pic" @delImg="formData.bg_pic = ''" @selectImg="(src)=>{ selectImg(src, 'bg_pic') }"></img-view>
        <p class="desc-notice">建议尺寸：600像素 * 1300像素，图片大小不得超过 3M</p>
      </FormItem> -->
      <FormItem label="视频介绍" prop="description">
        <custom-input class="base-320" type="textarea" :show-word-limit="true" :maxlength="200" v-model="formData.description"></custom-input>
      </FormItem>
      <FormItem label="视频分组" prop="group_id">
        <data-select :defaultValue="0" type="video-group" valueKey="group_id" nameKey="group_name" size="large" class="base-320" v-model="formData.group_id"></data-select>
      </FormItem>
      <FormItem label="" >
        <Button style="padding: 0px 30px;" type="primary" @click="confirm">确 认</Button>
      </FormItem>
    </Form>
  </div>
</template>

<script>
import uploadBtn from "@/components/UI-components/module/upload-view/upload.vue";
export default {
  components: { uploadBtn },
  data() {
    return {
      formData: {
        title: "",
        cover_pic: "",
        bg_pic: "",
        description: "",
        path: "",
        time_length: "",
        group_id: 0,
        width: 0,
        height: 0,
        size:0 ,
      },
      uploadIng: false,
      uploadVideo: {},
      ruleValidate: {
        path: [
          {
            required: true,
            validator: this._checkString,
            trigger: "blur",
            message: "请上传视频",
          },
        ],
        title: [
          {
            required: true,
            validator: this._checkString,
            trigger: "blur",
            message: "请填写视频名称",
          },
        ],
        cover_pic: [
          {
            required: true,
            validator: this._checkString,
            trigger: "blur",
            message: "请上传视频封面图",
          },
        ],
        // bg_pic: [
        //   {
        //     required: true,
        //     validator: this._checkString,
        //     trigger: "blur",
        //     message: "请上传视频详情背景图",
        //   },
        // ],
        // description: [
        //   {
        //     required: true,
        //     validator: this._checkString,
        //     trigger: "blur",
        //     message: "请上传填写视频介绍",
        //   },
        // ],
        // group_id: [
        //   {
        //     required: true,
        //     validator: this._checkThanInt,
        //     message: "请选择视频分组",
        //     trigger: "blur",
        //   },
        // ],
      },
    };
  },
  methods: {
    loadData(){
      let pageQuery = this.pageQuery || {};
      let id = Number(pageQuery.id) || 0;
      if(id){
        this.formData.id = id;
        this.$store.commit("setPageLoading", true);
        return this.$MainApi
        .getVideoInfo({
          data: {
            id: id
          },
          other: {
            isErrorMsg: true
          }
        })
        .then((res) => {
          if (res.code) {
            let data = res.data || {};
            let formData = {
              id: id,
              title: data.title || "",
              cover_pic: data.cover_pic || "",
              bg_pic: data.bg_pic || "",
              description: data.description || "",
              path: data.path || "",
              time_length: data.time_length || "",
              group_id: Number(data.group_id) || 0
            }
            this.formData = formData || {};
          }
        }).finally(()=>{
          this.$store.commit("setPageLoading", false);
        })
      }
    },
    changeCoverPicImg(){
      this.$refs["coverPicImgRef"] && this.$refs["coverPicImgRef"].handleSelect();
    },
    selectImg(src, key){
      this.formData[key] = src;
    },
    uploadSuccess(data){
      console.log("data", data);
      this.uploadIng = false;
      let detail = data[0].src || {};
      this.uploadVideo = detail;
      this.formData.path = detail.filePath;
      this.formData.time_length = detail.duration;
      if(!this.formData.title){
        this.formData.title = data[0].name ? data[0].name.replace(".mp4", "") : "";
        this.formData.title = this.formData.title.substring(0, 60);
      }
      if(!this.formData.cover_pic){
        this.formData.cover_pic = detail.coverImage;
      }
      this.formData.width = detail.width;
      this.formData.height = detail.height;
      this.formData.size = detail.fileSize;
    },
    confirm(){
      this.$refs["formDataRef"].validate((valid) => {
          if (valid) {
            this.confirmReq();
          } else {
              this.$Message.error('请完善相关信息');
          }
      })
    },
    confirmReq(){
      let formData = this.formData;
      let req = Number(formData.id) ? 'videoUpdate' : 'videoAdd';
      this.$store.commit("setPageLoading", true);
      return this.$MainApi[req]({
          data: formData,
        })
        .then((res) => {
          if (res.code) {
            this.$Message.success(res.message || (Number(formData.consultant_id) ? '编辑成功' : '添加成功'))
            this.$router.back();
          } else {
            this.$Message.warning(res.message || (Number(formData.consultant_id) ? '编辑失败' : '添加失败'))
          }
        }).finally(()=>{
          setTimeout(()=>{
            this.$store.commit("setPageLoading", false);
          }, 350)
        })
    }
  },
  mounted(){
    this.loadData();
  }
};
</script>

<style lang="less" scoped>
.video-edit-area{
  .upload-file{
    margin-top: 10px;
    padding-left: 25px;
    line-height: 25px;
    background-image:url("~@/assets/images/file.png");
    background-repeat: no-repeat;
    background-size: 18px 22px;
    background-position: left center;
  }
}

</style>