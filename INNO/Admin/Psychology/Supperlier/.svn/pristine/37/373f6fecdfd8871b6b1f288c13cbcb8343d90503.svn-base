<template>
  <leftRightLayout class="page-lrlayout" :isShowTitle="true">
    <div slot="header-r">
      <rewrite-search :isOpacotyBg="true" v-model="searchForm.searchq" @search="loadData()" placeholder="请输入视频名称搜索"></rewrite-search>
    </div>
    <groupView type="video" slot="left" @change="changeGroupPoint"></groupView>
    <hold-layout slot="right" class="video-page-layout">
      <!-- <searchForm :searchForm="searchForm" @search="loadData()"></searchForm> -->
      <Table ref="myTable" :columns="columns" :data="list" border :loading="tableLoading" @on-selection-change="selectDataEvent">
        <template slot="detail" slot-scope="{ row }">
          <div class="detail-item">
            <div class="detail-img">
              <img :src="row.cover_pic" />
            </div>
            <div class="detail-info text-flow">
              <div>
                <p class="detail-name text-flow">{{row.title}}</p>
                <p class="detail-desc">{{row.description}}</p>
              </div>
              <div class="detail-time text-flow">上传时间：{{row.update_time}}</div>
            </div>
          </div>
        </template>
        <template slot="handle" slot-scope="{ row }">
          <div class="operate-area">
            <a class="operate-btn" v-hasAction="true" @click="changeGroup(row)">换组</a>
            <a class="operate-btn" v-hasAction="true" @click="goEdit(row)">编辑</a>

            <!-- <a class="operate" v-hasAction="true">删除</a> -->
          </div>
        </template>

      </Table>
      <rewrite-page slot="footer" :total="total" :current="page" :page-size="pageSize" :page-size-opts="pageSizeOpts" @on-change="e=>loadData(e)" @on-page-size-change="handlePageSizeChange" show-sizer show-elevator show-total transfer></rewrite-page>
      <changeGroup ref="changeGroupRef" tip="视频" 
      groupType="video-group"
      @success="changeGroupCallback"></changeGroup>
    </hold-layout>
  </leftRightLayout>
</template>

<script>
import ListMixin from "@/helper/mixin/list-mixin";
// import searchForm from "./search-form";
import mixins from "./mixins";
// import lrLayout from "@/models/components/layout/lr-layout/lr-layout";
import leftRightLayout from "@/components/view-components/layout/left-right-layout.vue"
import groupView from "@/models/components/group-view";
import changeGroup from "@/models/components/change-group/index.vue";

export default {
  name: "videoManageIndex",
  mixins: [ListMixin, mixins],
  components: { leftRightLayout, groupView, changeGroup },
  data() {
    return {
      searchForm: {
        group_id: 0,
        searchq: ""
      },
      selectData: [],
    };
  },
  computed: {
    ids() {
      let selectData = this.selectData || [];
      let ids = [];
      if (selectData instanceof Array) {
        for (let i = 0; i < selectData.length; i++) {
          if (selectData[i].id) {
            ids.push(selectData[i].id);
          }
        }
      }
      return ids;
    },
  },
  methods: {
    selectDataEvent(selectData) {
      this.selectData = selectData || [];
    },
    changeGroupPoint(group_id){
      this.searchForm.group_id = group_id || 0;
      this.loadData();
    },
    onLoadData(page, extraData) {
      return this.$MainApi
        .getVideoList({
          data: {
            ...this.searchForm,
            ...extraData,
          },
        })
        .then((res) => {
          console.log("列表", res);
          if (res.code) {
            let data = res.data || {};
            this.data = {
              total: data.total,
              list: data.items,
            };
          }
        });
    },
    goAdd() {
      this.$router.push({
        name: "videoManageAdd",
      });
    },
    goEdit(row) {
      this.$router.push({
        name: "videoManageDetail",
        query: {
          id: row.id
        }
      });
    },
    changeGroup(row) {
      if (!row.id) {
        this.$Message.warning("无效ID");
        return Promise.reject();
      }
      this.$refs["changeGroupRef"] && this.$refs["changeGroupRef"].showModal({
        data: row
      });
    },
    batchChangeGroup() {
      if(this.ids.length == 0){
        this.$Message.warning("请选择换组视频！");
        return Promise.reject();
      }
      this.$refs["changeGroupRef"] && this.$refs["changeGroupRef"].showModal({
        data: this.ids
      });
    },
    changeGroupCallback(detail){
      console.log("detail", detail);
      let { group_id, data } = detail;
      let ids = [];
      if(data instanceof Array){
        ids = data.join(",");
      } else if(data.id){
        ids = data.id
      }
      this.changeGroupReq(group_id, ids);
    },
    changeGroupReq(group_id, ids) {
      return this.$MainApi
        .videoChangeGroup({
          data: {
            group_id: group_id,
            ids: ids,
          },
        })
        .then((res) => {
          if (res.code) {
            this.$Message.success(res.message || "操作成功");
            this.handleUpdate();
            return Promise.resolve();
          } else {
            this.$Message.warning(res.message || "操作失败");
            return Promise.reject();
          }
        });
    },
  },
  mounted() {
    this.loadData();
  },
};
</script>

<style lang="less" scoped>
.page-lrlayout {
  .detail-item {
    display: flex;
    padding: 10px 0px;
    .detail-img {
      flex-shrink: 0;
      width: 180px;
      height: 135px;
      background: #efefef;
      border-radius: 2px;
      overflow: hidden;
      margin-right: 14px;
      position:relative;
      img {
        width: 100%;
        position:absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
    }
    .detail-info {
      display: flex;
      justify-content: space-between;
      flex-direction: column;
      .detail-name {
        font-size: 17px;
        font-family: PingFangSC-Medium, PingFang SC;
        font-weight: 500;
        color: #333333;
        line-height: 24px;
        margin-bottom:10px;
      }
      .detail-desc {
        font-size: 14px;
        font-family: PingFangSC-Regular, PingFang SC;
        font-weight: 400;
        color: #b2b2b2;
        line-height: 20px;
      }
      .detail-time {
        font-size: 14px;
        font-family: PingFangSC-Regular, PingFang SC;
        font-weight: 400;
        color: #8e8e8e;
        line-height: 20px;
      }
    }
  }
}
</style>
<style lang="less">
@import "~@/assets/css/variables.less";
.video-page-layout{
  .ivu-table-header th{
    background-color: @title-bg-color;
  }
}
</style>