<template>
<div class="edit-activity-area">
    <div class="edit-activity-cont">
        <rewrite-tabs :data="tabsData" :currTab="currTab" @changeTab="changeTab">
            <template slot="base">
                <baseForm :actDetail="actDetail" ref="baseRef" @saveCallback="initData"></baseForm>
            </template>
            <template slot="custom">
                <customForm :actSetting="actSetting" ref="customRef"></customForm>
            </template>
        </rewrite-tabs>
    </div>
    <div class="operate-area">
        <Button type="primary" @click="save" :loading="pageLoading">保 存</Button>
    </div>
</div>
</template>

<script>
import baseForm from "./base.vue";
import customForm from "./custom.vue";
export default {
    mixins: [],
    components: { baseForm, customForm },
    data() {
        return {
            tabsData: [
                {
                    name: 'base',
                    label: '基础信息'
                },
                {
                    name: 'custom',
                    label: '自定义编辑'
                }
            ],
            actDetail: {
                id: 0,
                activity_name: "",
                dateTime: [],
                state: 1,
                model_id: 0,
                logo: "",
                description: "",
                instruction: "",
                is_report_open:1,
                limit_platform: 0, // 0:否;1:是
                limit_platform_data: [],
                selectData:[],
            },
            actSetting: {
                detail_bg_img: '',
                detail_bg_color: '',
                answer_bg_img: ''
            },
            currTab: "",
        };
    },
    methods: {
        initData(){
            this.loadData();
        },
        loadData() {
            let id = Number(this.pageQuery.id) || 0;
            if (!id) return;
            let type = this.pageQuery.type || "";
            let req = type == 'task' ? 'assessmentTaskInfo' : 'appraisalActInfo'
            this.$MainApi[req]({
                    data: {
                        id: id,
                    },
                    other: {
                        isShowLoad: true,
                    },
                })
                .then((res) => {
                    if (res.code) {
                        let data = res.data || {};
                        let get_model = data.get_model||[];
                        this.actSetting = data.get_setting || {};
                        delete data.get_setting;
                        this.actDetail = Object.assign(
                            {},
                            data,
                            {   
                                dateTime:[data.start_time || "",data.end_time || ""], 
                                selectData:get_model.map(item=>{return {id:item.id||'',name:item.name||'',}})
                            }
                        )
                    }
                });
        },
        save() {
            this.$store.commit("setPageLoading", true);
           this.$refs["baseRef"] && this.$refs["baseRef"].save().then(()=>{
               this.$nextTick(()=>{
                   this.$refs["customRef"] && this.$refs["customRef"].save().then(()=>{
                       let isReplace = this.pageQuery.$isReplace;
                       this.$Message.warning(isReplace || !Number(this.pageQuery.id) ? "新增成功" : "编辑成功");
                       setTimeout(()=>{
                            this.$router.back();
                       })
                   }).finally(()=>{
                        this.$store.commit("setPageLoading", false);
                    })
               })
           }).catch(()=>{
               this.currTab = "base";
           }).finally(()=>{
               this.$store.commit("setPageLoading", false);
           })
        },
        changeTab(name){
            this.currTab = name;
            this.$refs[name +'Ref'] && this.$refs[name +'Ref'].initData();
        }
    },
    mounted() {
        this.initData();
    },
};
</script>

<style lang="less" scoped>
.edit-activity-area{
    display: flex;
    width:100%;
    height:100%;
    flex-direction: column;
    .edit-activity-cont{
        flex: 1;
        overflow: hidden;
    }
    .operate-area{
        padding: 5px 0px;
        padding-left: 140px;
        background-color:#fff;
    }
}
</style>