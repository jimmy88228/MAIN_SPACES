<template>
    <div>
        <Drawer class="page-drawer-area" :transfer="false" :inner="true" :closable="false" v-model="drawerShow" :width="530">
            <div class="class-edit-area" :style="'padding-top:' +  _pageScrollTop + 'px;'" v-bar>
                <div>
                    <div class="edit-title bold">{{title}}</div>
                    <div class="edit-cont">
                        <div class="edit-cont-area">
                            <Form :label-width="100" :model="teacherInfo" ref="teacherInfoForm" :rules="ruleValidate">
                                <FormItem label="姓名" prop="name">
                                    <p v-if="Number(teacherInfo.user_id)">{{teacherInfo.name}}</p>
                                    <Input class="base-320" v-model="teacherInfo.name" v-else></Input>
                                </FormItem>
                                <FormItem label="手机号" prop="mobile_phone">
                                    <p v-if="Number(teacherInfo.user_id)">{{teacherInfo.mobile_phone}}</p>
                                    <Input class="base-320" v-else v-model="teacherInfo.mobile_phone"></Input>
                                </FormItem>
                            </Form>
                            <div class="edit-foot">
                                <Button class="m-r-10" type="primary" @click="checkTeacherInfo" v-if="!Number(teacherInfo.user_id)">保存</Button>
                                <Button @click="drawerShow = false">取消</Button>
                            </div>
                            <Spin fix v-if="pageLoading"></Spin>
                        </div>
                    </div>
                </div>
            </div>
        </Drawer>
    </div>
</template>

<script>
export default {
    name: "editSchoolMaint",
    props: {
        title: {
            type: String,
            default: "编辑教师",
        },
    },
    components: { },
    data() {
        return {
            drawerShow: false,
            teacherInfo: {
                id: 0,
                user_id: 0,
                name: "",
                mobile_phone: "",
            },
            ruleValidate: {
                name: [
                    {
                        required: true,
                        type: "string",
                        validator: this._checkString,
                        message: "请填写老师名称",
                        trigger: "blur",
                    },
                ],
                mobile_phone: [
                    {
                        required: true,
                        type: "string",
                        validator: this._checkPhone,
                        trigger: "blur",
                    },
                ],
            },
        };
    },
    methods: {
        showDrawer(teacherInfo = {}) {
            this.drawerShow = true;
            this.$refs["teacherInfoForm"] && this.$refs["teacherInfoForm"].resetFields(); 
            let _teacherInfo = {
                id: teacherInfo.id || 0,
                user_id: teacherInfo.user_id || 0,
                name: teacherInfo.name || "",
                mobile_phone: teacherInfo.mobile_phone || "",
            };
            this.$set(this, "teacherInfo", _teacherInfo);
        },
        checkTeacherInfo() {
            this.$refs["teacherInfoForm"].validate((valid) => {
                if (valid) {
                    this.updateTeacherInfo();
                } else {
                    this.$Message.warning("请完善信息");
                }
            });
        },
        updateTeacherInfo() {
            let teacherInfo = this.teacherInfo || {};
            this.pageLoading = true;
            return this.$MainApi
                .teacherManagementUpdate({
                    data: teacherInfo,
                })
                .then((res) => {
                    if (res.code) {
                        this.$Message.success(res.message || "编辑成功");
                        this.confirmUpdate();
                    } else {
                        this.$Message.warning(res.message || "编辑失败");
                    }
                })
                .finally(() => {
                    this.pageLoading = false;
                });
        },
        confirmUpdate() {
            this.drawerShow = false;
            this.$emit("confirm");
        },
    },
    mounted() {},
};
</script>

<style lang="less" scoped>
@import "@/assets/css/variables.less";
.page-drawer-area {
    .edit-cont-area{
      border: 0 !important;
    }
    .edit-title{
        margin-bottom: 20px;
    }
}
</style>