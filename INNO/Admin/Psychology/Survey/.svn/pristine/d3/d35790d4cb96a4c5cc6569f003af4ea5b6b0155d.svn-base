<template>
    <hold-layout :isFull="true" :style="activityInfo.activityName ? 'margin-top: -15px' : ''">
        <div class="activity-name">{{activityInfo.activityName}}</div>
        <searchForm :searchForm="searchForm" @search="loadData" ></searchForm>
        <!-- class="full-table" -->
        <Table ref="myTable" class="full-table showBorder flex-table" :columns="columns" :data="list" border :loading="tableLoading">
            <template slot="student" slot-scope="{ row, index }">
                {{row.get_record && row.get_record.student_name || '--'}}
            </template>
            <template slot="student_number" slot-scope="{ row, index }">
                {{row.get_record && row.get_record.student_number || '--'}}
            </template>
            <template slot="school" slot-scope="{ row, index }">
                {{row.get_record && row.get_record.school_name || '--'}}
            </template>
            <template slot="school_year" slot-scope="{ row, index }">
                {{row.get_record && row.get_record.school_year || '--'}}
            </template>
            <template slot="class" slot-scope="{ row, index }">
                {{row.get_record && row.get_record.class_grade || ''}}{{row.get_record && row.get_record.class_name || '--'}}
            </template>
            <template slot="create_time" slot-scope="{ row, index }">
                <div class="range-box">
                    <div class="range-item" v-for="(item,item_i) in row.range" :key="item_i">
                        {{item.create_time||""}}
                    </div>
                </div>
            </template>
            <template slot="model" slot-scope="{ row, index }">
                <div class="range-box">
                    <div class="range-item" v-for="(item,item_i) in row.range" :key="item_i">
                        {{item.model_name||""}}
                    </div>
                </div>
            </template>
            <template slot="state_str" slot-scope="{ row, index }">
                <div class="range-box">
                    <div style="line-height: 40px;" class="range-item" v-for="(item,item_i) in row.range" :key="item_i">
                        <div>
                            {{row.state_str}}
                        </div>
                        <div class="m-t-5" v-if="row.show_state_str">{{row.show_state_str}}</div>
                    </div>
                </div>
            </template>
            <template slot="getrank" slot-scope="{ row, index }"> 
                <div class="range-box">
                    <div class="range-item" v-for="(item,item_i) in row.range" :key="item_i">
                        {{item.show_level_name||""}}
                    </div>
                </div>
            </template>
            <template slot="coefficient_points" slot-scope="{ row, index }">
                <div class="range-box">
                    <div class="range-item" v-for="(item,item_i) in row.range" :key="item_i">
                        {{item.coefficient_points||""}}
                    </div>
                </div>
            </template>
            <template slot="handle" slot-scope="{ row, index }">
                <div class="range-box">
                    <div class="range-item" v-for="(item,item_i) in row.range" :key="item_i">
                        <div class="operate-area">
                            <a class="operate" @click="getPsychicFile(item)" v-hasAction="'forewarning_survey_check_view_file'">查看档案</a>
                            <a class="operate" @click="examine(item)" v-hasAction="[item.state == 0, 'forewarning_survey_sign_grade']">审核标记</a>
                        </div>
                    </div>
                </div> 
            </template>
        </Table>
        <rewrite-page slot="footer" :total="total" :current="page" :page-size="pageSize" :page-size-opts="pageSizeOpts" @on-change="e=>loadData(e)" @on-page-size-change="handlePageSizeChange" show-sizer show-elevator show-total transfer></rewrite-page>
        <editExamine ref="editExamineRef" @confirm="handleUpdate"></editExamine>
    </hold-layout>
</template>

<script>
import ListMixin from "@/helper/mixin/list-mixin";
import searchForm from "./search-form.vue";
import mixins from "./mixins";
import editExamine from "./edit-examine/index.vue";
export default {
    name: "studentIndex",
    mixins: [ListMixin, mixins],
    components: { searchForm, editExamine },
    data() {
        return {
            searchForm: {
                searchq: "",
                school_id: 0,
                class_id: 0,
                state: -1, // -1 全部 0:未审核  1:审核通过  2:复核已通过

                campus_id: 0,
                grade_id: 0,
                school_year: '',
            },
            activityInfo: {}
        };
    },
    methods: {
        initData(){
            let state = this.pageQuery.state;
            state = (state == 0 || state > 0) ? state : -1;
            this.searchForm.state = Number(state);
            this.searchForm.school_id = Number(this.pageQuery.schoolId) || 0;
            this.searchForm.class_id = Number(this.pageQuery.classId) || 0;
        },
        onLoadData(page, extraData) {
            return this.$MainApi
                .forewarningExamineList({
                    data: {
                        ...this.searchForm,
                        ...extraData,
                        activityid: this.pageQuery.activityId
                    },
                })
                .then((res) => {
                    if (res.code) {
                        let data = res.data || {};
                        this.activityInfo.activityName = data.activity_name;
                        let items = data.items||[];
                        let obj = {},list=[];
                        items = items.forEach(item=>{
                            item.show_level_name = this.getLevelName(item);
                            item.show_state_str = this.getStateStr(item);
                            let label = ''+(item.record_id)+(item.user_id);
                            obj[label] || (obj[label] = {...item,range:[]})
                            obj[label].range.push(item);
                        })
                        for(let item in obj){
                            list.push(obj[item]);
                        }
                        console.log('list',list,obj)
                        this.data = {
                            total: data.total,
                            list,
                        };
                    }
                });
        },
        getPsychicFile(row) {
            this.$UIModule({
                mode: "clause-view",
                success: () => {
                    this.$router.push({
                        name: "earlyWarnPsychicFiles",
                        query: {
                            userId: row.user_id,
                            type: "earlyWarn"
                        },
                    });
                }
            })
            
        },
        examine(row){
            this.$refs["editExamineRef"] && this.$refs["editExamineRef"].showDrawer(row)
        },
        getLevelName(row){
            let getWarnRank = row.get_warn_user && row.get_warn_user.getrank || {};
            let empty = !!(row.get_warn_user && row.get_warn_user.warning_level == 0) ? '已解除':'无'
            let name = getWarnRank.level_name || empty;
            return name;
        },
        getStateStr(row){
            let name = row.getrank && row.getrank.level_name || "";
            return row.state == 1 &&  name ? `(标记为${name})` : ""
        }
        
    },
    mounted() {
        this.$nextTick(()=>{
            this.initData();
            this.loadData();
        })
    },
};
</script>
<style lang="less" scoped>
.activity-name{
  padding-left:10px; 
  font-size: 16px;
  font-family: PingFangSC-Regular, PingFang SC;
  font-weight: 400;
  color: #7F7F7F;
  line-height: 22px;
  margin-bottom: 15px;
}
.range-box{ 
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.range-item{
    line-height: 60px;
    border-bottom: 1px solid #e8eaec; 
    flex: 1;
    flex-direction: column;
    justify-content: center;
    display: flex;
    &:last-child{
        border-bottom: none;
    }
}
</style>