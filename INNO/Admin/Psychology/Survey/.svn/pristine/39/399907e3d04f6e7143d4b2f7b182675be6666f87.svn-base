<template>
    <div>
        <Modal v-model="isShowApplet" @on-visible-change="onVisibleChange" :width="400" class-name="applet-list-modal">
            <div slot="header" class="model-header">
                <Icon type="ios-help-circle" color="#2F8CEE" size="20" />&nbsp;{{title}}
            </div>
            <div>
                <Select v-model="appletInfo.id" @on-change="changeApplet">
                    <Option v-for="(item, index) in appletList" :value="item.id" :key="item.id">{{item.app_name}}</Option>
                </Select>
            </div>
            <!-- <div v-if="_structureType == 'edu_school'">
                <campusSelect placeholder="请选择校区" class="base-320" v-model="appletInfo.campus_id" :schoolId="_structureId" @change="changeCampus"></campusSelect>
            </div> -->
            <div slot="footer" class="text-l" v-if="appletInfo.id">
                <div class="m-t-5">链接：</div>
                <div class="flex p-t-10 p-b-15">
                    <p class="w-break">{{viewPath}}</p>
                    <a class="f-shrink0 inline-b p-l-5" @click="copyText(viewPath)">复制</a>
                </div>
            </div>
        </Modal>
    </div>
</template>
<script>
import campusSelect from "@/components/view-components/campus-select/index";
export default {
    components: { campusSelect },
    props: {
        title: {
            type: String,
            default() {
                return "选择链接平台";
            },
        },
    },
    data() {
        return {
            isShowApplet: false,
            appletList: [],
            appletInfo: {
                id: 0,
                campus_id: 0,
            },
        };
    },
    computed: {
        viewPath() {
            let path = this.path || "";
            let params = this.params || {};
            let appletInfo = this.appletInfo || {};
            let pathParams = "";
            let appCodeStr = appletInfo.app_code ? 'appCode=' + appletInfo.app_code : '';
            for (let i in params) {
                pathParams = pathParams
                    ? pathParams + "&" + i + "=" + params[i]
                    : "?" + i + "=" + params[i];
            }
            path = path + pathParams;
            path += path.indexOf("?") != -1 ? '&' + appCodeStr : '?' + appCodeStr
            return path;
        },
    },
    methods: {
        showModal({ path, params, listParams = {} }) {
            this.path = path || "";
            this.params = params || {};
            this.listParams = listParams || {}
            this.getAppletData();
        },
        getAppletData(){
            return this.$MainApi
                .getAppletList({
                   data: this.listParams instanceof Object ? this.listParams : {}
                }).then((res)=>{
                    if(res.code){
                        let data = res.data || {};
                        let items = data.items || [];
                        this.appletList = items;
                        if(items.length > 0){
                            if(items.length == 1){
                                this.changeApplet(items[0].id);
                            }
                            this.goShowApplet();
                        } else {
                           this.$Message.warning("暂无可用小程序"); 
                        }
                    } else {
                        this.$Message.warning(res.message);
                    }
                })
        },
        changeApplet(value){
            if(!value){
                this.appletInfo = { id: 0, campus_id: 0 }
                return;
            }
            let appletList = this.appletList || [];
            for(let i = 0; i < appletList.length; i++){
                let item = appletList[i] || {};
                if(item.id == value){
                    this.$set(this, 'appletInfo', { ...this.appletInfo, ...item })
                    break;
                }
            }
        },
        goShowApplet() {
            this.isShowCode = false;
            this.isShowApplet = true;
        },
        copyText(text) {
            this.$utils.copyText(text);
        },
        onVisibleChange(bool){
            if(!bool && !this.isShowApplet){
                this.$emit('destroy');
            }
        },
    },
};
</script>
<style lang="less">
.applet-list-modal {
    .model-header {
        font-size: 16px;
    }
}
.applet-code-modal {
    .ivu-modal-close {
        display: none;
    }
    .model-header {
        cursor: pointer;
        font-size: 16px;
    }
    .ivu-modal-body {
        // padding-top: 0px;
    }
    .code-view-cont {
        width: 100%;
        .ivu-tabs-nav {
            width: 100%;
            text-align: center;
            .ivu-tabs-tab {
                width: 50%;
                box-sizing: border-box;
                margin: 0px;
            }
        }
        .img-view {
            width: 288px;
            padding: 20px 10px;
            border-radius: 10px;
            overflow: hidden;
            background-color: #fff;
        }
        .code-view {
            text-align: center;
            width: 200px;
            min-height: 200px;
            margin: 25px auto;
        }
        .code-url-view {
            width: 100%;
            height: 100%;
            padding-bottom: 35px;
        }
        .copy-btn {
            position: absolute;
            left: 0px;
            bottom: 0px;
        }
        .code-tip {
            text-align: center;
            font-size: 21px;
            .big-tip {
                font-family: PingFangSC-Regular, PingFang SC;
                font-weight: 400;
                line-height: 30px;
                margin-bottom: 10px;
            }
            .tip {
                font-family: PingFangSC-Regular, PingFang SC;
                font-weight: 400;
                color: #222222;
                line-height: 16px;
                font-size: 12px !important;
            }
        }
        .code-appname-tip{
            font-size: 14px;
            color: #222222;
        }
    }
}
</style>