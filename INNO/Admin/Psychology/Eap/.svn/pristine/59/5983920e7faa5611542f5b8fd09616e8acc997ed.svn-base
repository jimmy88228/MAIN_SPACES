<template>
  <div class="editor-body" v-bar>
    <div class="editor-body-view bg-page">
      <div class="view-header-line"></div>
      <div class="view-header" ></div>
      <div class="view-body" :style="getPageStyle">
        <draggable class="draggable-box" :list="compList" v-bind="dragOptions" :group="{name:'itemBox'}" @start="dragStart" @end="dragEnd" @change="dragChange">
          <div class="comp-item" v-for="(item, index) in compList" :key="item.module_type + '|' + index" @click="itemChange(index, true)">
            <moduleContain :itemInfo="item" :itemIndex="index" :selected="currSelectIndex == index" @remove="removeComp">
							<!--广告图-->
              <imageAdView :compInfo="item" v-if="item.module_type == 'IMAGE-AD'"></imageAdView>
              <videoMdView :compInfo="item" v-if="item.module_type == 'VIDEO-MD'"></videoMdView>
              <audioMdView :compInfo="item" v-if="item.module_type == 'AUDIO-MD'"></audioMdView>
              <articleMdView :compInfo="item" v-if="item.module_type == 'ARTICLE-MD'"></articleMdView>
							<!--个人中心 -- 头部-->
							<userHeaderView :compInfo="item" v-else-if="item.module_type == 'USER-HEADER'"></userHeaderView>
							<!--个人中心 -- 功能服务-->
							<userServiceView :compInfo="item" v-else-if="item.module_type == 'USER-SERVICE'"></userServiceView>
            </moduleContain>
          </div>

        </draggable>
      </div>
    </div>
  </div>

  <!-- <div class="goods-editor-body" v-bar>
		<div class="goods-editor-view" >
			<div class="view-header"></div>
			<div class="view-body bg-page" :style="getPageStyle"> -->
  <!-- <div class="view-body-content bg-page" > -->
  <!-- <pageSettingLotteryBody></pageSettingLotteryBody> -->
  <!-- ghost-class="ghost" v-bind="dragOptions" @start="dragStart" @end="dragEnd" -->
  <!-- <draggable 
					class="draggable-box"
					:list="compList"
					:group="{name:'itemBox'}" 
					@change="dragChange">
						<div v-if="compList.length == 0" class="plugins-empty-tips">
							请拖拽左边的组件到此区域进行创建
						</div> -->
  <!--数据渲染组件池-->
  <!-- <div class="com-item" v-for="(item,index) in compList" :key="item.code + '|' + index" @click="itemChange(index, true)">
								{{item.name}} -->
  <!--<moduleContain :itemInfo="item" :selected="currSelectIndex == index" v-if="item.code == 'IMAGE-AD'">
										 <imageAdView :content="item"></imageAdView> 
										{{item.name}}
									</moduleContain>-->
  <!--组件tips-->
  <!-- <div class="com-tips">
										<span class="arrow-out"></span>
										<span class="txt">
											<template v-if="item.code == null || typeof( componentsList[item.code] ) == 'undefined'">未知组件</template>
											<template v-else>
											{{componentsList[item.code]}}
											<span v-if="item.setting != null && item.setting.widgetRemark != null && item.setting.widgetRemark != ''" style="display: block;">
												{{ '备注：'+item.setting.widgetRemark }}
											</span>
											
											</template>
										</span>

										<template v-if="item.can_remove == null || item.can_remove == 1">
											<Poptip confirm placement="top-end" style="float:right;text-align: left;" title="确定删除吗？" @on-ok="removeComp(index)">
												<Icon class="close" type="md-trash" style="width:48px;"></Icon>
											</Poptip>
										</template>
										<template v-else>
											<span class="close" style="font-size: 12px;">不可移除</span>
										</template>
									</div> -->

  <!--图片广告显示组件-->
  <!-- <imageAdView v-if=" item.code == 'imageAd' " :currIndex="index"></imageAdView> -->

  <!--用户卡片-->
  <!-- <userCardView v-else-if=" item.code == 'userCard' " :currIndex="index"></userCardView> -->

  <!--标题文字显示组件-->
  <!-- <textView v-else-if=" item.code == 'text' " :currIndex="index"></textView> -->

  <!--富文本显示组件-->
  <!-- <richTextView v-else-if=" item.code == 'richText' " :currIndex="index"></richTextView> -->

  <!--商品列表显示组件-->
  <!-- <goodsListView v-else-if=" item.code == 'goodsList' " :currIndex="index"></goodsListView> -->

  <!--视频组件-->
  <!-- <videoView v-else-if=" item.code == 'video' " :currIndex="index"></videoView> -->

  <!--公告组件-->
  <!-- <textScrollView v-else-if=" item.code == 'textScroll' " :currIndex="index"></textScrollView> -->

  <!--客服组件-->
  <!-- <customerServiceView v-else-if=" item.code == 'customerService' " :currIndex="index"></customerServiceView> -->

  <!--图文导航组件-->
  <!-- <imageTextNavigateView v-else-if=" item.code == 'imageTextNavigate' " :currIndex="index"></imageTextNavigateView> -->

  <!--【Tab导航组件】-->
  <!-- <tabNavigateView v-else-if=" item.code == 'tabNavigate' " :currIndex="index"></tabNavigateView> -->

  <!--积分兑换活动组件-->
  <!-- <integralSaleView v-else-if=" item.code == 'integralSale' " :currIndex="index"></integralSaleView> -->

  <!--拼团组件-->
  <!-- <pinSaleView v-else-if=" item.code == 'pinSale' " :currIndex="index"></pinSaleView> -->

  <!--预售组件-->
  <!-- <preSaleView v-else-if=" item.code == 'preSale' " :currIndex="index"></preSaleView> -->

  <!--砍价组件-->
  <!-- <kanSaleView v-else-if=" item.code == 'kanSale' " :currIndex="index"></kanSaleView> -->

  <!--秒杀组件-->
  <!-- <secKillView v-else-if=" item.code == 'secKill' " :currIndex="index"></secKillView> -->

  <!--限时特惠-->
  <!-- <limitTimeSaleView v-else-if=" item.code == 'limitTimeSale' " :currIndex="index"></limitTimeSaleView> -->

  <!--搭配套餐-->
  <!-- <packageSaleView v-else-if=" item.code == 'packageSale' " :currIndex="index"></packageSaleView> -->

  <!--订单条（个人中心用）-->
  <!-- <orderBarView v-else-if=" item.code == 'orderBar' " :currIndex="index"></orderBarView> -->

  <!--资产条（个人中心用）-->
  <!-- <assetsBarView v-else-if=" item.code == 'assetsBar' " :currIndex="index"></assetsBarView> -->

  <!--签到（个人中心用）-->
  <!-- <ucSignView v-else-if=" item.code == 'ucSign' " :currIndex="index"></ucSignView> -->

  <!--N单有礼（个人中心用）-->
  <!-- <ucGiftView v-else-if=" item.code == 'ucGift' " :currIndex="index"></ucGiftView> -->

  <!--用户头部（个人中心用）-->
  <!-- <userCenterHeaderView v-else-if=" item.code == 'userCenterHeader' " :currIndex="index" :pageType="pageType"></userCenterHeaderView> -->

  <!--会员服务（个人中心用）-->
  <!-- <userServiceView v-else-if=" item.code == 'userService' " :currIndex="index"></userServiceView> -->

  <!--导购服务（个人中心用）-->
  <!-- <staffServiceView v-else-if=" item.code == 'staffService' " :currIndex="index"></staffServiceView> -->

  <!--营销logo（营销活动用）-->
  <!-- <lotteryLogo v-else-if=" item.code == 'lotteryLogo' " :currIndex="index"></lotteryLogo> -->

  <!--营销奖项列表（营销活动用）-->
  <!-- <lotteryWinningList v-else-if=" item.code == 'winningList' " :currIndex="index"></lotteryWinningList> -->

  <!--翻翻看（营销活动用）-->
  <!-- <flipCard v-else-if=" item.code == 'flipCard' " :currIndex="index"></flipCard> -->

  <!--水果机（营销活动用）-->
  <!-- <fruitLottery v-else-if=" item.code == 'fruitLottery' " :currIndex="index"></fruitLottery> -->

  <!--大转盘（营销活动用）-->
  <!-- <bigWheel v-else-if=" item.code == 'bigWheel' " :currIndex="index"></bigWheel> -->

  <!--砸金蛋（营销活动用）-->
  <!-- <goldenEggs v-else-if=" item.code == 'goldenEggs' " :currIndex="index"></goldenEggs> -->

  <!--矩阵主体（矩阵营销活动用）-->
  <!-- <matrixMain v-else-if=" item.code == 'matrixMain' " :currIndex="index"></matrixMain> -->

  <!--参与矩阵（矩阵营销活动用）-->
  <!-- <matrixActive v-else-if=" item.code == 'matrixActive' " :currIndex="index"></matrixActive> -->

  <!--矩阵奖品池（矩阵营销活动用）-->
  <!-- <matrixPrizes v-else-if=" item.code == 'matrixPrizes' " :currIndex="index"></matrixPrizes> -->

  <!--矩阵任务（矩阵营销活动用）-->
  <!-- <matrixTasks v-else-if=" item.code == 'matrixTasks' " :currIndex="index"></matrixTasks> -->
  <!-- </div>
					</draggable> -->
  <!-- </div> -->
  <!-- </div>
		</div>
	</div> -->
</template>

<script>
// import EditorH from "./helper/editor-helper";
import draggable from "vuedraggable";
import moduleContain from "./component/container/module-contain";
import imageAdView from "./widgets/image-ad/image-ad-view";
import videoMdView from "./widgets/video-md/video-md-view";
import audioMdView from "./widgets/audio-md/audio-md-view";
import articleMdView from "./widgets/article-md/article-md-view";
import testAd from "./widgets/test-ad/test-ad";
//
import userHeaderView from "./widgets/user-center/user-header-view.vue";
import userServiceView from "./widgets/user-center/user-service-view.vue";
// import userCardView from './widgets/user-card-view';
// import textView from './widgets/text-view';
// import richTextView from './widgets/rich-text-view';
// import goodsListView from "./widgets/goods-list-view";
// import videoView from './widgets/video-view';
// import textScrollView from "./widgets/text-scroll-view";
// import customerServiceView from "./widgets/customer-service-view";
// import imageTextNavigateView from "./widgets/image-text-navigate-view";
// import orderBarView from './widgets/order-bar-view';
// import assetsBarView from './widgets/assets-bar-view';
// import ucSignView from './widgets/uc-sign-view';
// import ucGiftView from './widgets/uc-gift-view';
// import userCenterHeaderView from './widgets/user-center-header-view';
// import userServiceView from './widgets/user-service-view';
// import staffServiceView from './widgets/staff-service-view';
// import tabNavigateView from "./widgets/tab-navigate-view";
// import pinSaleView from "./widgets/activity-widget/pinSale-view";
// import preSaleView from "./widgets/activity-widget/preSale-view";
// import kanSaleView from "./widgets/activity-widget/kanSale-view";
// import secKillView from "./widgets/activity-widget/secKill-view";
// import limitTimeSaleView from "./widgets/activity-widget/limitTimeSale-view";
// import packageSaleView from "./widgets/activity-widget/packageSale-view";
// import integralSaleView from "./widgets/activity-widget/integralSale-view";
// //营销组件
// import lotteryLogo from './widgets/lottery-widget/logo-view';
// import lotteryWinningList from './widgets/lottery-widget/winning-list-view';
// import flipCard from './widgets/lottery-widget/flip-card-view';
// import bigWheel from './widgets/lottery-widget/big-wheel-view';
// import fruitLottery from './widgets/lottery-widget/fruit-lottery-view';
// import goldenEggs from './widgets/lottery-widget/golden-eggs-view';
// //矩阵营销组件
// import matrixMain from './widgets/lottery-widget/matrix-main-view.vue';
// import matrixActive from './widgets/lottery-widget/matrix-active-view.vue';
// import matrixPrizes from './widgets/lottery-widget/matrix-prizes-view.vue';
// import matrixTasks from './widgets/lottery-widget/matrix-tasks-view.vue';
// //页面配置
// import pageSettingLotteryBody from './widgets/page-setting-lottery-body.vue';

export default {
  name: "editorBody",
  components: {
    draggable,
    moduleContain,
    imageAdView,
    videoMdView,
    audioMdView,
    articleMdView,
    testAd,
		//
		userHeaderView,
		userServiceView
    // userCardView,
    // textView,
    // richTextView,
    // goodsListView,
    // videoView,
    // textScrollView,
    // orderBarView,
    // assetsBarView,
    // ucSignView,
    // ucGiftView,
    // userCenterHeaderView,
    // userServiceView,
    // staffServiceView,
    // tabNavigateView,
    // pinSaleView,
    // preSaleView,
    // kanSaleView,
    // secKillView,
    // limitTimeSaleView,
    // packageSaleView,
    // integralSaleView,
    // customerServiceView,
    // imageTextNavigateView,
    // //
    // lotteryLogo,
    // lotteryWinningList,
    // flipCard,
    // bigWheel,
    // fruitLottery,
    // goldenEggs,
    // //
    // matrixMain,
    // matrixActive,
    // matrixPrizes,
    // matrixTasks,
    // //
    // pageSettingLotteryBody
  },
  props: {
    compList: {
      type: Array,
      default: () => [],
    },
		pageInfo: {
      type: Object,
      default: () => {},
    },
    pageType: {
      type: String,
      default: "NONE",
    },
  },
  data() {
    return {
      currSelectIndex: -1,
      // t 很重要，是强制要求位置变化的时候，重新渲染组件(这里有很大性能开销，已经关闭)
      t: 0,
    };
  },
  computed: {
    dragOptions() {
      return {
        animation: 200,
        group: "description",
        disabled: false,
        ghostClass: "ghost",
        chosenClass: "chosen",
      };
    },
    // 页面背景设置
    getPageStyle() {
			let pageInfo = this.pageInfo || {};
			let pageSetting = pageInfo.setting || {};
			let pageStyle = {}
			if(pageSetting.backgroundColor){
				pageStyle["background-color"] = pageSetting.backgroundColor;
			}
			if(pageSetting.backgroundImage){
				pageStyle["background-image"] = "url(" + pageSetting.backgroundImage + ")";
				pageStyle["background-repeat"] = "no-repeat";
				pageStyle["background-size"] = "100% auto";
				pageStyle["background-position"] = "center " + pageSetting.backgroundPosition;
			}
			return pageStyle;
    },
    // maxSort(){
    //   let compList = this.compList || [];
    //   let maxSort = 0;
    //   for(let i = 0; i < compList.length; i++){
    //     let sort = compList.sort || 0;
    //     if(sort > maxSort){
    //       maxSort = sort;
    //     }
    //   }
    //   if(!maxSort) maxSort = compList.length;
    //   return maxSort;
    // }
  },
  methods: {
    // init() {
    // 	this.compList = this.$store.state.app.pageCompList || [];
    // 	this.pageInfo = this.$store.state.app.pageInfo || {};
    // 	// 如果只有一个组件的，默认选中
    // 	if (this.compList.length == 1) {
    // 		this.$nextTick(() => {
    // 			this.itemChange(0, true);
    // 		});
    // 	}
    // },
    // initData(componentsList) {
    // 	for (var i in componentsList) {
    // 		this.componentsList[componentsList[i].code] = componentsList[i].name;
    // 	}
    // },

    // // item 变化事件
    // itemChange(index, isClick = false) {

    // 	// 把旧的取消
    // 	for (var i in this.compList) {
    // 		this.$set(this.compList[i], 'selected', false);
    // 	}

    // 	// 新的增加
    // 	this.currSelectIndex = index;
    // 	this.$set(this.compList[index], 'selected', true);

    // 	// 更新store 信息
    // 	this.$store.commit('setPageCompList', this.compList);

    // 	if (isClick) {
    // 		// 子项的变化不会触发 setPageCompList，所有这里做一个子项变化的开关
    // 		this.$store.commit('setPageCompItemChange', true);
    // 	}
    // },
    itemChange(index) {
      if (index || index == 0) {
        this.currSelectIndex = index;
      }
    },
    dragChange(e) {
      console.log('dragChange',e);
      if (e.added) {
        // 添加时更新选中项
        let newIndex = e.added.newIndex;
        if(this.currSelectIndex < 0){
          this.currSelectIndex = newIndex;
        } else if (!(this.currSelectIndex < newIndex)) {
          this.currSelectIndex += 1;
        }
      }
    },
    dragStart(e) {
      this.itemChange(e.oldIndex);
    },
    dragEnd(e) {
      this.itemChange(e.newIndex);
    },
    // 删除组件
    removeComp(index) {
      if (this.currSelectIndex == index) {
        this.currSelectIndex = -1;
      }
      this.$delete(this.compList, index);
      this.$nextTick(() => {
        this.currSelectIndex = index;
      });
    },
  },
  watch: {
    currSelectIndex: {
      handler(nV) {
        if (nV != this.$store.state.pages.selectCompIndex) {
          this.$store.commit("setSelectCompIndex", nV);
        }
      },
      immediante: true,
    },
    "$store.state.pages.selectCompIndex": {
      handler(nV) {
        if (nV != this.currSelectIndex) {
          this.currSelectIndex = nV;
        }
      },
      immediante: true,
    },
  },
  mounted() {},
};
</script>

<style lang="less">
.editor-body {
  width: 100%;
  height: 100%;
  .editor-body-view {
    width: 415px; //375+40
    padding: 20px;
    background: rgba(239, 239, 239, 0.17);
    margin: 0 auto;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    min-height: calc(100% + 0px);
    position: relative;
    // border:1px solid #dcdee2;
    // border-top: 0px;
    .view-header-line{
      position: sticky;
      top:0px;
      right:0px;
      width:100%;
      // border-top:1px solid #dcdee2;
    }
    .view-header {
      position: absolute;
      top: 22px;
      right: 21px;
      z-index: 15;
      background: url("@/assets/images/pages/page-header-tip.png") top center
        no-repeat;
      background-size: 100% auto;
      width: 80px;
      height: 30px;
      overflow: hidden;
    }
    .no-header{
      height: 0px;
    }
    .view-body {
      position: relative;
      flex: 1;
      .draggable-box {
        min-height: calc(100vh - 300px);
      }
    }
  }
  .ghost {
    opacity: 0.6;
    background: #ed4014;
    text-align: center;
    color: #fff;
    padding: 15px;
    .icon {
      display: none;
    }
  }
  .chosen {
    background: rgba(255,255,255,0.3);
    padding: 0px;
  }
}
</style>

