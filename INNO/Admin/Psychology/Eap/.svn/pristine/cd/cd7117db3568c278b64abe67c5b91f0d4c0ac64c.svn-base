<template>
  <div>
    <p>
      <Select v-model="linkInfo.code" size="small" style="width:100%;" clearable @on-change="changeLink">
        <Option v-for="item in linkSelect" :value="item.code" :key="item.code">{{item.name}}</Option>
      </Select>
    </p>
    <div>
      <template v-if="linkInfo.code == 'CUSTOM-URL'">
        <Input size="small" v-model="linkInfo.remark" placeholder="备注"></Input>
        <Input size="small" v-model="linkInfo.url" placeholder="跳转路径"></Input>
      </template>
      <template v-if="linkInfo.code == 'CONTENT-REPOSITORY' && linkInfo.type">
        <div class="flex-s-c">
          <Tag class="f-shrink-0" color="blue">{{typeInfo[linkInfo.type]}}</Tag>
          <div class="text-flow" :title="linkInfo.info.title">{{linkInfo.info && linkInfo.info.title||""}}</div>
        </div>
      </template>
    </div>
  </div>
</template>

<script> 
const BASE_INFO = {
  code: "",
  remark: "",
  id: "",
  info:{},
  url: "",
  type:"",
};
export default {
  props: {
    usabledLink: {
      type: Array,
      default : () => {
        return []
      }
    },
    disabledLink: {
      type: Array,
      default : () => {
        return []
      }
    },
    linkInfo: {
      type: Object,
      default:() => {
        return JSON.parse(JSON.stringify(BASE_INFO))
      }
    }
  },
  computed: {
    linkSelect(){
      let linkList = this.linkList || [];
      let _linkList = [];
      if(this.usabledLink.length > 0){// 可用的交集
        _linkList = linkList.filter((item)=>{ return this.usabledLink.indexOf(item.code) != -1})
      } else {
        _linkList = linkList || []
      }
      if(this.disabledLink.length > 0){
        _linkList = _linkList.filter((item)=>{ return this.disabledLink.indexOf(item.code) == -1})
      }
      return _linkList || []
    }
  },
  data(){
    return {
      linkList: [
        {
          code: "CUSTOM-URL",
          name: "自定义地址"
        },
        {
          code: "CONTENT-REPOSITORY",
          name: "内容库"
        },
        {
          code: "SUBSCRIBE-COUNSEL",
          name: "预约咨询"
        },
      ],
      typeInfo:{
        'video':"视频",
        'audio':"音频",
        'article':"文章",
      }
    }
  },
  methods:{
    init(){
      for(let item in this.linkInfo){ //重置数据
      console.log('item')
        if(item!='code'){
          this.$set(this.linkInfo, item, BASE_INFO[item]);
        }
      }
    },
    changeLink(code){
      this.init();
      if(code == 'CUSTOM-URL'){
        this.$set(this.linkInfo, "remark", "");
        this.$set(this.linkInfo, "id", "");
        this.$set(this.linkInfo, "url", "");
      }else if(code == 'CONTENT-REPOSITORY'){
        this.showMaterial();
      }else if(code == 'SUBSCRIBE-COUNSEL'){
        
      }
      console.log("changeLink",code, this.linkInfo)
    },
    showMaterial(){
      let strucId = Number(this.pageQuery.strucId||0),
          extraParams = { structure_id:strucId == 0 ? [0]:[0,strucId]},
          selectedData = [];
          this.$UIModule({
            mode: "material-modal",
            props: {
                isMulti: false,
                width:1080,
                fromType:"customPages",
                isShowTabs:true,
            },
            options: {selectedData,extraParams}, //已选数据,接口传参
            success: (data,extra={}) => {
                let id = data && data[0] && data[0].id||0;
                let type = extra.type || "";
                this.$set(this.linkInfo, "id", id);
                this.$set(this.linkInfo, "type", type);
                this.$set(this.linkInfo, "info", data[0]);
                console.log("success",extra,data,this.linkInfo); 
            },
          });
    }
  }
}
</script>

<style lang="less" scoped>
</style>