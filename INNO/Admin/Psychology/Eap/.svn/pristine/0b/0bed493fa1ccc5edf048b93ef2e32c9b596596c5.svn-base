<template>
    <hold-layout :isFull="true">
        <searchForm :searchForm="searchForm" :sex="true" @search="loadData" @batchImport="batchImport" @batchChange="batchChange" @batchRemove="batchRemove"></searchForm>
        <Table ref="myTable" class="full-table" :columns="columns" :data="list" border :loading="tableLoading" @on-selection-change="selectDataEvent">
           <template slot="structure_name" slot-scope="{ row, index }">
               <div class="operate-area">
                   <p class="operate-line">
                       {{row.get_membre.structure_name}}
                   </p>
               </div>
           </template>
            <template slot="handle" slot-scope="{ row, index }">
                <div class="operate-area">
                    <!-- <a class="operate" @click="editStudentEvent(row)" v-hasAction="'member_file_update'">编辑</a> -->
                    <a class="operate" @click="getPsychicFile(row)" v-hasAction="'member_file_psychology_files'">心理档案</a>
                    <!-- <a class="operate" @click="removeItem(row.user_id, index)" v-hasAction="'member_file_batch_remove'">删除</a> -->
                </div>
            </template>
        </Table>
        <rewrite-page slot="footer" :total="total" :current="page" :page-size="pageSize" :page-size-opts="pageSizeOpts" @on-change="e=>loadData(e)" @on-page-size-change="handlePageSizeChange" show-sizer show-elevator show-total transfer></rewrite-page>
    </hold-layout>
</template>

<script>
import ListMixin from "@/helper/mixin/list-mixin";
import searchForm from "./search-form.vue";
import mixins from "./mixins";
export default {
    name: "studentIndex",
    mixins: [ListMixin, mixins],
    components: { searchForm },
    data() {
        return {
            searchForm: {
                // school_id: 0,
                // campus_id: 0,
                // grade_id: 0,
                // class_is: 0,
                sex: -1,
                searchq: "",
                structure_id:0,
            },
            selectData: [],
        };
    },
    computed: {
        ids() {
            let selectData = this.selectData || [];
            let ids = [];
            if (selectData instanceof Array) {
                for (let i = 0; i < selectData.length; i++) {
                    if (selectData[i].user_id) {
                        ids.push(selectData[i].user_id);
                    }
                }
            }
            return ids;
        },
    },
    methods: {
        selectDataEvent(selectData) {
            this.selectData = selectData || [];
        },
        onLoadData(page, extraData) {
            return this.$MainApi
                .memberList({
                    data: {
                        ...this.searchForm,
                        ...extraData,
                    },
                })
                .then((res) => {
                    if (res.code) {
                        let data = res.data || {};
                        this.data = {
                            total: data.total,
                            list: data.items,
                        };
                    }
                });
        },
        editStudentEvent(row) {
            this.$refs["editStudentRef"] &&
                this.$refs["editStudentRef"].showDrawer(row);
        },
        getPsychicFile(row) {
            this.$UIModule({
                mode: "clause-view",
                success: () => {
                    this.$router.push({
                        name: "memberPsychicFiles",
                        query: {
                            userId: row.user_id || 0
                        },
                    });
                }
            })
            
        },
        batchImport(){
          this.$UIModule({
              mode: "batch-import",
              options: {
                  canCreate: { upload: true, download: true },
                  uploadUrl: "studentBatchImport",
                  downloadUrl: "studentBatchTpl",
              },
              success: () => {
                  this.loadData();
              },
          });
        },
        batchChange(){
          this.$Message.warning("功能待定中....")
        },
        removeItem(id) {
            if (!id) {
                this.$Message.warning("无效ID");
                return Promise.reject();
            }
            this.removeReq([id]).then(() => {
                this.delItem(index);
            });
        },
        batchRemove() {
            this.removeReq(this.ids).then(() => {
                this.delItems(this.ids);
            });
        },
        removeReq(ids) {
          console.log("ids", ids)
            if (!ids[0] || ids.length == 0) {
                this.$Message.warning("请选择删除项！");
                return Promise.reject();
            }
            return this.$MainApi
                .studentBatchRemove({
                    data: {
                        ids: ids,
                    },
                })
                .then((res) => {
                    if (res.code) {
                        this.$Message.success(res.message || "删除成功");
                        return Promise.resolve();
                    } else {
                        this.$Message.warning(res.message || "删除失败");
                        return Promise.reject();
                    }
                });
        },
    },
    mounted() {
        this.loadData();
    },
};
</script>

<style>
</style>