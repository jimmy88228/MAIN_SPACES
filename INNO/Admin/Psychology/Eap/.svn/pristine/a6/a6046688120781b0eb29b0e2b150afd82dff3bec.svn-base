<template>
    <custom-modal
      ref="modal"
      class="member-modal-area hold-modal-zindex"
      :footerHide="true"
      :width="530"
    >
        <div class="class-edit-area">
            <div class="edit-title bold">{{title}}</div>
            <div class="edit-cont" v-bar>
                <div class="edit-cont-area">
                    <Form :label-width="100" :model="adminInfo" ref="formDataRef" :rules="ruleValidate">
                        <FormItem label="人员名称" prop="user_name">
                            <Input class="base-260-44" v-model="adminInfo.user_name"></Input>
                        </FormItem>
                        <FormItem label="手机号" prop="mobile_phone">
                            <Input class="base-260-44" v-model="adminInfo.mobile_phone"></Input>
                        </FormItem>
                        <FormItem label="权限组" prop="role_id">
                            <Select v-model="adminInfo.role_id" class="base-260-44" style="height:44px;">
                                <Option v-for="item in rolesList" :key="item.id" :value="item.id">{{item.role_name || '暂无名称'}}</Option>
                            </Select>
                        </FormItem>
                        <FormItem label="组织" prop="structure_ids_arr">
                            <organizeInput 
                                :tagData="adminInfo.structure_ids_arr"
                                @handleSelect="handleSelect"
                                @handleDeleteTag="handleDeleteTag"></organizeInput>
                        </FormItem>
                    </Form>
                    <div class="edit-foot flex-c-c">
                        <Button type="primary" @click="checkUpdateInfo">保存</Button>
                        <Button class="m-l-15" @click="dismiss">取消</Button>
                    </div>
                    <Spin fix v-if="pageLoading"></Spin>
                </div>
            </div>
        </div>
    </custom-modal>
</template>

<script>
import organizeInput from '@/components/view-components/organize-input/index.vue';

export default {
    components: {
        organizeInput
    },
    props: {
        title: String,
    },
    data() {
        return {
            drawerShow: false,
            structureData:[],
            adminInfo: {
                id:0,
                role_id: 0,
                user_name: "",
                structure_ids_arr: [],
                structure_ids: 0,
                mobile_phone: "",
            },
            // adminId: 0,
            ruleValidate: {
                user_name: [
                    {
                        required: true,
                        validator: this._checkString,
                        trigger: "blur",
                        message: "请填写人员名称",
                    },
                ],
                mobile_phone: [
                    {
                        required: true,
                        validator: this._checkPhone,
                        trigger: "blur",
                    },
                ],
                role_id: [
                    {
                        required: true,
                        validator: this._checkThanInt,
                        trigger: "blur",
                        message: "请选择权限组",
                    },
                ],
                structure_ids_arr: [
                    {
                        required: true,
                        validator: this._checkArray,
                        trigger: "blur",
                        message: "请选择组织",
                    },
                ],
                // role_id: [
                //     {
                //         required: true,
                //         validator: this._checkString,
                //         message: "请选择组织",
                //         trigger: "blur",
                //     },
                // ],
                // campus_id: [
                //     {
                //         required: true,
                //         validator: this._checkThanInt,
                //         message: "请选择校区",
                //         trigger: "blur",
                //     },
                // ],
                // structure_ids: [
                //     {
                //         required: true,
                //         validator: this._checkThanInt,
                //         message: "请选择对应的值",
                //         trigger: "blur",
                //     },
                // ],
            },
        };
    },
    computed: {
        rolesList() {
            let rolesList = this._adminRoleData;
            // 仅有一个角色时，且是新增时，默认自动勾选
            if (rolesList.length == 1 && Number(this.adminInfo.id) == 0) {
                this.$set( 
                    this.adminInfo,
                    "role_id",
                    rolesList[0].id
                );
            }
            return rolesList;
        },
    },
    methods: {
        dismiss(){
          this.$refs.modal.dismiss();
        },
        showModal({ adminInfo = {} }) {
            this.$refs["formDataRef"] && this.$refs["formDataRef"].resetFields();
            let _adminInfo = {
                id: adminInfo.id || 0,
                user_name: adminInfo.user_name || "",
                mobile_phone: adminInfo.mobile_phone||"",
                role_id: adminInfo.role_info && adminInfo.role_info[0] && adminInfo.role_info[0].role_id || 0,
                structure_ids: adminInfo.role_info && adminInfo.role_info.map(item=>item.structure_id).join(',') || "",
                structure_ids_arr : adminInfo.role_info && adminInfo.role_info.map(item=>{
                    return { id: item.structure_id, structure_name: item.structure_name }
                }) || []
            };
            this.adminInfo = _adminInfo;
            this.$refs.modal.show();
        },
        handleDeleteTag(data){
            console.log('handleDeleteTag',data);
            this.adminInfo.structure_ids_arr = data;
        },
        handleSelect(){
            this.$UIModule({
                mode:"organize-modal",
                props: {
                    isShowAdd: false,
                    isRelation: true,
                    organizeType: 1,
                    isLImitMain: false
                },
                options:this.adminInfo.structure_ids_arr||[],
                success:(data)=>{
                    console.log("data", data);
                    if(data instanceof Array){
                        this.adminInfo.structure_ids_arr = data;
                    }
                }
            });
        },
        checkUpdateInfo() {
            this.$refs["formDataRef"].validate((valid) => {
                if (valid) {
                    this.updateInfo();
                } else {
                    this.$Message.warning("请完善信息");
                }
            });
        },
        updateInfo() {
            let adminInfo = this.adminInfo || {};
            let structure_ids = adminInfo.structure_ids_arr.map(item=>item.id).join(',');
            console.log('save',structure_ids,adminInfo.structure_ids_arr)
            // !Number(adminInfo.id) && delete adminInfo.id;
            // delete adminInfo.structure_ids_arr;
            let params = {
                user_name:adminInfo.user_name,
                mobile_phone:adminInfo.mobile_phone,
                role_id:adminInfo.role_id,
                structure_ids
            }
            if(adminInfo.id){
                params.id=adminInfo.id;
            }
            let req = Number(adminInfo.id) ? "adminUserUpdate" : "adminUserAdd";
            this.pageLoading = true;
            return this.$MainApi[req]({
                data: {...params}
            })
                .then((res) => {
                    if (res.code) {
                        this.$Message.success(res.message || "操作成功");
                        this.dismiss();
                        this.$emit("confirm");
                    } else {
                        this.$Message.warning(res.message || "操作失败");
                    }
                    return res
                })
                .finally(() => {
                    this.pageLoading = false;
                });
        },
        search(){},
    },
    mounted() {},
};
</script>

<style lang="less" scoped>
@import "@/assets/css/variables.less";
.member-modal-area{
  .edit-cont-area{
    border: 0 none !important;
  }
  .edit-title{
    padding-left: 22px;
    font-size: 18px;
    margin-bottom: 20px;
    font-weight: bold;
  }
}
</style>