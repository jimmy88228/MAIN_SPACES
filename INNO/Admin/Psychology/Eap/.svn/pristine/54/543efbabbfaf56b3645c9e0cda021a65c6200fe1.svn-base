<template>
  <div class="material-box flex flex-col" :class="{'left':isShowTabs&&isShowClassify}">
    <div class="tabs" v-if="isShowTabs">
      <div class="tab-item pointer flex-c-c" :class="{'active':type == item.key}" v-for="item in tabList" :key="item.id">
        {{item.name}}
      </div>
    </div>
    <div class="content-box flex1" :class="{'classify':isShowClassify,'tipsBox':isShowTipsBox}">
      <div class="filter-box">
        <div class="classify-box flex-s-c" v-if="isShowClassify">
          <div class="classify-item flex-s-c pointer" :class="{'active':classifyId == item.id}" v-for="item in classifyList" :key="item.id">
            {{item.name}}
          </div>
        </div>
        <div class="tips-box flex-s-c" v-if="isShowTipsBox">
          <Checkbox style="margin-right:15px;" v-model="selectAll" @on-change="onCheckChange">
            <span style="font-size:16px;">全选</span>
          </Checkbox>
          <span class="m-r-5">{{typeInfo[type] && typeInfo[type].name}}</span>
          <span class="type-num">{{list.length}}</span>
          <span class="m-r-5">已选</span>
          <span class="type-num">{{curSelectedData.length}}</span>
          <a @click="onCheckChange(false)" v-if="curSelectedData.length>0">取消选择</a>
        </div>
      </div>
      <materialList :list="list" @selectItem="selectItem" :type="type"></materialList>
    </div>
  </div>
</template>

<script>
import materialList from "@/components/view-components/material-view/material-list.vue"
  export default {
    components: {
      materialList,
    },
    props: {
      type: { //video,audio,article,
        type: String,
        default: "normal"
      },
      isShowTabs:{
        type: Boolean,
        default: false
      },
      isShowClassify:{
        type: Boolean,
        default: false
      },
      fromType:{ //distribute,content,material
        type: String,
        default: "" 
      },
      isMulti: {
        type: Boolean,
        default: false
      },
      classifyId:{
        type:Number,
        default:0
      },
      selectedData:{
        type:Array,
        default:function(){
          return []
        }
      },
    },
    data() {
      return {
        curListId:0,
        selectAll:false,
        // selectedData:[],
        typeInfo:{
          "video":{
            name:"视频",
          },
          "audio":{
            name:"音频",
          },
          "article":{
            name:"文章",
          },
        },
        tabList: [{
          id:1,
          key:"video",
          name:"视频内容",
        },{
          id:2,
          key:"audio",
          name:"音频内容",
        },{
          id:3,
          key:"article",
          name:"文章内容",
        },{
          id:4,
          key:"psychic",
          name:"心理咨询师",
        }],
        classifyList:[
          {
            id:0,
            name:"全部",
          },{
            id:1,
            name:"EAP学习素材",
          },{
            id:2,
            name:"企业员工心理培训资料",
          },{
            id:3,
            name:"家庭心理教育视频",
          },
        ],
        list:[],
        curSelectedData:[],
      }
    },
    computed:{
      isShowTipsBox(){
        return !this.fromType || this.fromType=='distribute' || this.fromType=='material'
      }
    },
    methods: {
      selectItem(index,item) {
        if(item.isDistribute == 1)return;
        let bool = !!!item._selected;
        this.$set(this.list[index],'_selected',bool);
        if(bool){
          this.curSelectedData.push(item);
          this.selectAll = this.list.every(item=>item._selected);
        }else{
          this.selectAll = false;
          this.curSelectedData.splice(this.curSelectedData.findIndex(cur_item=>cur_item.id == item.id),1);
        }
        console.log('selectItemselectItem',bool,this.curSelectedData,item)
        this.$set(this.list[index],'_selected',bool);
      },
      loadData(){
        return new Promise((rs,rj)=>{
          setTimeout(() => {
            console.log('loadDataloadData',this.type,this.list,this.selectedData)
            this.list = [{
              id:1,
              src:"",
              title:"内容1",
              cover:"",
              description:"描述",
              isDistribute:0,
              _selected:false,
            },{
              id:2,
              src:"",
              title:"内容2",
              cover:"",
              description:"描述",
              isDistribute:0,
              _selected:false,
            },{
              id:3,
              src:"",
              title:"内容3",
              cover:"",
              description:"描述",
              isDistribute:0,
              _selected:false,
            }];
            let ids = this.selectedData.map(item=>item.id);
            let s_num = 0;
            this.list.forEach(item=>{
              item._selected = ids.includes(item.id);
              if(item._selected)s_num++;
            })
            this.selectAll = s_num == this.list.length;
            rs();
          }, 500);
        }) 
      },
      getData(){
        return this.curSelectedData
      },
      onCheckChange(bool){
        this.curSelectedData = this.list.filter(item=>{
          item._selected = !!bool;
          return !!bool;
        })
        this.selectAll = !!bool;
      },
    },
    watch:{
      type:{
        handler(nV){
          this.loadData();
        },
        immediate:true
      },
      selectedData:{
        handler(nV){
          this.curSelectedData = JSON.parse(JSON.stringify(nV));
        },
        immediate:true
      }
    },
  }
</script>

<style lang="less" scoped>
.material-box{
  position: relative;
  width: 100%;
  color: #7f7f7f;
  font-size: 16px; 
  &.left{
    flex-direction: row;
    .tabs{
      width:132px;
      border-right: 1px solid #EFEFEF;
      height: 100%;
      display: block;
    }
    .tab-item{
      text-align: center;
      padding-right: 0;
      height: 44px;
    }
  }
  .tabs{
    width: 100%;
    height: 60px;
    display: flex;
    padding-left: 20px;
  }
  .tab-item{
    padding-right: 40px;
    height: 100%;
    &.active{
      color:#008ACB;
    }
  }
  .content-box{
    position: relative;
    padding-left: 20px;
    padding-right: 20px;
    &.classify{
      padding-top: 44px;
      &.tipsBox{
        padding-top:114px;
      };
    }
    &.tipsBox{
      padding-top:70px;
    }; 
  }
  .filter-box{
    position:absolute;
    top: 0;
  }
  .classify-box{
  }
  .classify-item{
    min-width: 40px;
    min-height: 44px;
    padding: 0 20px;
    color: #333;
    border-radius: 4px;
    &.active{
      background: #F2FBFF;
      color: #008ACB;
    }
  }
  .tips-box{
    min-height: 50px;
    margin: 10px 0;
  }
  .type-num{
    color: #333;
    margin-right: 22px;
  } 
}
</style>