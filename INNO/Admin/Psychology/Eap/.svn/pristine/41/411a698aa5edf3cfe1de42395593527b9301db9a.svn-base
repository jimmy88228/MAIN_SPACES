<template>
    <div class="ad-form">
        <div class="form-title">图片模块组件</div>
        <Form ref="formValidate" :model="dynamic_setting" label-position="top">
            <div class="content-box">
                <FormItem label="模板类型" prop="type">
                    <RadioGroup v-model="dynamic_setting.type" size="small" type="button">
                        <Radio label="t1">
                            静态图
                        </Radio>
                        <Radio label="t2">
                            轮播图
                        </Radio>
                    </RadioGroup>
                </FormItem>
                <template v-if="dynamic_setting.type == 't1'">
                    <FormItem label="一列展示图片数量">
                        <RadioGroup v-model="dynamic_setting.row">
                            <Radio :label="1">1张</Radio>
                            <Radio :label="2">2张</Radio>
                            <Radio :label="3">3张</Radio>
                            <Radio :label="4">4张</Radio>
                            <Radio :label="5">5张</Radio>
                        </RadioGroup>
                    </FormItem>
                    <FormItem label="只在一行内展示，多出部分左右滑动">
                        <i-switch v-model="dynamic_setting.open_slide" size="large">
                            <span slot="open">启用</span>
                            <span slot="close">关闭</span>
                        </i-switch>
                    </FormItem>
                    <FormItem label="图片间距（有背景色的情况下，间距效果会更佳）">
                        <Slider v-model="dynamic_setting.gutter" :min="0" :max="30" show-input style="margin:0 30px 0 10px;"></Slider>
                    </FormItem>
                </template>
                <template v-else-if="dynamic_setting.type == 't2'">
                    <FormItem label="自动轮播">
                        <i-switch v-model="dynamic_setting.autoPlay" size="large">
                            <span slot="open">启用</span>
                            <span slot="close">关闭</span>
                        </i-switch>
                    </FormItem>
                    <FormItem label="指示灯">
                        <RadioGroup v-model="dynamic_setting.indicator">
                            <Radio label="dot">圆点</Radio>
                            <Radio label="rect">条状</Radio>
                            <Radio label="none">不显示</Radio>
                        </RadioGroup>
                    </FormItem>
                    <FormItem label="显示方式">
                        <RadioGroup v-model="dynamic_setting.showStyle">
                            <Radio :label="1">整屏轮播</Radio>
                            <Radio :label="2">左右滑动</Radio>
                            <Radio :label="3">浮窗轮播</Radio>
                        </RadioGroup>
                    </FormItem>
                </template>
            </div>
            <div class="content-box">
                <!--( 只有一个分组时，不会显示Tab头 )-->
                <!-- <draggable ghost-class="ghost" :list="compInfo.module_data.imagesGroup" :group="{name:'imagesGroup'}" handle=".handle_group" v-bind="dragOptions"></draggable> -->
                    <!-- <FormItem v-if="compInfo.module_data.imagesGroup != null && compInfo.module_data.imagesGroup.length > 1 " label="切换当前Tab ( 仅用于预览效果 )">
                        <RadioGroup v-model="dynamic_setting.currTab">
                            <Radio v-for="(citem,cindex) in compInfo.module_data.imagesGroup" :key="cindex" :label="'tab'+cindex">{{ citem.name }}</Radio>
                        </RadioGroup>
                    </FormItem> --> 
                    <div class="content-title">内容设置</div>
                    <div v-for="(item,index) in compInfo.module_data.imagesGroup" :name="index" :key="index" class="group-item-list" @click.native="divClick(index)">
                        <!-- <Icon type="ios-close-circle" class="close" title="移除" @click.stop="removeGroup(index)" />
                        <Icon type="md-apps" class="handle_group" title="拖拽排序" />
                        <div>
                            分组#{{index+1}} 名称
                            <Input v-model="item.name" placeholder="请输入分组标题" style="width:180px;" size="small" maxlength="8" show-word-limit></Input>
                        </div> -->

                        <imageAdItemForm :pageInfo="pageInfo" :currIndex="currIndex" :groupItem="item" :groupIndex="index" @on-change="onImagesListChange"></imageAdItemForm>

                    </div>
                    <div class="add-group-area" v-if="compInfo.module_data.imagesGroup && compInfo.module_data.imagesGroup.length == 0">
                        <Button long @click="addGroup">添加广告组</Button>
                    </div>
            </div>
        </Form>

    </div>
</template>

<script>
/**
 * 图片广告小工具
 */
import draggable from "vuedraggable";
import imageAdItemForm from "./image-ad-form-item.vue";

export default {
    name: "imageAdForm",
    components: {
        draggable,
        imageAdItemForm,
    },
    props: {
        compInfo: {
            type: Object,
            default: ()=>{
                return {}
            },
        },
        pageInfo: {
            type: Object,
            default: ()=>{
                return {}
            },
        },
        currIndex: {
            type: [Number, String],
            default: 0,
        },
    },
    inheritAttrs: false,
    data() {
        return {
            dynamic_setting: {
                type: "t1",
                row: 1,
                gutter: 0,
                indicator: 3,
                open_slide: false,
                currTab: "tab0",
            },
            module_data: {
                imagesGroup: []
            },
            drag: false,
        };
    },
    computed: {
        dragOptions() {
            return {
                animation: 200,
                group: "description",
                disabled: false,
                ghostClass: "ghost",
            };
        },
    },
    methods: {
        // 初始化
        init() {
            this.dynamic_setting = this.compInfo.dynamic_setting;
            this.module_data = this.compInfo.module_data;
            console.log('初始化1 dynamic_setting + module_data',JSON.parse(JSON.stringify(this.compInfo)))
            if (!this.dynamic_setting.type)
                this.$set(this.dynamic_setting, "type", "t1");
            if (!this.dynamic_setting.autoPlay)
                this.$set(this.dynamic_setting, "autoPlay", true);
            if (!this.dynamic_setting.row)
                this.$set(this.dynamic_setting, "row", 1);
            if (!this.dynamic_setting.interval)
                this.$set(this.dynamic_setting, "interval", 3);
            if (!this.dynamic_setting.indicator)
                this.$set(this.dynamic_setting, "indicator", "dot");
            if (!this.dynamic_setting.showTitle)
                this.$set(this.dynamic_setting, "showTitle", true);
            if (!this.dynamic_setting.open_slide)
                this.$set(this.dynamic_setting, "open_slide", false);
            if (!this.dynamic_setting.currTab)
                this.$set(this.dynamic_setting, "currTab", "tab0");
            if (!this.dynamic_setting.showStyle)
                this.$set(this.dynamic_setting, "showStyle", 1);
            if (!this.module_data.imagesGroup) {
                this.$set(this.compInfo.module_data, "imagesGroup", []);
            }
            console.log('初始化2 dynamic_setting + module_data',JSON.parse(JSON.stringify(this.compInfo)))
        },
        // 添加分组
        addGroup() {
            this.compInfo.module_data.imagesGroup.push({
                name: "分组名",
                images: [],
            });
        },
        // 移除分组
        removeGroup(index) {
            this.$Modal.confirm({
                title: "操作提示",
                content: "确定删除分组吗？",
                okText: "确定",
                cancelText: "取消",
                onOk: () => {
                    this.$delete(this.module_data.imagesGroup, index);
                },
            });
        },
        // 指定广告图片列表的变动，回调
        onImagesListChange(obj) {
            this.$set(this.module_data.imagesGroup[obj.groupIndex], "images", obj.data);
        },
        // card 点击事件
        cardClick(index) {
            this.dynamic_setting.currTab = "tab" + index;
        },
    },
    watch: {
        compInfo: {
            handler(nV) {
                this.init(nV);
            },
            deep: true,
            immediate: true,
        },
    },
    mounted() {
    },
};
</script>

<style lang="less" scoped>
.ad-form {
    padding: 5px;

    .images-list-box {
        background-color: #efefef;
        padding: 8px 5px 5px 5px;
        border-radius: 5px;

        .ivu-form-item {
            margin-bottom: 5px;
        }
        .add-group-area {
            position: sticky;
            left: 0px;
            bottom: 0px;
            text-align: center;
            width: 100%;
            padding: 0px 10px;
            // background-color:#fff;
            .ivu-btn {
                box-shadow: 0 0 10px #999;
            }
        }
    }
    .group-item-list {
        border-radius: 5px;
        margin-bottom: 12px;
        position: relative;
        padding: 0px;
        background: #fff;
        font-size: 12px;
        .close {
            position: absolute;
            right: -10px;
            top: -10px;
            font-size: 10px;
            cursor: pointer;
            display: none;
            color: red;
            font-size: 22px;
        }
        .handle_group {
            position: absolute;
            right: 25px;
            top: -10px;
            font-size: 10px;
            cursor: move;
            display: none;
            color: #2d8cf0;
            font-size: 22px;
        }
        &:hover {
            .close,
            .handle_group {
                display: block;
            }
        }
    }
    .ghost {
        opacity: 0.5;
    }
    .form-title{
        background: #f8f8f8;
        padding: 10px 16px;
        border-radius: 4px;
        margin-bottom: 20px;
    }
    .content-box{
        background: rgba(239, 239, 239, 0.17);
        padding: 16px;
        border-radius: 4px;
        margin-bottom: 20px;
    }
    .content-title{
        margin-bottom: 10px;
        font-size: 13px;
    }
}
</style>
