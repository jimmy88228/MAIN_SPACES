<template>
    <div class="form-item-box">
        <draggable ghost-class="ghost" :list="videos" :group="{name:'imageList'}" handle=".handle_ad" v-bind="dragOptions" @start="dragStart" @end="dragEnd">
            <div v-for="(item,index) in videos" :name="index" :key="index" class="group-item">
                <Icon type="md-apps" class="handle_ad" title="拖拽排序" />
                <div class="title-box flex-s-c">
                    <Icon type="md-copy" style="font-size:18px;" @click="copy(item.title)"/>
                    <div class="title">{{item.title}}</div>
                    <div class="delete f-shrink-0 pointer" @click="removeImg(index)">删除</div>
                </div>
                <div class="item-box">
                    <div class="img-cover-box" :class="{'init':!!!item.cover}">
                        <img v-show="item.cover" class="img-cover" :src="item.cover" alt="">
                    </div>
                </div>
                <div class="set-cover">
                    <a @click="setCover(index)">设置封面</a>
                </div>
            </div>
        </draggable>

        <Button @click="selectContent" class="btn-box">
            <Icon type="md-add" size="18" class="m-r-5"></Icon>添加视频
        </Button>
    </div>
</template>

<script>
import draggable from "vuedraggable";
// import linkItem from "../../component/link-item/link-item";
// import linkTo from "@/views/my-components/link-to/link-to";
// import imageHotmapForm from "./image-hotmap-form";
// import imageEdit from "@/views/my-components/image-edit/image-edit";
// 载入videojs 组件
// import "video.js/dist/video-js.css";
// import { videoPlayer } from "vue-video-player";

export default {
    name: "imageAdItemForm",
    components: {
        draggable,
        // linkItem,
        // linkTo,
        // imageHotmapForm,
        // videoPlayer,
        // imageEdit,
    },
    props: {
        currIndex: {
            type: [Number, String],
            default: 0,
        },
        groupItem: {
            type: Object,
            default: {
                videos: [],
            },
        },
        groupIndex: {
            type: [Number, String],
            default: 0,
        },
    },
    computed: {
        dragOptions() {
            return {
                animation: 200,
                group: "description",
                disabled: false,
                ghostClass: "ghost",
            };
        },
        videos() {
            let groupItem = this.groupItem || {};
            let videos = groupItem.videos || [];
            // videos.map((item, index) => {
            //     if (!item.link) {
            //         this.$set(this.groupItem.videos[index], "link", {
            //             code: "",
            //             id: "",
            //             remark: "",
            //             url: "",
            //         });
            //     } else {
            //       if (!item.link.code) this.$set(this.groupItem.videos[index].link, "code", "");
            //       if (!item.link.id) this.$set(this.groupItem.videos[index].link, "id", "");
            //       if (!item.link.remark) this.$set(this.groupItem.videos[index].link, "remark", "");
            //       if (!item.link.url) this.$set(this.groupItem.videos[index].link, "url", "");
            //     }
            // });
            return videos;
        },
    },
    data() {
        return {
            // groupItem: {
            //   videos: [],
            // },
            panelVal: "1",
            drag: false,

            modalPlayShow: false,
            modalPlayLoading: false,

            // 播放器配置
            // playerOptions: {
            //   autoplay: true,
            //   sources: [
            //     {
            //       type: "video/mp4",
            //       src: "",
            //     },
            //   ],
            //   notSupportedMessage: "此视频暂无法播放，请稍后再试",
            // },
        };
    },
    methods: {
        // init() {
        //   // 双向绑定store 的数据
        //   let dataList = this.$store.state.app.pageCompList;
        //   this.groupItem =
        //     dataList[this.currIndex].setting.videosGroup[this.groupIndex];
        //   if (typeof this.groupItem.videos == "undefined") {
        //     this.$set(this.groupItem, "videos", []);
        //   }
        // }, 
        // 移除视频
        removeImg(index) {
            this.$Modal.confirm({
                title: "操作提示",
                content: "确定移除视频吗？",
                okText: "确定",
                cancelText: "取消",
                onOk: () => {
                    this.$delete(this.groupItem.videos, index);
                },
            });
        }, 
        clearImg(index) {
            this.$set(this.groupItem.videos[index], "img", "");
        },
        // 选择视频
        selectContent() {
          this.$UIModule({
            mode: "upload-view",
            props: {
                isMulti: true,
            },
            options: {},
            selectedData:this.groupItem.videos || "",
            success: (data) => {
                console.log("successsuccess", data);
                let videos = [];
                for(let i = 0; i < data.length; i++){
                    videos.push({
                        src: data[i],
                        title: `视频${i}`,
                        cover:"",
                        summary:"摘要摘要摘要",
                    })
                }
                this.$set(this.groupItem, "videos", videos);
                console.log("successsuccess", data , this.groupItem.videos); 
            },
          });
        },
        //设置封面
        setCover(index){
            let cur_item = this.groupItem.videos[index] || {};
            this.$UIModule({
                mode: "upload-view", 
                options: {},
                selectedData: cur_item || "",
                success: (data) => {
                    let cover = data || "";
                    this.$set(this.groupItem.videos[index], "cover", cover);
                    console.log("successsuccess", data , this.groupItem.videos); 
                },
            }); 
        },
        onPlayVideo(src) {
          this.modalPlayShow = true;
          this.modalPlayLoading = true;
          this.playerOptions.sources[0].src = src;
        },
        // 拖动开始
        dragStart(e) {
            this.drag = true;
        },
        // 拖动结束
        dragEnd(e) {
            this.drag = false;
        },
    },
    watch: {},
    mounted() {
        // this.init();
    },
};
</script>
	
<style lang="less" scoped>
.form-item-box {
    .group-item {
        border-radius: 4px;
        margin-bottom: 12px;
        position: relative;
        background: rgba(239, 239, 239, 0.6);
        .handle_ad {
            position: absolute;
            right: -10px;
            top: -10px;
            font-size: 10px;
            cursor: move;
            display: none;
            color: #2d8cf0;
            font-size: 22px;
        }
        &:hover { 
            .handle_ad {
                display: block;
            }
        }
    }
    .ghost {
        opacity: 0.5;
        background: #eee;
    }
    .link-to .link-tags {
        max-width: 115px;
    }
    .ivu-radio-group-button.ivu-radio-group-small .ivu-radio-wrapper {
        font-size: 12px;
    }

    .title-box{
        padding: 10px 9px;
        border-radius: 4px;
        font-size: 12px;
        color: #7f7f7f;
    }
    .title{
        width: 156px;
        padding-left: 4px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: pre;
    }
    .item-box{
        padding-left: 20px;
    }
    .set-cover{
        padding: 8px 0 13px 20px;
    }
    .img-cover-box{
        width: 88px;
        height: 88px;
        overflow: hidden; 
        border-radius: 6px;
        &.init{
            background: #171717;
        }
    }
    .img-cover{
        width: 100%;
        height: 100%;
        display: block;
    }
    .btn-box{
        background: #FFFFFF;
        border-radius: 4px;
        border: 1px solid #ECECEC;
        width:100%;
        height: 40px;
    }

}
</style>